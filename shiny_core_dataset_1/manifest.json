{
  "version": 1,
  "locale": "en_US",
  "platform": "3.6.3",
  "metadata": {
    "appmode": "shiny",
    "primary_rmd": null,
    "primary_html": null,
    "content_category": null,
    "has_parameters": false
  },
  "packages": {
    "BH": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "BH",
        "Type": "Package",
        "Title": "Boost C++ Header Files",
        "Version": "1.72.0-3",
        "Date": "2019-12-28",
        "Author": "Dirk Eddelbuettel, John W. Emerson and Michael J. Kane",
        "Maintainer": "Dirk Eddelbuettel <edd@debian.org>",
        "Description": "Boost provides free peer-reviewed portable C++ source \n libraries.  A large part of Boost is provided as C++ template code\n which is resolved entirely at compile-time without linking.  This \n package aims to provide the most useful subset of Boost libraries \n for template use among CRAN packages. By placing these libraries in \n this package, we offer a more efficient distribution system for CRAN \n as replication of this code in the sources of other packages is \n avoided. As of release 1.72.0-3, the following Boost libraries are\n included: 'accumulators' 'algorithm' 'align' 'any' 'atomic' 'bimap'\n 'bind' 'circular_buffer' 'compute' 'concept' 'config' 'container'\n 'date_time' 'detail' 'dynamic_bitset' 'exception' 'flyweight'\n 'foreach' 'functional' 'fusion' 'geometry' 'graph' 'heap' 'icl'\n 'integer' 'interprocess' 'intrusive' 'io' 'iostreams' 'iterator'\n 'math' 'move' 'mp11' 'mpl' 'multiprcecision' 'numeric' 'pending'\n 'phoenix' 'polygon' 'preprocessor' 'propery_tree' 'random' 'range'\n 'scope_exit' 'smart_ptr' 'sort' 'spirit' 'tuple' 'type_traits'\n 'typeof' 'unordered' 'utility' 'uuid'.",
        "License": "BSL-1.0",
        "URL": "https://github.com/eddelbuettel/bh",
        "BugReports": "https://github.com/eddelbuettel/bh/issues",
        "NeedsCompilation": "no",
        "Packaged": "2019-12-28 14:48:54.73981 UTC; edd",
        "Repository": "CRAN",
        "Date/Publication": "2020-01-08 23:20:08 UTC",
        "Built": "R 3.6.3; ; 2020-07-21 17:44:38 UTC; unix"
      }
    },
    "DBI": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "DBI",
        "Title": "R Database Interface",
        "Version": "1.1.0",
        "Date": "2019-12-15",
        "Authors@R": "\n    c(person(given = \"R Special Interest Group on Databases (R-SIG-DB)\",\n             role = \"aut\"),\n      person(given = \"Hadley\",\n             family = \"Wickham\",\n             role = \"aut\"),\n      person(given = \"Kirill\",\n             family = \"M\\u00fcller\",\n             role = c(\"aut\", \"cre\"),\n             email = \"krlmlr+r@mailbox.org\",\n             comment = c(ORCID = \"0000-0002-1416-3412\")),\n      person(given = \"R Consortium\",\n             role = \"fnd\"))",
        "Description": "A database interface definition for communication\n    between R and relational database management systems.  All classes in\n    this package are virtual and need to be extended by the various R/DBMS\n    implementations.",
        "License": "LGPL (>= 2.1)",
        "URL": "http://r-dbi.github.io/DBI, https://github.com/r-dbi/DBI",
        "BugReports": "https://github.com/r-dbi/DBI/issues",
        "Depends": "methods, R (>= 3.0.0)",
        "Suggests": "blob, covr, hms, knitr, magrittr, rmarkdown, rprojroot,\nRSQLite (>= 1.1-2), testthat, xml2",
        "VignetteBuilder": "knitr",
        "Encoding": "UTF-8",
        "RoxygenNote": "7.0.2",
        "Collate": "'hidden.R' 'DBObject.R' 'DBDriver.R' 'table.R'\n'DBConnection.R' 'ANSI.R' 'DBConnector.R' 'DBI-package.R'\n'DBResult.R' 'data-types.R' 'data.R' 'deprecated.R'\n'interpolate.R' 'list-pairs.R' 'quote.R' 'rd.R' 'rownames.R'\n'table-create.R' 'table-insert.R' 'transactions.R'",
        "NeedsCompilation": "no",
        "Packaged": "2019-12-15 08:59:43 UTC; kirill",
        "Author": "R Special Interest Group on Databases (R-SIG-DB) [aut],\n  Hadley Wickham [aut],\n  Kirill Müller [aut, cre] (<https://orcid.org/0000-0002-1416-3412>),\n  R Consortium [fnd]",
        "Maintainer": "Kirill Müller <krlmlr+r@mailbox.org>",
        "Repository": "CRAN",
        "Date/Publication": "2019-12-15 09:50:02 UTC",
        "Built": "R 3.6.3; ; 2020-07-21 17:43:26 UTC; unix"
      }
    },
    "DT": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "DT",
        "Type": "Package",
        "Title": "A Wrapper of the JavaScript Library 'DataTables'",
        "Version": "0.19",
        "Authors@R": "c(\n    person(\"Yihui\", \"Xie\", email = \"xie@yihui.name\", role = c(\"aut\", \"cre\")),\n    person(\"Joe\", \"Cheng\", role = \"aut\"),\n    person(\"Xianying\", \"Tan\", role = \"aut\"),\n    person(\"JJ\", \"Allaire\", role = \"ctb\"),\n    person(\"Maximilian\", \"Girlich\", role = \"ctb\"),\n    person(\"Greg\", \"Freedman Ellis\", role = \"ctb\"),\n    person(\"Johannes\", \"Rauh\", role = \"ctb\"),\n    person(\"SpryMedia Limited\", role = c(\"ctb\", \"cph\"), comment = \"DataTables in htmlwidgets/lib\"),\n    person(\"Brian\", \"Reavis\", role = c(\"ctb\", \"cph\"), comment = \"selectize.js in htmlwidgets/lib\"),\n    person(\"Leon\", \"Gersen\", role = c(\"ctb\", \"cph\"), comment = \"noUiSlider in htmlwidgets/lib\"),\n    person(\"Bartek\", \"Szopka\", role = c(\"ctb\", \"cph\"), comment = \"jquery.highlight.js in htmlwidgets/lib\"),\n    person(\"Alex\", \"Pickering\", role = c(\"ctb\")),\n    person(\"RStudio, PBC\", role = \"cph\")\n    )",
        "Maintainer": "Yihui Xie <xie@yihui.name>",
        "Description": "Data objects in R can be rendered as HTML tables using the\n    JavaScript library 'DataTables' (typically via R Markdown or Shiny). The\n    'DataTables' library has been included in this R package. The package name\n    'DT' is an abbreviation of 'DataTables'.",
        "URL": "https://github.com/rstudio/DT",
        "BugReports": "https://github.com/rstudio/DT/issues",
        "License": "GPL-3 | file LICENSE",
        "Imports": "htmltools (>= 0.3.6), htmlwidgets (>= 1.3), jsonlite (>=\n0.9.16), magrittr, crosstalk, jquerylib, promises",
        "Suggests": "knitr (>= 1.8), rmarkdown, shiny (>= 1.6), bslib, testit",
        "VignetteBuilder": "knitr",
        "RoxygenNote": "7.1.1",
        "Encoding": "UTF-8",
        "NeedsCompilation": "no",
        "Packaged": "2021-09-01 14:36:40 UTC; yihui",
        "Author": "Yihui Xie [aut, cre],\n  Joe Cheng [aut],\n  Xianying Tan [aut],\n  JJ Allaire [ctb],\n  Maximilian Girlich [ctb],\n  Greg Freedman Ellis [ctb],\n  Johannes Rauh [ctb],\n  SpryMedia Limited [ctb, cph] (DataTables in htmlwidgets/lib),\n  Brian Reavis [ctb, cph] (selectize.js in htmlwidgets/lib),\n  Leon Gersen [ctb, cph] (noUiSlider in htmlwidgets/lib),\n  Bartek Szopka [ctb, cph] (jquery.highlight.js in htmlwidgets/lib),\n  Alex Pickering [ctb],\n  RStudio, PBC [cph]",
        "Repository": "CRAN",
        "Date/Publication": "2021-09-02 14:51:10 UTC",
        "Built": "R 3.6.3; ; 2021-09-23 23:30:40 UTC; unix"
      }
    },
    "MASS": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "MASS",
        "Priority": "recommended",
        "Version": "7.3-51.6",
        "Date": "2020-04-26",
        "Revision": "$Rev: 3512 $",
        "Depends": "R (>= 3.1.0), grDevices, graphics, stats, utils",
        "Imports": "methods",
        "Suggests": "lattice, nlme, nnet, survival",
        "Authors@R": "c(person(\"Brian\", \"Ripley\", role = c(\"aut\", \"cre\", \"cph\"),\n                    email = \"ripley@stats.ox.ac.uk\"),\n\t     person(\"Bill\", \"Venables\", role = \"ctb\"),\n\t     person(c(\"Douglas\", \"M.\"), \"Bates\", role = \"ctb\"),\n\t     person(\"Kurt\", \"Hornik\", role = \"trl\",\n                     comment = \"partial port ca 1998\"),\n\t     person(\"Albrecht\", \"Gebhardt\", role = \"trl\",\n                     comment = \"partial port ca 1998\"),\n\t     person(\"David\", \"Firth\", role = \"ctb\"))",
        "Description": "Functions and datasets to support Venables and Ripley,\n  \"Modern Applied Statistics with S\" (4th edition, 2002).",
        "Title": "Support Functions and Datasets for Venables and Ripley's MASS",
        "LazyData": "yes",
        "ByteCompile": "yes",
        "License": "GPL-2 | GPL-3",
        "URL": "http://www.stats.ox.ac.uk/pub/MASS4/",
        "Contact": "<MASS@stats.ox.ac.uk>",
        "NeedsCompilation": "yes",
        "Packaged": "2020-04-26 09:33:23 UTC; ripley",
        "Author": "Brian Ripley [aut, cre, cph],\n  Bill Venables [ctb],\n  Douglas M. Bates [ctb],\n  Kurt Hornik [trl] (partial port ca 1998),\n  Albrecht Gebhardt [trl] (partial port ca 1998),\n  David Firth [ctb]",
        "Maintainer": "Brian Ripley <ripley@stats.ox.ac.uk>",
        "Repository": "CRAN",
        "Date/Publication": "2020-04-26 10:31:59 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 'Tue, 28 Apr 2020 17:32:43 +0000'; unix"
      }
    },
    "Matrix": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "Matrix",
        "Version": "1.2-18",
        "Date": "2019-11-25",
        "Priority": "recommended",
        "Title": "Sparse and Dense Matrix Classes and Methods",
        "Contact": "Doug and Martin <Matrix-authors@R-project.org>",
        "Maintainer": "Martin Maechler <mmaechler+Matrix@gmail.com>",
        "Authors@R": "c(person(\"Douglas\",\"Bates\", role=\"aut\")\n , person(\"Martin\",\"Maechler\", role = c(\"aut\",\"cre\"), email=\"mmaechler+Matrix@gmail.com\",\n          comment = c(ORCID = \"0000-0002-8685-9910\"))\n , person(\"Timothy A.\", \"Davis\", role=\"ctb\",\n           comment = c(\"SuiteSparse and 'cs' C libraries, notably CHOLMOD, AMD;\n\t\t       collaborators listed in\n\t\t\tdir(pattern = '^[A-Z]+[.]txt$', full.names=TRUE,\n\t\t\t    system.file('doc', 'SuiteSparse', package='Matrix'))\"))\n , person(\"Jens\", \"Oehlschlägel\", role=\"ctb\", comment=\"initial nearPD()\")\n , person(\"Jason\", \"Riedy\", role=\"ctb\",\n          comment = c(\"condest() and onenormest() for octave\",\n \t  \t      \"Copyright: Regents of the University of California\"))\n , person(\"R Core Team\", role = \"ctb\", comment=\"base R matrix implementation\")\n )",
        "Description": "A rich hierarchy of matrix classes, including triangular,\n   symmetric, and diagonal matrices, both dense and sparse and with\n   pattern, logical and numeric entries.   Numerous methods for and\n   operations on these matrices, using 'LAPACK' and 'SuiteSparse' libraries.",
        "Depends": "R (>= 3.2.0)",
        "Imports": "methods, graphics, grid, stats, utils, lattice",
        "Suggests": "expm, MASS",
        "Enhances": "MatrixModels, graph, SparseM, sfsmisc",
        "Encoding": "UTF-8",
        "LazyData": "no",
        "LazyDataNote": "not possible, since we use data/*.R *and* our classes",
        "BuildResaveData": "no",
        "License": "GPL (>= 2) | file LICENCE",
        "URL": "http://Matrix.R-forge.R-project.org/",
        "BugReports": "https://r-forge.r-project.org/tracker/?group_id=61",
        "NeedsCompilation": "yes",
        "Packaged": "2019-11-26 17:17:19 UTC; maechler",
        "Author": "Douglas Bates [aut],\n  Martin Maechler [aut, cre] (<https://orcid.org/0000-0002-8685-9910>),\n  Timothy A. Davis [ctb] (SuiteSparse and 'cs' C libraries, notably\n    CHOLMOD, AMD; collaborators listed in dir(pattern =\n    '^[A-Z]+[.]txt$', full.names=TRUE, system.file('doc',\n    'SuiteSparse', package='Matrix'))),\n  Jens Oehlschlägel [ctb] (initial nearPD()),\n  Jason Riedy [ctb] (condest() and onenormest() for octave, Copyright:\n    Regents of the University of California),\n  R Core Team [ctb] (base R matrix implementation)",
        "Repository": "CRAN",
        "Date/Publication": "2019-11-27 15:20:02 UTC",
        "Built": "R 3.6.1; x86_64-pc-linux-gnu; 'Sat, 07 Dec 2019 00:26:19 +0000'; unix"
      }
    },
    "R.methodsS3": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "R.methodsS3",
        "Version": "1.8.0",
        "Depends": "R (>= 2.13.0)",
        "Imports": "utils",
        "Suggests": "codetools",
        "Title": "S3 Methods Simplified",
        "Authors@R": "c(person(\"Henrik\", \"Bengtsson\", role=c(\"aut\", \"cre\", \"cph\"),\n                                          email = \"henrikb@braju.com\"))",
        "Author": "Henrik Bengtsson [aut, cre, cph]",
        "Maintainer": "Henrik Bengtsson <henrikb@braju.com>",
        "Description": "Methods that simplify the setup of S3 generic functions and S3 methods.  Major effort has been made in making definition of methods as simple as possible with a minimum of maintenance for package developers.  For example, generic functions are created automatically, if missing, and naming conflict are automatically solved, if possible.  The method setMethodS3() is a good start for those who in the future may want to migrate to S4.  This is a cross-platform package implemented in pure R that generates standard S3 methods.",
        "License": "LGPL (>= 2.1)",
        "LazyLoad": "TRUE",
        "URL": "https://github.com/HenrikBengtsson/R.methodsS3",
        "BugReports": "https://github.com/HenrikBengtsson/R.methodsS3/issues",
        "NeedsCompilation": "no",
        "Packaged": "2020-02-14 03:35:57 UTC; hb",
        "Repository": "CRAN",
        "Date/Publication": "2020-02-14 07:10:20 UTC",
        "Built": "R 3.6.3; ; 2020-07-21 17:42:30 UTC; unix"
      }
    },
    "R.oo": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "R.oo",
        "Version": "1.23.0",
        "Depends": "R (>= 2.13.0), R.methodsS3 (>= 1.7.1)",
        "Imports": "methods, utils",
        "Suggests": "tools",
        "Title": "R Object-Oriented Programming with or without References",
        "Authors@R": "c(person(\"Henrik\", \"Bengtsson\", role=c(\"aut\", \"cre\", \"cph\"),\n                                          email = \"henrikb@braju.com\"))",
        "Author": "Henrik Bengtsson [aut, cre, cph]",
        "Maintainer": "Henrik Bengtsson <henrikb@braju.com>",
        "Description": "Methods and classes for object-oriented programming in R with or without references.  Large effort has been made on making definition of methods as simple as possible with a minimum of maintenance for package developers.  The package has been developed since 2001 and is now considered very stable.  This is a cross-platform package implemented in pure R that defines standard S3 classes without any tricks.",
        "License": "LGPL (>= 2.1)",
        "LazyLoad": "TRUE",
        "URL": "https://github.com/HenrikBengtsson/R.oo",
        "BugReports": "https://github.com/HenrikBengtsson/R.oo/issues",
        "NeedsCompilation": "no",
        "Packaged": "2019-11-03 02:01:44 UTC; hb",
        "Repository": "CRAN",
        "Date/Publication": "2019-11-03 08:40:02 UTC",
        "Built": "R 3.6.3; ; 2020-07-21 17:44:45 UTC; unix"
      }
    },
    "R.utils": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "R.utils",
        "Version": "2.9.2",
        "Depends": "R (>= 2.14.0), R.oo (>= 1.23.0)",
        "Imports": "methods, utils, tools, R.methodsS3 (>= 1.7.1)",
        "Suggests": "digest (>= 0.6.10)",
        "Title": "Various Programming Utilities",
        "Authors@R": "c(person(\"Henrik\", \"Bengtsson\", role=c(\"aut\", \"cre\", \"cph\"),\n                                          email = \"henrikb@braju.com\"))",
        "Author": "Henrik Bengtsson [aut, cre, cph]",
        "Maintainer": "Henrik Bengtsson <henrikb@braju.com>",
        "Description": "Utility functions useful when programming and developing R packages.",
        "License": "LGPL (>= 2.1)",
        "LazyLoad": "TRUE",
        "URL": "https://github.com/HenrikBengtsson/R.utils",
        "BugReports": "https://github.com/HenrikBengtsson/R.utils/issues",
        "NeedsCompilation": "no",
        "Packaged": "2019-12-07 19:30:11 UTC; hb",
        "Repository": "CRAN",
        "Date/Publication": "2019-12-08 07:50:02 UTC",
        "Built": "R 3.6.3; ; 2020-07-21 17:48:34 UTC; unix"
      }
    },
    "R6": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "R6",
        "Title": "Encapsulated Classes with Reference Semantics",
        "Version": "2.4.1",
        "Authors@R": "person(\"Winston\", \"Chang\", role = c(\"aut\", \"cre\"), email = \"winston@stdout.org\")",
        "Description": "Creates classes with reference semantics, similar to R's built-in\n    reference classes. Compared to reference classes, R6 classes are simpler\n    and lighter-weight, and they are not built on S4 classes so they do not\n    require the methods package. These classes allow public and private\n    members, and they support inheritance, even when the classes are defined in\n    different packages.",
        "Depends": "R (>= 3.0)",
        "Suggests": "knitr, microbenchmark, pryr, testthat, ggplot2, scales",
        "License": "MIT + file LICENSE",
        "URL": "https://r6.r-lib.org, https://github.com/r-lib/R6/",
        "LazyData": "true",
        "BugReports": "https://github.com/r-lib/R6/issues",
        "RoxygenNote": "6.1.1",
        "NeedsCompilation": "no",
        "Packaged": "2019-11-12 20:00:15 UTC; winston",
        "Author": "Winston Chang [aut, cre]",
        "Maintainer": "Winston Chang <winston@stdout.org>",
        "Repository": "CRAN",
        "Date/Publication": "2019-11-12 22:50:03 UTC",
        "Built": "R 3.6.3; ; 2020-07-21 17:41:01 UTC; unix"
      }
    },
    "RColorBrewer": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "RColorBrewer",
        "Version": "1.1-2",
        "Date": "2014-12-07",
        "Title": "ColorBrewer Palettes",
        "Authors@R": "c(person(given = \"Erich\", family = \"Neuwirth\", role = c(\"aut\",\n        \"cre\"), email = \"erich.neuwirth@univie.ac.at\"))",
        "Author": "Erich Neuwirth [aut, cre]",
        "Maintainer": "Erich Neuwirth <erich.neuwirth@univie.ac.at>",
        "Depends": "R (>= 2.0.0)",
        "Description": "Provides color schemes for maps (and other graphics)\n        designed by Cynthia Brewer as described at http://colorbrewer2.org",
        "License": "Apache License 2.0",
        "Packaged": "2014-12-06 23:59:42 UTC; neuwirth",
        "NeedsCompilation": "no",
        "Repository": "CRAN",
        "Date/Publication": "2014-12-07 08:28:55",
        "Built": "R 3.6.3; ; 2020-07-21 17:38:47 UTC; unix"
      }
    },
    "RPostgreSQL": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "RPostgreSQL",
        "Version": "0.7",
        "Date": "2021-07-26",
        "Title": "R Interface to the 'PostgreSQL' Database System",
        "Author": "Joe Conway, Dirk Eddelbuettel, Tomoaki Nishiyama, Sameer Kumar Prayaga (during 2008), Neil Tiffin",
        "Maintainer": "Tomoaki Nishiyama <tomoakin@staff.kanazawa-u.ac.jp>",
        "Description": "Database interface and 'PostgreSQL' driver for 'R'.\n This package provides a Database Interface 'DBI' compliant \n driver for 'R' to access 'PostgreSQL' database systems.  \n In order to build and install this package from source, 'PostgreSQL' \n itself must be present your system to provide 'PostgreSQL' functionality \n via its libraries and header files. These files are provided as\n 'postgresql-devel' package under some Linux distributions.\n On 'macOS' and 'Microsoft Windows' system the attached 'libpq' library source will be used.",
        "LazyLoad": "true",
        "Depends": "R (>= 2.9.0), methods, DBI (>= 0.3)",
        "License": "GPL-3 | file LICENSE",
        "Copyright": "Authors listed above, PostgreSQL Global Development Group,\nand The Regents of the University of California",
        "Collate": "S4R.R zzz.R PostgreSQLSupport.R dbObjectId.R PostgreSQL.R",
        "URL": "https://github.com/tomoakin/RPostgreSQL,\nhttps://cran.r-project.org/package=DBI,\nhttps://www.postgresql.org",
        "NeedsCompilation": "yes",
        "Packaged": "2021-07-27 07:28:13 UTC; tomoaki",
        "Repository": "CRAN",
        "Date/Publication": "2021-07-27 09:00:01 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2021-09-23 23:28:47 UTC; unix"
      }
    },
    "RSQLite": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "RSQLite",
        "Title": "'SQLite' Interface for R",
        "Version": "2.2.8",
        "Date": "2021-08-21",
        "Authors@R": "\n    c(person(given = \"Kirill\",\n             family = \"M\\u00fcller\",\n             role = c(\"aut\", \"cre\"),\n             email = \"krlmlr+r@mailbox.org\",\n             comment = c(ORCID = \"0000-0002-1416-3412\")),\n      person(given = \"Hadley\",\n             family = \"Wickham\",\n             role = \"aut\"),\n      person(given = c(\"David\", \"A.\"),\n             family = \"James\",\n             role = \"aut\"),\n      person(given = \"Seth\",\n             family = \"Falcon\",\n             role = \"aut\"),\n      person(family = \"SQLite Authors\",\n             role = \"ctb\",\n             comment = \"for the included SQLite sources\"),\n      person(given = \"Liam\",\n             family = \"Healy\",\n             role = \"ctb\",\n             comment = \"for the included SQLite sources\"),\n      person(given = \"R Consortium\",\n             role = \"fnd\"),\n      person(family = \"RStudio\",\n             role = \"cph\"))",
        "Description": "Embeds the 'SQLite' database engine in R and\n    provides an interface compliant with the 'DBI' package. The source for\n    the 'SQLite' engine is included.",
        "License": "LGPL (>= 2.1)",
        "URL": "https://rsqlite.r-dbi.org, https://github.com/r-dbi/RSQLite",
        "BugReports": "https://github.com/r-dbi/RSQLite/issues",
        "Depends": "R (>= 3.1.0)",
        "Imports": "bit64, blob (>= 1.2.0), DBI (>= 1.1.0), memoise, methods,\npkgconfig, Rcpp (>= 1.0.7)",
        "Suggests": "DBItest (>= 1.7.0), gert, gh, knitr, rmarkdown, hms, rvest,\ntestthat, xml2",
        "LinkingTo": "plogr (>= 0.2.0), Rcpp",
        "VignetteBuilder": "knitr",
        "Encoding": "UTF-8",
        "RoxygenNote": "7.1.1",
        "Collate": "'RcppExports.R' 'SQLiteConnection.R' 'SQLiteDriver.R'\n'SQLiteResult.R' 'coerce.R' 'connect.R' 'copy.R' 'datasetsDb.R'\n'deprecated.R' 'export.R' 'extensions.R' 'names.R'\n'pkgconfig.R' 'query.R' 'regularExpressions.R' 'rownames.R'\n'table.R' 'transactions.R' 'utils.R' 'zzz.R'",
        "NeedsCompilation": "yes",
        "Packaged": "2021-08-21 15:40:06 UTC; kirill",
        "Author": "Kirill Müller [aut, cre] (<https://orcid.org/0000-0002-1416-3412>),\n  Hadley Wickham [aut],\n  David A. James [aut],\n  Seth Falcon [aut],\n  SQLite Authors [ctb] (for the included SQLite sources),\n  Liam Healy [ctb] (for the included SQLite sources),\n  R Consortium [fnd],\n  RStudio [cph]",
        "Maintainer": "Kirill Müller <krlmlr+r@mailbox.org>",
        "Repository": "CRAN",
        "Date/Publication": "2021-08-21 16:30:02 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2021-09-23 23:31:18 UTC; unix"
      }
    },
    "Rcpp": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "Rcpp",
        "Title": "Seamless R and C++ Integration",
        "Version": "1.0.7",
        "Date": "2021-07-06",
        "Author": "Dirk Eddelbuettel, Romain Francois, JJ Allaire, Kevin Ushey, Qiang Kou,\n Nathan Russell, Inaki Ucar, Douglas Bates and John Chambers",
        "Maintainer": "Dirk Eddelbuettel <edd@debian.org>",
        "Description": "The 'Rcpp' package provides R functions as well as C++ classes which\n offer a seamless integration of R and C++. Many R data types and objects can be\n mapped back and forth to C++ equivalents which facilitates both writing of new\n code as well as easier integration of third-party libraries. Documentation\n about 'Rcpp' is provided by several vignettes included in this package, via the\n 'Rcpp Gallery' site at <https://gallery.rcpp.org>, the paper by Eddelbuettel and\n Francois (2011, <doi:10.18637/jss.v040.i08>), the book by Eddelbuettel (2013,\n <doi:10.1007/978-1-4614-6868-4>) and the paper by Eddelbuettel and Balamuta (2018,\n <doi:10.1080/00031305.2017.1375990>); see 'citation(\"Rcpp\")' for details.",
        "Imports": "methods, utils",
        "Suggests": "tinytest, inline, rbenchmark, pkgKitten (>= 0.1.2)",
        "URL": "http://www.rcpp.org, https://dirk.eddelbuettel.com/code/rcpp.html,\nhttps://github.com/RcppCore/Rcpp",
        "License": "GPL (>= 2)",
        "BugReports": "https://github.com/RcppCore/Rcpp/issues",
        "MailingList": "rcpp-devel@lists.r-forge.r-project.org",
        "RoxygenNote": "6.1.1",
        "NeedsCompilation": "yes",
        "Packaged": "2021-07-06 11:37:52 UTC; edd",
        "Repository": "CRAN",
        "Date/Publication": "2021-07-07 14:30:02 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2021-09-23 23:29:57 UTC; unix"
      }
    },
    "askpass": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "askpass",
        "Type": "Package",
        "Title": "Safe Password Entry for R, Git, and SSH",
        "Version": "1.1",
        "Authors@R": "person(\"Jeroen\", \"Ooms\", role = c(\"aut\", \"cre\"), \n    email = \"jeroen@berkeley.edu\", comment = c(ORCID = \"0000-0002-4035-0289\"))",
        "Description": "Cross-platform utilities for prompting the user for credentials or a \n    passphrase, for example to authenticate with a server or read a protected key.\n    Includes native programs for MacOS and Windows, hence no 'tcltk' is required. \n    Password entry can be invoked in two different ways: directly from R via the \n    askpass() function, or indirectly as password-entry back-end for 'ssh-agent' \n    or 'git-credential' via the SSH_ASKPASS and GIT_ASKPASS environment variables.\n    Thereby the user can be prompted for credentials or a passphrase if needed \n    when R calls out to git or ssh.",
        "License": "MIT + file LICENSE",
        "URL": "https://github.com/jeroen/askpass#readme",
        "BugReports": "https://github.com/jeroen/askpass/issues",
        "Encoding": "UTF-8",
        "LazyData": "true",
        "Imports": "sys (>= 2.1)",
        "RoxygenNote": "6.1.1",
        "Suggests": "testthat",
        "Language": "en-US",
        "NeedsCompilation": "yes",
        "Packaged": "2019-01-13 12:08:17 UTC; jeroen",
        "Author": "Jeroen Ooms [aut, cre] (<https://orcid.org/0000-0002-4035-0289>)",
        "Maintainer": "Jeroen Ooms <jeroen@berkeley.edu>",
        "Repository": "CRAN",
        "Date/Publication": "2019-01-13 12:50:03 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2020-07-21 18:27:02 UTC; unix"
      }
    },
    "base64enc": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "base64enc",
        "Version": "0.1-3",
        "Title": "Tools for base64 encoding",
        "Author": "Simon Urbanek <Simon.Urbanek@r-project.org>",
        "Maintainer": "Simon Urbanek <Simon.Urbanek@r-project.org>",
        "Depends": "R (>= 2.9.0)",
        "Enhances": "png",
        "Description": "This package provides tools for handling base64 encoding. It is more flexible than the orphaned base64 package.",
        "License": "GPL-2 | GPL-3",
        "URL": "http://www.rforge.net/base64enc",
        "NeedsCompilation": "yes",
        "Packaged": "2015-02-04 20:31:00 UTC; svnuser",
        "Repository": "CRAN",
        "Date/Publication": "2015-07-28 08:03:37",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2020-07-21 17:42:36 UTC; unix"
      }
    },
    "billboarder": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "billboarder",
        "Title": "Create Interactive Chart with the JavaScript 'Billboard' Library",
        "Version": "0.3.1",
        "Authors@R": "c(\n  person(\"Victor\", \"Perrier\", email = \"victor.perrier@dreamrs.fr\", role = c(\"aut\", \"cre\")),\n  person(\"Fanny\", \"Meyer\", email = \"fanny.meyer@dreamrs.fr\", role = c(\"aut\")),\n  person(\"NAVER Corp\", role = \"cph\", comment = \"billboard.js library\"),\n  person(\"Mike\", \"Bostock\", role = \"cph\", comment = \"d3.format library\"))",
        "Description": "Provides an 'htmlwidgets' interface to 'billboard.js', \n    a re-usable easy interface JavaScript chart library, based on D3 v4+.\n    Chart types include line charts, scatterplots, bar/lollipop charts, histogram/density plots, pie/donut charts and gauge charts.\n    All charts are interactive, and a proxy method is implemented to smoothly update a chart without rendering it again in 'shiny' apps. ",
        "URL": "https://github.com/dreamRs/billboarder",
        "BugReports": "https://github.com/dreamRs/billboarder/issues",
        "Depends": "R (>= 3.1.0)",
        "License": "MIT + file LICENSE",
        "Encoding": "UTF-8",
        "LazyData": "true",
        "RoxygenNote": "7.1.1",
        "Imports": "htmlwidgets, htmltools, magrittr, jsonlite, ggplot2, scales,\nshiny, rlang",
        "Suggests": "RColorBrewer, testthat, knitr, rmarkdown, covr",
        "VignetteBuilder": "knitr",
        "NeedsCompilation": "no",
        "Packaged": "2021-03-27 21:31:30 UTC; perri",
        "Author": "Victor Perrier [aut, cre],\n  Fanny Meyer [aut],\n  NAVER Corp [cph] (billboard.js library),\n  Mike Bostock [cph] (d3.format library)",
        "Maintainer": "Victor Perrier <victor.perrier@dreamrs.fr>",
        "Repository": "CRAN",
        "Date/Publication": "2021-03-27 21:50:02 UTC",
        "Built": "R 3.6.3; ; 2021-09-23 23:30:30 UTC; unix"
      }
    },
    "bit": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "bit",
        "Title": "A Class for Vectors of 1-Bit Booleans",
        "Version": "1.1-15.2",
        "Date": "2020-01-14",
        "Authors@R": "c(person(\"Jens\", \"Oehlschlägel\", role = c('aut', 'cre'),\n\t             email = \"Jens.Oehlschlaegel@truecluster.com\"),\n             person(\"Brian\", \"Ripley\", role = 'ctb'))",
        "Depends": "R (>= 2.9.2)",
        "Description": "True boolean datatype (no NAs), \n  coercion from and to logicals, integers and integer subscripts; \n  fast boolean operators and fast summary statistics. \n  With 'bit' vectors you can store true binary booleans {FALSE,TRUE} at the \n  expense of 1 bit only, on a 32 bit architecture this means factor 32 less \n  RAM and ~ factor 32 more speed on boolean operations. Due to overhead of \n  R calls, actual speed gain depends on the size of the vector: expect gains \n  for vectors of size > 10000 elements. Even for one-time boolean operations \n  it can pay-off to convert to bit, the pay-off is obvious, when such \n  components are used more than once. \n  Reading from and writing to bit is approximately as fast as accessing \n  standard logicals - mostly due to R's time for memory allocation. The package \n  allows to work with pre-allocated memory for return values by calling .Call() \n  directly: when evaluating the speed of C-access with pre-allocated vector \n  memory, coping from bit to logical requires only 70% of the time for copying \n  from logical to logical; and copying from logical to bit comes at a \n  performance penalty of 150%. the package now contains further classes for \n  representing logical selections: 'bitwhich' for very skewed selections and \n  'ri' for selecting ranges of values for chunked processing. All three index \n  classes can be used for subsetting 'ff' objects (ff-2.1-0 and higher).",
        "License": "GPL-2",
        "LazyLoad": "yes",
        "ByteCompile": "yes",
        "Encoding": "UTF-8",
        "NeedsCompilation": "yes",
        "Packaged": "2020-02-09 13:51:41 UTC; ripley",
        "Author": "Jens Oehlschlägel [aut, cre],\n  Brian Ripley [ctb]",
        "Maintainer": "ORPHANED",
        "X-CRAN-Original-Maintainer": "Jens Oehlschlägel\n<Jens.Oehlschlaegel@truecluster.com>",
        "X-CRAN-Comment": "Orphaned on 2020-01-13 as check errors were not\ncorrected.",
        "Repository": "CRAN",
        "Date/Publication": "2020-02-10 10:06:33 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2020-07-21 17:40:59 UTC; unix"
      }
    },
    "bit64": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "bit64",
        "Type": "Package",
        "Title": "A S3 Class for Vectors of 64bit Integers",
        "Version": "0.9-7.1",
        "Date": "2017-05-07",
        "Author": "Jens Oehlschlägel <Jens.Oehlschlaegel@truecluster.com>",
        "Maintainer": "Jens Oehlschlägel <Jens.Oehlschlaegel@truecluster.com>",
        "Depends": "R (>= 3.0.1), bit (>= 1.1-12), utils, methods, stats",
        "Description": "\n Package 'bit64' provides serializable S3 atomic 64bit (signed) integers. \n These are useful for handling database keys and exact counting in +-2^63.\n WARNING: do not use them as replacement for 32bit integers, integer64 are not\n supported for subscripting by R-core and they have different semantics when \n combined with double, e.g. integer64 + double => integer64. \n Class integer64 can be used in vectors, matrices, arrays and data.frames. \n Methods are available for coercion from and to logicals, integers, doubles, \n characters and factors as well as many elementwise and summary functions. \n Many fast algorithmic operations such as 'match' and 'order' support inter-\n active data exploration and manipulation and optionally leverage caching.",
        "License": "GPL-2",
        "LazyLoad": "yes",
        "ByteCompile": "yes",
        "URL": "http://ff.r-forge.r-project.org/",
        "Encoding": "UTF-8",
        "NeedsCompilation": "yes",
        "Packaged": "2020-07-14 17:48:42 UTC; ripley",
        "Repository": "CRAN",
        "Date/Publication": "2020-07-15 04:56:13 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2020-07-21 17:41:02 UTC; unix"
      }
    },
    "blob": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "blob",
        "Title": "A Simple S3 Class for Representing Vectors of Binary Data\n('BLOBS')",
        "Version": "1.2.2",
        "Authors@R": "\n    c(person(given = \"Hadley\",\n             family = \"Wickham\",\n             role = \"aut\"),\n      person(given = \"Kirill\",\n             family = \"Müller\",\n             role = \"cre\",\n             email = \"krlmlr+r@mailbox.org\"),\n      person(given = \"RStudio\",\n             role = \"cph\"))",
        "Description": "R's raw vector is useful for storing a single\n    binary object.  What if you want to put a vector of them in a data\n    frame? The 'blob' package provides the blob object, a list of raw\n    vectors, suitable for use as a column in data frame.",
        "License": "MIT + file LICENSE",
        "URL": "https://blob.tidyverse.org, https://github.com/tidyverse/blob",
        "BugReports": "https://github.com/tidyverse/blob/issues",
        "Imports": "methods, rlang, vctrs (>= 0.2.1)",
        "Suggests": "covr, crayon, pillar (>= 1.2.1), testthat",
        "Encoding": "UTF-8",
        "RoxygenNote": "7.0.2",
        "NeedsCompilation": "no",
        "Packaged": "2021-07-23 02:39:55 UTC; kirill",
        "Author": "Hadley Wickham [aut],\n  Kirill Müller [cre],\n  RStudio [cph]",
        "Maintainer": "Kirill Müller <krlmlr+r@mailbox.org>",
        "Repository": "CRAN",
        "Date/Publication": "2021-07-23 05:20:08 UTC",
        "Built": "R 3.6.3; ; 2021-09-23 23:29:48 UTC; unix"
      }
    },
    "brio": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "brio",
        "Title": "Basic R Input Output",
        "Version": "1.1.2",
        "Authors@R": "\n    c(person(given = \"Jim\",\n             family = \"Hester\",\n             role = c(\"aut\", \"cre\"),\n             email = \"jim.hester@rstudio.com\",\n             comment = c(ORCID = \"0000-0002-2739-7082\")),\n      person(given = \"RStudio\",\n             role = c(\"cph\", \"fnd\")))",
        "Description": "Functions to handle basic input output, these functions always\n  read and write UTF-8 (8-bit Unicode Transformation Format) files and provide\n  more explicit control over line endings.",
        "License": "MIT + file LICENSE",
        "Encoding": "UTF-8",
        "RoxygenNote": "7.1.1",
        "Suggests": "testthat (>= 2.1.0), covr",
        "URL": "https://github.com/r-lib/brio",
        "BugReports": "https://github.com/r-lib/brio/issues",
        "NeedsCompilation": "yes",
        "Packaged": "2021-04-23 12:51:40 UTC; jhester",
        "Author": "Jim Hester [aut, cre] (<https://orcid.org/0000-0002-2739-7082>),\n  RStudio [cph, fnd]",
        "Maintainer": "Jim Hester <jim.hester@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2021-04-23 13:30:03 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2021-10-27 19:24:02 UTC; unix"
      }
    },
    "cachem": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "cachem",
        "Version": "1.0.6",
        "Title": "Cache R Objects with Automatic Pruning",
        "Description": "Key-value stores with automatic pruning. Caches can limit\n    either their total size or the age of the oldest object (or both),\n    automatically pruning objects to maintain the constraints.",
        "Authors@R": "c(\n    person(\"Winston\", \"Chang\", , \"winston@rstudio.com\", c(\"aut\", \"cre\")),\n    person(family = \"RStudio\", role = c(\"cph\", \"fnd\")))",
        "License": "MIT + file LICENSE",
        "Encoding": "UTF-8",
        "ByteCompile": "true",
        "URL": "https://cachem.r-lib.org/, https://github.com/r-lib/cachem",
        "Imports": "rlang, fastmap",
        "Suggests": "testthat",
        "RoxygenNote": "7.1.1",
        "NeedsCompilation": "yes",
        "Packaged": "2021-08-19 21:07:46 UTC; barret",
        "Author": "Winston Chang [aut, cre],\n  RStudio [cph, fnd]",
        "Maintainer": "Winston Chang <winston@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2021-08-19 21:30:02 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2021-09-23 23:29:45 UTC; unix"
      }
    },
    "callr": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "callr",
        "Title": "Call R from R",
        "Version": "3.7.0",
        "Authors@R": "c(\n    person(\"Gábor\", \"Csárdi\", role = c(\"aut\", \"cre\", \"cph\"),\n           email = \"csardi.gabor@gmail.com\",\n\t   comment = c(ORCID = \"0000-0001-7098-9676\")),\n    person(\"Winston\", \"Chang\", role = \"aut\"),\n    person(\"RStudio\", role = c(\"cph\", \"fnd\")),\n    person(\"Mango Solutions\", role  = c(\"cph\", \"fnd\")))",
        "Description": "It is sometimes useful to perform a computation in a\n    separate R process, without affecting the current R process at all.\n    This packages does exactly that.",
        "License": "MIT + file LICENSE",
        "URL": "https://callr.r-lib.org, https://github.com/r-lib/callr#readme",
        "BugReports": "https://github.com/r-lib/callr/issues",
        "RoxygenNote": "7.1.1.9001",
        "Imports": "processx (>= 3.5.0), R6, utils",
        "Suggests": "cli, covr, ps, rprojroot, spelling, testthat, withr (>=\n2.3.0)",
        "Encoding": "UTF-8",
        "Language": "en-US",
        "NeedsCompilation": "no",
        "Packaged": "2021-04-20 12:39:23 UTC; gaborcsardi",
        "Author": "Gábor Csárdi [aut, cre, cph] (<https://orcid.org/0000-0001-7098-9676>),\n  Winston Chang [aut],\n  RStudio [cph, fnd],\n  Mango Solutions [cph, fnd]",
        "Maintainer": "Gábor Csárdi <csardi.gabor@gmail.com>",
        "Repository": "CRAN",
        "Date/Publication": "2021-04-20 14:20:10 UTC",
        "Built": "R 3.6.3; ; 2021-10-11 17:44:37 UTC; unix"
      }
    },
    "cli": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "cli",
        "Title": "Helpers for Developing Command Line Interfaces",
        "Version": "3.0.1",
        "Authors@R": "c(\n    person(\"Gábor\", \"Csárdi\", , \"csardi.gabor@gmail.com\", c(\"aut\", \"cre\")),\n    person(\"Hadley\", \"Wickham\", role = c(\"ctb\")),\n    person(\"Kirill\", \"Müller\", role = c(\"ctb\")),\n    person(\"RStudio\", role = \"cph\")\n    )",
        "Description": "A suite of tools to build attractive command line interfaces\n    ('CLIs'), from semantic elements: headings, lists, alerts, paragraphs,\n    etc. Supports custom themes via a 'CSS'-like language. It also contains a\n    number of lower level 'CLI' elements: rules, boxes, trees, and\n    'Unicode' symbols with 'ASCII' alternatives. It support ANSI colors and\n    text styles as well.",
        "License": "MIT + file LICENSE",
        "URL": "https://cli.r-lib.org, https://github.com/r-lib/cli#readme",
        "BugReports": "https://github.com/r-lib/cli/issues",
        "RoxygenNote": "7.1.1.9001",
        "Depends": "R (>= 2.10)",
        "Imports": "glue, utils",
        "Suggests": "callr, covr, grDevices, htmlwidgets, knitr, methods, mockery,\nprettycode (>= 1.1.0), processx, ps (>= 1.3.4.9000), rlang,\nrmarkdown, rstudioapi, shiny, testthat, tibble, withr",
        "Config/testthat/edition": "3",
        "Encoding": "UTF-8",
        "NeedsCompilation": "yes",
        "Packaged": "2021-07-16 20:08:00 UTC; gaborcsardi",
        "Author": "Gábor Csárdi [aut, cre],\n  Hadley Wickham [ctb],\n  Kirill Müller [ctb],\n  RStudio [cph]",
        "Maintainer": "Gábor Csárdi <csardi.gabor@gmail.com>",
        "Repository": "CRAN",
        "Date/Publication": "2021-07-17 09:00:01 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2021-10-11 17:44:44 UTC; unix"
      }
    },
    "colorspace": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "colorspace",
        "Version": "1.4-1",
        "Date": "2019-03-18",
        "Title": "A Toolbox for Manipulating and Assessing Colors and Palettes",
        "Authors@R": "c(person(given = \"Ross\", family = \"Ihaka\", role = \"aut\", email = \"ihaka@stat.auckland.ac.nz\"),\n             person(given = \"Paul\", family = \"Murrell\", role = \"aut\", email = \"paul@stat.auckland.ac.nz\",\n                    comment = c(ORCID = \"0000-0002-3224-8858\")),\n             person(given = \"Kurt\", family = \"Hornik\", role = \"aut\", email = \"Kurt.Hornik@R-project.org\",\n\t\t    comment = c(ORCID = \"0000-0003-4198-9911\")),\n             person(given = c(\"Jason\", \"C.\"), family = \"Fisher\", role = \"aut\", email = \"jfisher@usgs.gov\",\n                    comment = c(ORCID = \"0000-0001-9032-8912\")),\n             person(given = \"Reto\", family = \"Stauffer\", role = \"aut\", email = \"Reto.Stauffer@uibk.ac.at\",\n                    comment = c(ORCID = \"0000-0002-3798-5507\")),\n             person(given = c(\"Claus\", \"O.\"), family = \"Wilke\", role = \"aut\", email = \"wilke@austin.utexas.edu\",\n                    comment = c(ORCID = \"0000-0002-7470-9261\")),\n             person(given = c(\"Claire\", \"D.\"), family = \"McWhite\", role = \"aut\", email = \"claire.mcwhite@utmail.utexas.edu\",\n                    comment = c(ORCID = \"0000-0001-7346-3047\")),\n             person(given = \"Achim\", family = \"Zeileis\", role = c(\"aut\", \"cre\"), email = \"Achim.Zeileis@R-project.org\",\n                    comment = c(ORCID = \"0000-0003-0918-3766\")))",
        "Description": "Carries out mapping between assorted color spaces including RGB, HSV, HLS,\n             CIEXYZ, CIELUV, HCL (polar CIELUV), CIELAB and polar CIELAB.\n\t     Qualitative, sequential, and diverging color palettes based on HCL colors\n\t     are provided along with corresponding ggplot2 color scales.\n\t     Color palette choice is aided by an interactive app (with either a Tcl/Tk\n\t     or a shiny GUI) and shiny apps with an HCL color picker and a\n\t     color vision deficiency emulator. Plotting functions for displaying\n\t     and assessing palettes include color swatches, visualizations of the\n\t     HCL space, and trajectories in HCL and/or RGB spectrum. Color manipulation\n\t     functions include: desaturation, lightening/darkening, mixing, and\n\t     simulation of color vision deficiencies (deutanomaly, protanomaly, tritanomaly).",
        "Depends": "R (>= 3.0.0), methods",
        "Imports": "graphics, grDevices, stats",
        "Suggests": "datasets, utils, KernSmooth, MASS, kernlab, mvtnorm, vcd,\ntcltk, shiny, shinyjs, ggplot2, dplyr, scales, grid, png, jpeg,\nknitr, rmarkdown, RColorBrewer, rcartocolor, scico, viridis,\nwesanderson",
        "VignetteBuilder": "knitr",
        "License": "BSD_3_clause + file LICENSE",
        "URL": "http://colorspace.R-Forge.R-project.org, http://hclwizard.org/",
        "BugReports": "http://colorspace.R-Forge.R-project.org/contact.html",
        "LazyData": "yes",
        "RoxygenNote": "6.1.1",
        "NeedsCompilation": "yes",
        "Packaged": "2019-03-18 09:11:41 UTC; zeileis",
        "Author": "Ross Ihaka [aut],\n  Paul Murrell [aut] (<https://orcid.org/0000-0002-3224-8858>),\n  Kurt Hornik [aut] (<https://orcid.org/0000-0003-4198-9911>),\n  Jason C. Fisher [aut] (<https://orcid.org/0000-0001-9032-8912>),\n  Reto Stauffer [aut] (<https://orcid.org/0000-0002-3798-5507>),\n  Claus O. Wilke [aut] (<https://orcid.org/0000-0002-7470-9261>),\n  Claire D. McWhite [aut] (<https://orcid.org/0000-0001-7346-3047>),\n  Achim Zeileis [aut, cre] (<https://orcid.org/0000-0003-0918-3766>)",
        "Maintainer": "Achim Zeileis <Achim.Zeileis@R-project.org>",
        "Repository": "CRAN",
        "Date/Publication": "2019-03-18 14:43:29 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2020-07-21 18:03:11 UTC; unix"
      }
    },
    "commonmark": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "commonmark",
        "Type": "Package",
        "Title": "High Performance CommonMark and Github Markdown Rendering in R",
        "Version": "1.7",
        "Authors@R": "c(\n    person(\"Jeroen\", \"Ooms\", ,\"jeroen@berkeley.edu\", role = c(\"aut\", \"cre\")),\n    person(\"John MacFarlane\", role = \"cph\", comment = \"Author of cmark\"))",
        "URL": "http://github.com/jeroen/commonmark (devel)\nhttps://github.github.com/gfm/ (spec)",
        "BugReports": "http://github.com/jeroen/commonmark/issues",
        "Description": "The CommonMark specification defines a rationalized version of markdown\n    syntax. This package uses the 'cmark' reference implementation for converting\n    markdown text into various formats including html, latex and groff man. In\n    addition it exposes the markdown parse tree in xml format. Also includes opt-in\n    support for GFM extensions including tables, autolinks, and strikethrough text.",
        "License": "BSD_2_clause + file LICENSE",
        "Suggests": "curl, testthat, xml2",
        "RoxygenNote": "6.0.1",
        "NeedsCompilation": "yes",
        "Packaged": "2018-12-01 11:57:14 UTC; jeroen",
        "Author": "Jeroen Ooms [aut, cre],\n  John MacFarlane [cph] (Author of cmark)",
        "Maintainer": "Jeroen Ooms <jeroen@berkeley.edu>",
        "Repository": "CRAN",
        "Date/Publication": "2018-12-01 12:30:03 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2020-07-21 17:42:57 UTC; unix"
      }
    },
    "crayon": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "crayon",
        "Title": "Colored Terminal Output",
        "Version": "1.4.1",
        "Authors@R": "c(\n    person(\"Gábor\", \"Csárdi\", , \"csardi.gabor@gmail.com\",\n    role = c(\"aut\", \"cre\")),\n    person(\n    \"Brodie\", \"Gaslam\", email=\"brodie.gaslam@yahoo.com\",\n    role=c(\"ctb\"))\n    )",
        "Description": "Colored terminal output on terminals that support 'ANSI'\n    color and highlight codes. It also works in 'Emacs' 'ESS'. 'ANSI'\n    color support is automatically detected. Colors and highlighting can\n    be combined and nested. New styles can also be created easily.\n    This package was inspired by the 'chalk' 'JavaScript' project.",
        "License": "MIT + file LICENSE",
        "LazyData": "true",
        "URL": "https://github.com/r-lib/crayon#readme",
        "BugReports": "https://github.com/r-lib/crayon/issues",
        "Collate": "'aaa-rstudio-detect.R' 'aab-num-ansi-colors.R' 'ansi-256.r'\n'combine.r' 'string.r' 'utils.r' 'crayon-package.r'\n'disposable.r' 'has_ansi.r' 'has_color.r' 'link.R' 'styles.r'\n'machinery.r' 'parts.r' 'print.r' 'rematch2.R' 'style-var.r'\n'show.r' 'string_operations.r'",
        "Imports": "grDevices, methods, utils",
        "Suggests": "mockery, rstudioapi, testthat, withr",
        "RoxygenNote": "7.1.1",
        "Encoding": "UTF-8",
        "NeedsCompilation": "no",
        "Packaged": "2021-02-08 18:57:04 UTC; gaborcsardi",
        "Author": "Gábor Csárdi [aut, cre],\n  Brodie Gaslam [ctb]",
        "Maintainer": "Gábor Csárdi <csardi.gabor@gmail.com>",
        "Repository": "CRAN",
        "Date/Publication": "2021-02-08 19:50:02 UTC",
        "Built": "R 3.6.3; ; 2021-10-11 17:43:58 UTC; unix"
      }
    },
    "crosstalk": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "crosstalk",
        "Type": "Package",
        "Title": "Inter-Widget Interactivity for HTML Widgets",
        "Version": "1.1.0.1",
        "Authors@R": "c(\n    person(\"Joe\", \"Cheng\", role = c(\"aut\", \"cre\"), email = \"joe@rstudio.com\"),\n    person(family = \"RStudio\", role = \"cph\"),\n    person(family = \"jQuery Foundation\", role = \"cph\",\n    comment = \"jQuery library and jQuery UI library\"),\n    person(family = \"jQuery contributors\", role = c(\"ctb\", \"cph\"),\n    comment = \"jQuery library; authors listed in inst/www/shared/jquery-AUTHORS.txt\"),\n    person(\"Mark\", \"Otto\", role = \"ctb\",\n    comment = \"Bootstrap library\"),\n    person(\"Jacob\", \"Thornton\", role = \"ctb\",\n    comment = \"Bootstrap library\"),\n    person(family = \"Bootstrap contributors\", role = \"ctb\",\n    comment = \"Bootstrap library\"),\n    person(family = \"Twitter, Inc\", role = \"cph\",\n    comment = \"Bootstrap library\"),\n    person(\"Brian\", \"Reavis\", role = c(\"ctb\", \"cph\"),\n    comment = \"selectize.js library\"),\n    person(\"Kristopher Michael\", \"Kowal\", role = c(\"ctb\", \"cph\"),\n    comment = \"es5-shim library\"),\n    person(family = \"es5-shim contributors\", role = c(\"ctb\", \"cph\"),\n    comment = \"es5-shim library\"),\n    person(\"Denis\", \"Ineshin\", role = c(\"ctb\", \"cph\"),\n    comment = \"ion.rangeSlider library\"),\n    person(\"Sami\", \"Samhuri\", role = c(\"ctb\", \"cph\"),\n    comment = \"Javascript strftime library\")\n    )",
        "Description": "Provides building blocks for allowing HTML widgets to communicate\n    with each other, with Shiny or without (i.e. static .html files). Currently\n    supports linked brushing and filtering.",
        "License": "MIT + file LICENSE",
        "Imports": "htmltools (>= 0.3.6), jsonlite, lazyeval, R6",
        "Suggests": "shiny, ggplot2, testthat (>= 2.1.0)",
        "URL": "https://rstudio.github.io/crosstalk/",
        "BugReports": "https://github.com/rstudio/crosstalk/issues",
        "RoxygenNote": "6.1.1",
        "Encoding": "UTF-8",
        "NeedsCompilation": "no",
        "Packaged": "2020-03-12 23:34:05 UTC; jcheng",
        "Author": "Joe Cheng [aut, cre],\n  RStudio [cph],\n  jQuery Foundation [cph] (jQuery library and jQuery UI library),\n  jQuery contributors [ctb, cph] (jQuery library; authors listed in\n    inst/www/shared/jquery-AUTHORS.txt),\n  Mark Otto [ctb] (Bootstrap library),\n  Jacob Thornton [ctb] (Bootstrap library),\n  Bootstrap contributors [ctb] (Bootstrap library),\n  Twitter, Inc [cph] (Bootstrap library),\n  Brian Reavis [ctb, cph] (selectize.js library),\n  Kristopher Michael Kowal [ctb, cph] (es5-shim library),\n  es5-shim contributors [ctb, cph] (es5-shim library),\n  Denis Ineshin [ctb, cph] (ion.rangeSlider library),\n  Sami Samhuri [ctb, cph] (Javascript strftime library)",
        "Maintainer": "Joe Cheng <joe@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2020-03-13 10:20:06 UTC",
        "Built": "R 3.6.3; ; 2020-07-21 17:48:46 UTC; unix"
      }
    },
    "data.table": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "data.table",
        "Version": "1.12.8",
        "Title": "Extension of `data.frame`",
        "Authors@R": "c(\n  person(\"Matt\",\"Dowle\",           role=c(\"aut\",\"cre\"), email=\"mattjdowle@gmail.com\"),\n  person(\"Arun\",\"Srinivasan\",      role=\"aut\",          email=\"arunkumar.sriniv@gmail.com\"),\n  person(\"Jan\",\"Gorecki\",          role=\"ctb\"),\n  person(\"Michael\",\"Chirico\",      role=\"ctb\"),\n  person(\"Pasha\",\"Stetsenko\",      role=\"ctb\"),\n  person(\"Tom\",\"Short\",            role=\"ctb\"),\n  person(\"Steve\",\"Lianoglou\",      role=\"ctb\"),\n  person(\"Eduard\",\"Antonyan\",      role=\"ctb\"),\n  person(\"Markus\",\"Bonsch\",        role=\"ctb\"),\n  person(\"Hugh\",\"Parsonage\",       role=\"ctb\"),\n  person(\"Scott\",\"Ritchie\",        role=\"ctb\"),\n  person(\"Kun\",\"Ren\",              role=\"ctb\"),\n  person(\"Xianying\",\"Tan\",         role=\"ctb\"),\n  person(\"Rick\",\"Saporta\",         role=\"ctb\"),\n  person(\"Otto\",\"Seiskari\",        role=\"ctb\"),\n  person(\"Xianghui\",\"Dong\",        role=\"ctb\"),\n  person(\"Michel\",\"Lang\",          role=\"ctb\"),\n  person(\"Watal\",\"Iwasaki\",        role=\"ctb\"),\n  person(\"Seth\",\"Wenchel\",         role=\"ctb\"),\n  person(\"Karl\",\"Broman\",          role=\"ctb\"),\n  person(\"Tobias\",\"Schmidt\",       role=\"ctb\"),\n  person(\"David\",\"Arenburg\",       role=\"ctb\"),\n  person(\"Ethan\",\"Smith\",          role=\"ctb\"),\n  person(\"Francois\",\"Cocquemas\",   role=\"ctb\"),\n  person(\"Matthieu\",\"Gomez\",       role=\"ctb\"),\n  person(\"Philippe\",\"Chataignon\",  role=\"ctb\"),\n  person(\"Declan\",\"Groves\",        role=\"ctb\"),\n  person(\"Daniel\",\"Possenriede\",   role=\"ctb\"),\n  person(\"Felipe\",\"Parages\",       role=\"ctb\"),\n  person(\"Denes\",\"Toth\",           role=\"ctb\"),\n  person(\"Mus\",\"Yaramaz-David\",    role=\"ctb\"),\n  person(\"Ayappan\",\"Perumal\",      role=\"ctb\"),\n  person(\"James\",\"Sams\",           role=\"ctb\"),\n  person(\"Martin\",\"Morgan\",        role=\"ctb\"),\n  person(\"Michael\",\"Quinn\",        role=\"ctb\"),\n  person(\"@javrucebo\",\"\",          role=\"ctb\"),\n  person(\"@marc-outins\",\"\",        role=\"ctb\"),\n  person(\"Roy\",\"Storey\",           role=\"ctb\"),\n  person(\"Manish\",\"Saraswat\",      role=\"ctb\"),\n  person(\"Morgan\",\"Jacob\",         role=\"ctb\"),\n  person(\"Michael\",\"Schubmehl\",    role=\"ctb\"),\n  person(\"Davis\",\"Vaughan\",        role=\"ctb\"))",
        "Depends": "R (>= 3.1.0)",
        "Imports": "methods",
        "Suggests": "bit64, curl, R.utils, knitr, xts, nanotime, zoo, yaml",
        "SystemRequirements": "zlib",
        "Description": "Fast aggregation of large data (e.g. 100GB in RAM), fast ordered joins, fast add/modify/delete of columns by group using no copies at all, list columns, friendly and fast character-separated-value read/write. Offers a natural and flexible syntax, for faster development.",
        "License": "MPL-2.0 | file LICENSE",
        "URL": "http://r-datatable.com, https://Rdatatable.gitlab.io/data.table,\nhttps://github.com/Rdatatable/data.table",
        "BugReports": "https://github.com/Rdatatable/data.table/issues",
        "VignetteBuilder": "knitr",
        "ByteCompile": "TRUE",
        "NeedsCompilation": "yes",
        "Packaged": "2019-12-08 22:28:25.859 UTC; mdowle",
        "Author": "Matt Dowle [aut, cre],\n  Arun Srinivasan [aut],\n  Jan Gorecki [ctb],\n  Michael Chirico [ctb],\n  Pasha Stetsenko [ctb],\n  Tom Short [ctb],\n  Steve Lianoglou [ctb],\n  Eduard Antonyan [ctb],\n  Markus Bonsch [ctb],\n  Hugh Parsonage [ctb],\n  Scott Ritchie [ctb],\n  Kun Ren [ctb],\n  Xianying Tan [ctb],\n  Rick Saporta [ctb],\n  Otto Seiskari [ctb],\n  Xianghui Dong [ctb],\n  Michel Lang [ctb],\n  Watal Iwasaki [ctb],\n  Seth Wenchel [ctb],\n  Karl Broman [ctb],\n  Tobias Schmidt [ctb],\n  David Arenburg [ctb],\n  Ethan Smith [ctb],\n  Francois Cocquemas [ctb],\n  Matthieu Gomez [ctb],\n  Philippe Chataignon [ctb],\n  Declan Groves [ctb],\n  Daniel Possenriede [ctb],\n  Felipe Parages [ctb],\n  Denes Toth [ctb],\n  Mus Yaramaz-David [ctb],\n  Ayappan Perumal [ctb],\n  James Sams [ctb],\n  Martin Morgan [ctb],\n  Michael Quinn [ctb],\n  @javrucebo [ctb],\n  @marc-outins [ctb],\n  Roy Storey [ctb],\n  Manish Saraswat [ctb],\n  Morgan Jacob [ctb],\n  Michael Schubmehl [ctb],\n  Davis Vaughan [ctb]",
        "Maintainer": "Matt Dowle <mattjdowle@gmail.com>",
        "Repository": "CRAN",
        "Date/Publication": "2019-12-09 10:30:10 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2020-07-21 17:43:29 UTC; unix"
      }
    },
    "desc": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "desc",
        "Title": "Manipulate DESCRIPTION Files",
        "Version": "1.4.0",
        "Authors@R": "\n    c(person(given = \"Gábor\",\n             family = \"Csárdi\",\n             role = c(\"aut\", \"cre\"),\n             email = \"csardi.gabor@gmail.com\"),\n      person(given = \"Kirill\",\n             family = \"Müller\",\n             role = \"aut\"),\n      person(given = \"Jim\",\n             family = \"Hester\",\n             role = \"aut\",\n             email = \"james.f.hester@gmail.com\"),\n      person(given = \"Maëlle\",\n             family = \"Salmon\",\n             role = \"ctb\",\n             comment = c(ORCID = \"0000-0002-2815-0399\")))",
        "Maintainer": "Gábor Csárdi <csardi.gabor@gmail.com>",
        "Description": "Tools to read, write, create, and manipulate DESCRIPTION files.\n    It is intended for packages that create or manipulate other packages.",
        "License": "MIT + file LICENSE",
        "URL": "https://github.com/r-lib/desc#readme",
        "BugReports": "https://github.com/r-lib/desc/issues",
        "Depends": "R (>= 3.1.0)",
        "Suggests": "covr, testthat, whoami, withr, spelling, gh",
        "Imports": "utils, R6, crayon, rprojroot",
        "Encoding": "UTF-8",
        "RoxygenNote": "7.1.2",
        "Collate": "'assertions.R' 'authors-at-r.R' 'built.R' 'classes.R'\n'collate.R' 'constants.R' 'deps.R' 'description.R' 'encoding.R'\n'latex.R' 'non-oo-api.R' 'package-archives.R' 'read.R'\n'remotes.R' 'str.R' 'syntax_checks.R' 'urls.R' 'utils.R'\n'validate.R' 'version.R'",
        "Language": "en-US",
        "Config/testthat/edition": "3",
        "NeedsCompilation": "no",
        "Packaged": "2021-09-27 17:26:10 UTC; gaborcsardi",
        "Author": "Gábor Csárdi [aut, cre],\n  Kirill Müller [aut],\n  Jim Hester [aut],\n  Maëlle Salmon [ctb] (<https://orcid.org/0000-0002-2815-0399>)",
        "Repository": "CRAN",
        "Date/Publication": "2021-09-28 07:30:02 UTC",
        "Built": "R 3.6.3; ; 2021-10-27 19:26:36 UTC; unix"
      }
    },
    "diffobj": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "diffobj",
        "Type": "Package",
        "Title": "Diffs for R Objects",
        "Description": "Generate a colorized diff of two R objects for an intuitive\n    visualization of their differences.",
        "Version": "0.3.5",
        "Authors@R": "c(\n    person(\n    \"Brodie\", \"Gaslam\", email=\"brodie.gaslam@yahoo.com\",\n    role=c(\"aut\", \"cre\")),\n    person(\n    \"Michael B.\", \"Allen\", email=\"ioplex@gmail.com\",\n    role=c(\"ctb\", \"cph\"),\n    comment=\"Original C implementation of Myers Diff Algorithm\"))",
        "Depends": "R (>= 3.1.0)",
        "License": "GPL-2 | GPL-3",
        "URL": "https://github.com/brodieG/diffobj",
        "BugReports": "https://github.com/brodieG/diffobj/issues",
        "RoxygenNote": "7.1.1",
        "VignetteBuilder": "knitr",
        "Encoding": "UTF-8",
        "Suggests": "knitr, rmarkdown",
        "Collate": "'capt.R' 'options.R' 'pager.R' 'check.R' 'finalizer.R'\n'misc.R' 'html.R' 'styles.R' 's4.R' 'core.R' 'diff.R' 'get.R'\n'guides.R' 'hunks.R' 'layout.R' 'myerssimple.R' 'rdiff.R'\n'rds.R' 'set.R' 'subset.R' 'summmary.R' 'system.R' 'text.R'\n'tochar.R' 'trim.R' 'word.R'",
        "Imports": "crayon (>= 1.3.2), tools, methods, utils, stats",
        "NeedsCompilation": "yes",
        "Packaged": "2021-10-05 01:16:56 UTC; bg",
        "Author": "Brodie Gaslam [aut, cre],\n  Michael B. Allen [ctb, cph] (Original C implementation of Myers Diff\n    Algorithm)",
        "Maintainer": "Brodie Gaslam <brodie.gaslam@yahoo.com>",
        "Repository": "CRAN",
        "Date/Publication": "2021-10-05 07:10:17 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2021-10-27 19:22:08 UTC; unix"
      }
    },
    "digest": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "digest",
        "Author": "Dirk Eddelbuettel <edd@debian.org> with contributions \n by Antoine Lucas, Jarek Tuszynski, Henrik Bengtsson, Simon Urbanek,\n Mario Frasca, Bryan Lewis, Murray Stokely, Hannes Muehleisen,\n Duncan Murdoch, Jim Hester, Wush Wu, Qiang Kou, Thierry Onkelinx, \n Michel Lang, Viliam Simko, Kurt Hornik, Radford Neal, Kendon Bell,\n Matthew de Queljoe, Ion Suruceanu, and Bill Denney.",
        "Version": "0.6.25",
        "Date": "2020-02-22",
        "Maintainer": "Dirk Eddelbuettel <edd@debian.org>",
        "Title": "Create Compact Hash Digests of R Objects",
        "Description": "Implementation of a function 'digest()' for the creation \n of hash digests of arbitrary R objects (using the 'md5', 'sha-1', 'sha-256', \n 'crc32', 'xxhash', 'murmurhash' and 'spookyhash' algorithms) permitting easy\n comparison of R language objects, as well as functions such as'hmac()' to\n create hash-based message authentication code. Please note that this package\n is not meant to be deployed for cryptographic purposes for which more\n comprehensive (and widely tested) libraries such as 'OpenSSL' should be\n used.",
        "URL": "http://dirk.eddelbuettel.com/code/digest.html",
        "BugReports": "https://github.com/eddelbuettel/digest/issues",
        "Depends": "R (>= 3.1.0)",
        "Imports": "utils",
        "License": "GPL (>= 2)",
        "Suggests": "tinytest, knitr, rmarkdown",
        "VignetteBuilder": "knitr",
        "NeedsCompilation": "yes",
        "Packaged": "2020-02-22 14:55:28.282493 UTC; edd",
        "Repository": "CRAN",
        "Date/Publication": "2020-02-23 00:10:02 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2020-07-21 17:43:04 UTC; unix"
      }
    },
    "ellipsis": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "ellipsis",
        "Version": "0.3.2",
        "Title": "Tools for Working with ...",
        "Description": "The ellipsis is a powerful tool for extending functions. Unfortunately \n    this power comes at a cost: misspelled arguments will be silently ignored. \n    The ellipsis package provides a collection of functions to catch problems\n    and alert the user.",
        "Authors@R": "c(\n      person(\"Hadley\", \"Wickham\", , \"hadley@rstudio.com\", role = c(\"aut\", \"cre\")),\n      person(\"RStudio\", role = \"cph\")\n    )",
        "License": "MIT + file LICENSE",
        "Encoding": "UTF-8",
        "RoxygenNote": "7.1.1",
        "URL": "https://ellipsis.r-lib.org, https://github.com/r-lib/ellipsis",
        "BugReports": "https://github.com/r-lib/ellipsis/issues",
        "Depends": "R (>= 3.2)",
        "Imports": "rlang (>= 0.3.0)",
        "Suggests": "covr, testthat",
        "NeedsCompilation": "yes",
        "Packaged": "2021-04-29 12:06:44 UTC; lionel",
        "Author": "Hadley Wickham [aut, cre],\n  RStudio [cph]",
        "Maintainer": "Hadley Wickham <hadley@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2021-04-29 12:40:02 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2021-09-22 14:25:04 UTC; unix"
      }
    },
    "evaluate": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "evaluate",
        "Type": "Package",
        "Title": "Parsing and Evaluation Tools that Provide More Details than the\nDefault",
        "Version": "0.14",
        "Authors@R": "c(\n    person(\"Hadley\", \"Wickham\", role = \"aut\"),\n    person(\"Yihui\", \"Xie\", role = c(\"aut\", \"cre\"), email = \"xie@yihui.name\", comment = c(ORCID = \"0000-0003-0645-5666\")),\n    person(\"Michael\", \"Lawrence\", role = \"ctb\"),\n    person(\"Thomas\", \"Kluyver\", role = \"ctb\"),\n    person(\"Jeroen\", \"Ooms\", role = \"ctb\"),\n    person(\"Barret\", \"Schloerke\", role = \"ctb\"),\n    person(\"Adam\", \"Ryczkowski\", role = \"ctb\"),\n    person(\"Hiroaki\", \"Yutani\", role = \"ctb\"),\n    person(\"Michel\", \"Lang\", role = \"ctb\"),\n    person(\"Karolis\", \"Koncevičius\", role = \"ctb\")\n    )",
        "Description": "Parsing and evaluation tools that make it easy to recreate the\n    command line behaviour of R.",
        "License": "MIT + file LICENSE",
        "URL": "https://github.com/r-lib/evaluate",
        "BugReports": "https://github.com/r-lib/evaluate/issues",
        "Depends": "R (>= 3.0.2)",
        "Imports": "methods",
        "Suggests": "testthat, lattice, ggplot2",
        "RoxygenNote": "6.1.1",
        "Encoding": "UTF-8",
        "NeedsCompilation": "no",
        "Packaged": "2019-05-28 15:30:02 UTC; yihui",
        "Author": "Hadley Wickham [aut],\n  Yihui Xie [aut, cre] (<https://orcid.org/0000-0003-0645-5666>),\n  Michael Lawrence [ctb],\n  Thomas Kluyver [ctb],\n  Jeroen Ooms [ctb],\n  Barret Schloerke [ctb],\n  Adam Ryczkowski [ctb],\n  Hiroaki Yutani [ctb],\n  Michel Lang [ctb],\n  Karolis Koncevičius [ctb]",
        "Maintainer": "Yihui Xie <xie@yihui.name>",
        "Repository": "CRAN",
        "Date/Publication": "2019-05-28 15:50:02 UTC",
        "Built": "R 3.6.3; ; 2020-07-21 17:42:43 UTC; unix"
      }
    },
    "fansi": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "fansi",
        "Title": "ANSI Control Sequence Aware String Functions",
        "Description": "Counterparts to R string manipulation functions that account for\n   the effects of ANSI text formatting control sequences.",
        "Version": "0.4.1",
        "Authors@R": "c(\n    person(\"Brodie\", \"Gaslam\", email=\"brodie.gaslam@yahoo.com\",\n    role=c(\"aut\", \"cre\")),\n    person(\"Elliott\", \"Sales De Andrade\", role=\"ctb\"),\n    person(family=\"R Core Team\",\n    email=\"R-core@r-project.org\", role=\"cph\",\n    comment=\"UTF8 byte length calcs from src/util.c\"\n    ))",
        "Depends": "R (>= 3.1.0)",
        "License": "GPL (>= 2)",
        "LazyData": "true",
        "URL": "https://github.com/brodieG/fansi",
        "BugReports": "https://github.com/brodieG/fansi/issues",
        "VignetteBuilder": "knitr",
        "Suggests": "unitizer, knitr, rmarkdown",
        "RoxygenNote": "6.1.1",
        "Encoding": "UTF-8",
        "Collate": "'constants.R' 'fansi-package.R' 'has.R' 'internal.R' 'load.R'\n'misc.R' 'nchar.R' 'strip.R' 'strwrap.R' 'strtrim.R'\n'strsplit.R' 'substr2.R' 'tohtml.R' 'unhandled.R'",
        "NeedsCompilation": "yes",
        "Packaged": "2020-01-06 01:58:57 UTC; bg",
        "Author": "Brodie Gaslam [aut, cre],\n  Elliott Sales De Andrade [ctb],\n  R Core Team [cph] (UTF8 byte length calcs from src/util.c)",
        "Maintainer": "Brodie Gaslam <brodie.gaslam@yahoo.com>",
        "Repository": "CRAN",
        "Date/Publication": "2020-01-08 23:01:29 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2020-07-21 17:57:08 UTC; unix"
      }
    },
    "farver": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "farver",
        "Type": "Package",
        "Title": "High Performance Colour Space Manipulation",
        "Version": "2.0.3",
        "Authors@R": "\n    c(person(given = \"Thomas Lin\",\n             family = \"Pedersen\",\n             role = c(\"cre\", \"aut\"),\n             email = \"thomasp85@gmail.com\",\n             comment = c(ORCID = \"0000-0002-5147-4711\")),\n      person(given = \"Berendea\",\n             family = \"Nicolae\",\n             role = \"aut\",\n             comment = \"Author of the ColorSpace C++ library\"),\n      person(given = \"Romain\", \n             family = \"François\", \n             role = \"aut\", \n             email = \"romain@purrple.cat\",\n             comment = c(ORCID = \"0000-0002-2444-4226\")) \n      )",
        "Maintainer": "Thomas Lin Pedersen <thomasp85@gmail.com>",
        "Description": "The encoding of colour can be handled in many different ways, using\n    different colour spaces. As different colour spaces have different uses,\n    efficient conversion between these representations are important. The \n    'farver' package provides a set of functions that gives access to very fast\n    colour space conversion and comparisons implemented in C++, and offers \n    speed improvements over the 'convertColor' function in the 'grDevices' \n    package.",
        "License": "MIT + file LICENSE",
        "Encoding": "UTF-8",
        "SystemRequirements": "C++11",
        "RoxygenNote": "7.0.2",
        "URL": "https://farver.data-imaginist.com,\nhttps://github.com/thomasp85/farver",
        "BugReports": "https://github.com/thomasp85/farver/issues",
        "Suggests": "testthat (>= 2.1.0), covr",
        "NeedsCompilation": "yes",
        "Packaged": "2020-01-16 10:42:44 UTC; thomas",
        "Author": "Thomas Lin Pedersen [cre, aut]\n    (<https://orcid.org/0000-0002-5147-4711>),\n  Berendea Nicolae [aut] (Author of the ColorSpace C++ library),\n  Romain François [aut] (<https://orcid.org/0000-0002-2444-4226>)",
        "Repository": "CRAN",
        "Date/Publication": "2020-01-16 13:40:07 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2020-07-21 18:04:12 UTC; unix"
      }
    },
    "fastmap": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "fastmap",
        "Title": "Fast Implementation of a Key-Value Store",
        "Version": "1.0.1",
        "Authors@R": "c(\n    person(\"Winston\", \"Chang\", email = \"winston@rstudio.com\", role = c(\"aut\", \"cre\")),\n    person(given = \"RStudio\", role = c(\"cph\", \"fnd\")),\n    person(given = \"Tessil\", role = \"cph\", comment = \"hopscotch_map library\")\n    )",
        "Description": "Fast implementation of a key-value store. Environments are commonly\n    used as key-value stores, but every time a new key is used, it is added to\n    R's global symbol table, causing a small amount of memory leakage. This can\n    be problematic in cases where many different keys are used. Fastmap avoids\n    this memory leak issue by implementing the map using data structures in C++.",
        "License": "MIT + file LICENSE",
        "Encoding": "UTF-8",
        "LazyData": "true",
        "RoxygenNote": "6.1.1",
        "Suggests": "testthat (>= 2.1.1)",
        "URL": "https://r-lib.github.io/fastmap/, https://github.com/r-lib/fastmap",
        "BugReports": "https://github.com/r-lib/fastmap/issues",
        "NeedsCompilation": "yes",
        "Packaged": "2019-10-07 23:14:48 UTC; winston",
        "Author": "Winston Chang [aut, cre],\n  RStudio [cph, fnd],\n  Tessil [cph] (hopscotch_map library)",
        "Maintainer": "Winston Chang <winston@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2019-10-08 05:20:02 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2020-07-21 17:42:54 UTC; unix"
      }
    },
    "ggplot2": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "ggplot2",
        "Version": "3.3.5",
        "Title": "Create Elegant Data Visualisations Using the Grammar of Graphics",
        "Description": "A system for 'declaratively' creating graphics,\n    based on \"The Grammar of Graphics\". You provide the data, tell 'ggplot2'\n    how to map variables to aesthetics, what graphical primitives to use,\n    and it takes care of the details.",
        "Authors@R": "c(\n    person(\"Hadley\", \"Wickham\", , \"hadley@rstudio.com\", \"aut\",\n           comment = c(ORCID = \"0000-0003-4757-117X\")),\n    person(\"Winston\", \"Chang\", , role = \"aut\",\n           comment = c(ORCID = \"0000-0002-1576-2126\")),\n    person(\"Lionel\", \"Henry\", , role = \"aut\"),\n    person(\"Thomas Lin\", \"Pedersen\", , \"thomas.pedersen@rstudio.com\", \n           role = c(\"aut\", \"cre\"), comment = c(ORCID = \"0000-0002-5147-4711\")),\n    person(\"Kohske\", \"Takahashi\", role = \"aut\"),\n    person(\"Claus\", \"Wilke\", role = \"aut\",\n           comment = c(ORCID = \"0000-0002-7470-9261\")),\n    person(\"Kara\", \"Woo\", role = \"aut\",\n           comment = c(ORCID = \"0000-0002-5125-4188\")),\n    person(\"Hiroaki\", \"Yutani\", role = \"aut\",\n           comment = c(ORCID = \"0000-0002-3385-7233\")),\n    person(\"Dewey\", \"Dunnington\", role = \"aut\",\n           comment = c(ORCID = \"0000-0002-9415-4582\")),\n    person(\"RStudio\", role = c(\"cph\", \"fnd\"))\n    )",
        "Depends": "R (>= 3.3)",
        "Imports": "digest, glue, grDevices, grid, gtable (>= 0.1.1), isoband,\nMASS, mgcv, rlang (>= 0.4.10), scales (>= 0.5.0), stats,\ntibble, withr (>= 2.0.0)",
        "Suggests": "covr, ragg, dplyr, ggplot2movies, hexbin, Hmisc, interp,\nknitr, lattice, mapproj, maps, maptools, multcomp, munsell,\nnlme, profvis, quantreg, RColorBrewer, rgeos, rmarkdown, rpart,\nsf (>= 0.7-3), svglite (>= 1.2.0.9001), testthat (>= 2.1.0),\nvdiffr (>= 1.0.0), xml2",
        "Enhances": "sp",
        "License": "MIT + file LICENSE",
        "URL": "https://ggplot2.tidyverse.org,\nhttps://github.com/tidyverse/ggplot2",
        "BugReports": "https://github.com/tidyverse/ggplot2/issues",
        "LazyData": "true",
        "Collate": "'ggproto.r' 'ggplot-global.R' 'aaa-.r'\n'aes-colour-fill-alpha.r' 'aes-evaluation.r'\n'aes-group-order.r' 'aes-linetype-size-shape.r'\n'aes-position.r' 'compat-plyr.R' 'utilities.r' 'aes.r'\n'legend-draw.r' 'geom-.r' 'annotation-custom.r'\n'annotation-logticks.r' 'geom-polygon.r' 'geom-map.r'\n'annotation-map.r' 'geom-raster.r' 'annotation-raster.r'\n'annotation.r' 'autolayer.r' 'autoplot.r' 'axis-secondary.R'\n'backports.R' 'bench.r' 'bin.R' 'coord-.r' 'coord-cartesian-.r'\n'coord-fixed.r' 'coord-flip.r' 'coord-map.r' 'coord-munch.r'\n'coord-polar.r' 'coord-quickmap.R' 'coord-sf.R'\n'coord-transform.r' 'data.R' 'facet-.r' 'facet-grid-.r'\n'facet-null.r' 'facet-wrap.r' 'fortify-lm.r' 'fortify-map.r'\n'fortify-multcomp.r' 'fortify-spatial.r' 'fortify.r' 'stat-.r'\n'geom-abline.r' 'geom-rect.r' 'geom-bar.r' 'geom-bin2d.r'\n'geom-blank.r' 'geom-boxplot.r' 'geom-col.r' 'geom-path.r'\n'geom-contour.r' 'geom-count.r' 'geom-crossbar.r'\n'geom-segment.r' 'geom-curve.r' 'geom-defaults.r'\n'geom-ribbon.r' 'geom-density.r' 'geom-density2d.r'\n'geom-dotplot.r' 'geom-errorbar.r' 'geom-errorbarh.r'\n'geom-freqpoly.r' 'geom-function.R' 'geom-hex.r'\n'geom-histogram.r' 'geom-hline.r' 'geom-jitter.r'\n'geom-label.R' 'geom-linerange.r' 'geom-point.r'\n'geom-pointrange.r' 'geom-quantile.r' 'geom-rug.r' 'geom-sf.R'\n'geom-smooth.r' 'geom-spoke.r' 'geom-text.r' 'geom-tile.r'\n'geom-violin.r' 'geom-vline.r' 'ggplot2.r' 'grob-absolute.r'\n'grob-dotstack.r' 'grob-null.r' 'grouping.r' 'guide-bins.R'\n'guide-colorbar.r' 'guide-colorsteps.R' 'guide-legend.r'\n'guides-.r' 'guides-axis.r' 'guides-grid.r' 'guides-none.r'\n'hexbin.R' 'labeller.r' 'labels.r' 'layer.r' 'layer-sf.R'\n'layout.R' 'limits.r' 'margins.R' 'performance.R'\n'plot-build.r' 'plot-construction.r' 'plot-last.r' 'plot.r'\n'position-.r' 'position-collide.r' 'position-dodge.r'\n'position-dodge2.r' 'position-identity.r' 'position-jitter.r'\n'position-jitterdodge.R' 'position-nudge.R' 'position-stack.r'\n'quick-plot.r' 'range.r' 'reshape-add-margins.R' 'save.r'\n'scale-.r' 'scale-alpha.r' 'scale-binned.R' 'scale-brewer.r'\n'scale-colour.r' 'scale-continuous.r' 'scale-date.r'\n'scale-discrete-.r' 'scale-expansion.r' 'scale-gradient.r'\n'scale-grey.r' 'scale-hue.r' 'scale-identity.r'\n'scale-linetype.r' 'scale-manual.r' 'scale-shape.r'\n'scale-size.r' 'scale-steps.R' 'scale-type.R' 'scale-view.r'\n'scale-viridis.r' 'scales-.r' 'stat-bin.r' 'stat-bin2d.r'\n'stat-bindot.r' 'stat-binhex.r' 'stat-boxplot.r'\n'stat-contour.r' 'stat-count.r' 'stat-density-2d.r'\n'stat-density.r' 'stat-ecdf.r' 'stat-ellipse.R'\n'stat-function.r' 'stat-identity.r' 'stat-qq-line.R'\n'stat-qq.r' 'stat-quantile.r' 'stat-sf-coordinates.R'\n'stat-sf.R' 'stat-smooth-methods.r' 'stat-smooth.r'\n'stat-sum.r' 'stat-summary-2d.r' 'stat-summary-bin.R'\n'stat-summary-hex.r' 'stat-summary.r' 'stat-unique.r'\n'stat-ydensity.r' 'summarise-plot.R' 'summary.r'\n'theme-elements.r' 'theme.r' 'theme-defaults.r'\n'theme-current.R' 'translate-qplot-ggplot.r'\n'translate-qplot-lattice.r' 'utilities-break.r'\n'utilities-grid.r' 'utilities-help.r' 'utilities-matrix.r'\n'utilities-resolution.r' 'utilities-table.r'\n'utilities-tidy-eval.R' 'zxx.r' 'zzz.r'",
        "VignetteBuilder": "knitr",
        "RoxygenNote": "7.1.1",
        "Encoding": "UTF-8",
        "Config/Needs/website": "ggtext, tidyr, forcats, tidyverse/tidytemplate",
        "NeedsCompilation": "no",
        "Packaged": "2021-06-24 12:25:35 UTC; thomas",
        "Author": "Hadley Wickham [aut] (<https://orcid.org/0000-0003-4757-117X>),\n  Winston Chang [aut] (<https://orcid.org/0000-0002-1576-2126>),\n  Lionel Henry [aut],\n  Thomas Lin Pedersen [aut, cre]\n    (<https://orcid.org/0000-0002-5147-4711>),\n  Kohske Takahashi [aut],\n  Claus Wilke [aut] (<https://orcid.org/0000-0002-7470-9261>),\n  Kara Woo [aut] (<https://orcid.org/0000-0002-5125-4188>),\n  Hiroaki Yutani [aut] (<https://orcid.org/0000-0002-3385-7233>),\n  Dewey Dunnington [aut] (<https://orcid.org/0000-0002-9415-4582>),\n  RStudio [cph, fnd]",
        "Maintainer": "Thomas Lin Pedersen <thomas.pedersen@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2021-06-25 11:30:09 UTC",
        "Built": "R 3.6.3; ; 2021-10-11 17:46:05 UTC; unix"
      }
    },
    "glue": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "glue",
        "Title": "Interpreted String Literals",
        "Version": "1.4.2",
        "Authors@R": "person(\"Jim\", \"Hester\", email = \"james.f.hester@gmail.com\", role = c(\"aut\", \"cre\"))",
        "Description": "An implementation of interpreted string literals, inspired by\n  Python's Literal String Interpolation <https://www.python.org/dev/peps/pep-0498/> and Docstrings\n  <https://www.python.org/dev/peps/pep-0257/> and Julia's Triple-Quoted String Literals\n  <https://docs.julialang.org/en/v1.3/manual/strings/#Triple-Quoted-String-Literals-1>.",
        "Depends": "R (>= 3.2)",
        "Imports": "methods",
        "Suggests": "testthat, covr, magrittr, crayon, knitr, rmarkdown, DBI,\nRSQLite, R.utils, forcats, microbenchmark, rprintf, stringr,\nggplot2, dplyr, withr, vctrs (>= 0.3.0)",
        "License": "MIT + file LICENSE",
        "Encoding": "UTF-8",
        "LazyData": "true",
        "RoxygenNote": "7.1.1",
        "URL": "https://github.com/tidyverse/glue, https://glue.tidyverse.org/",
        "BugReports": "https://github.com/tidyverse/glue/issues",
        "VignetteBuilder": "knitr",
        "ByteCompile": "true",
        "NeedsCompilation": "yes",
        "Packaged": "2020-08-26 17:24:06 UTC; jhester",
        "Author": "Jim Hester [aut, cre]",
        "Maintainer": "Jim Hester <james.f.hester@gmail.com>",
        "Repository": "CRAN",
        "Date/Publication": "2020-08-27 13:50:06 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2021-10-11 17:43:06 UTC; unix"
      }
    },
    "gtable": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "gtable",
        "Title": "Arrange 'Grobs' in Tables",
        "Version": "0.3.0",
        "Authors@R": "\n    c(person(given = \"Hadley\",\n             family = \"Wickham\",\n             role = c(\"aut\", \"cre\"),\n             email = \"hadley@rstudio.com\"),\n      person(given = \"Thomas Lin\",\n             family = \"Pedersen\",\n             role = \"aut\",\n             email = \"thomas.pedersen@rstudio.com\"),\n      person(given = \"RStudio\",\n             role = \"cph\"))",
        "Description": "Tools to make it easier to work with \"tables\" of\n    'grobs'. The 'gtable' package defines a 'gtable' grob class that specifies a\n    grid along with a list of grobs and their placement in the grid. Further the\n    package makes it easy to manipulate and combine 'gtable' objects so that \n    complex compositions can be build up sequentially.",
        "License": "GPL-2",
        "Depends": "R (>= 3.0)",
        "Imports": "grid",
        "Suggests": "covr, testthat, knitr, rmarkdown, ggplot2, profvis",
        "Encoding": "UTF-8",
        "RoxygenNote": "6.1.1",
        "Collate": "'new-data-frame.r' 'add-grob.r' 'add-rows-cols.r'\n'add-space.r' 'grid.r' 'gtable-layouts.r' 'gtable-package.R'\n'gtable.r' 'rbind-cbind.r' 'utils.r' 'trim.r' 'filter.r'\n'align.r' 'padding.r' 'z.r'",
        "URL": "https://github.com/r-lib/gtable",
        "BugReports": "https://github.com/r-lib/gtable/issues",
        "VignetteBuilder": "knitr",
        "NeedsCompilation": "no",
        "Packaged": "2019-03-25 14:56:43 UTC; thomas",
        "Author": "Hadley Wickham [aut, cre],\n  Thomas Lin Pedersen [aut],\n  RStudio [cph]",
        "Maintainer": "Hadley Wickham <hadley@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2019-03-25 19:50:02 UTC",
        "Built": "R 3.6.3; ; 2020-07-21 17:57:19 UTC; unix"
      }
    },
    "here": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "here",
        "Title": "A Simpler Way to Find Your Files",
        "Version": "1.0.1",
        "Date": "2020-12-13",
        "Authors@R": "\n    c(person(given = \"Kirill\",\n             family = \"M\\u00fcller\",\n             role = c(\"aut\", \"cre\"),\n             email = \"krlmlr+r@mailbox.org\",\n             comment = c(ORCID = \"0000-0002-1416-3412\")),\n      person(given = \"Jennifer\",\n             family = \"Bryan\",\n             role = \"ctb\",\n             email = \"jenny@rstudio.com\",\n             comment = c(ORCID = \"0000-0002-6983-2759\")))",
        "Description": "Constructs paths to your project's files.\n    Declare the relative path of a file within your project with 'i_am()'.\n    Use the 'here()' function as a drop-in replacement for 'file.path()',\n    it will always locate the files relative to your project root.",
        "License": "MIT + file LICENSE",
        "URL": "https://here.r-lib.org/, https://github.com/r-lib/here",
        "BugReports": "https://github.com/r-lib/here/issues",
        "Imports": "rprojroot (>= 2.0.2)",
        "Suggests": "conflicted, covr, fs, knitr, palmerpenguins, plyr, readr,\nrlang, rmarkdown, testthat, uuid, withr",
        "VignetteBuilder": "knitr",
        "Encoding": "UTF-8",
        "LazyData": "true",
        "RoxygenNote": "7.1.1.9000",
        "Config/testthat/edition": "3",
        "NeedsCompilation": "no",
        "Packaged": "2020-12-13 06:59:33 UTC; kirill",
        "Author": "Kirill Müller [aut, cre] (<https://orcid.org/0000-0002-1416-3412>),\n  Jennifer Bryan [ctb] (<https://orcid.org/0000-0002-6983-2759>)",
        "Maintainer": "Kirill Müller <krlmlr+r@mailbox.org>",
        "Repository": "CRAN",
        "Date/Publication": "2020-12-13 07:30:02 UTC",
        "Built": "R 3.6.3; ; 2021-09-23 23:29:17 UTC; unix"
      }
    },
    "htmltools": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "htmltools",
        "Type": "Package",
        "Title": "Tools for HTML",
        "Version": "0.5.0",
        "Authors@R": "c(\n  person(\"Joe\", \"Cheng\", role = \"aut\", email = \"joe@rstudio.com\"),\n  person(\"Carson\", \"Sievert\", role = c(\"aut\", \"cre\"), email = \"carson@rstudio.com\", comment = c(ORCID = \"0000-0002-4958-2844\")),\n  person(\"Winston\", \"Chang\", role = \"aut\", email = \"winston@rstudio.com\"),\n  person(\"Yihui\", \"Xie\", role = \"aut\", email = \"yihui@rstudio.com\"),\n  person(\"Jeff\", \"Allen\", role = \"aut\", email = \"jeff@rstudio.com\"),\n  person(family = \"RStudio\", role = \"cph\")\n )",
        "Description": "Tools for HTML generation and output.",
        "Depends": "R (>= 2.14.1)",
        "Imports": "utils, digest, grDevices, base64enc, rlang",
        "Suggests": "markdown, testthat, withr, Cairo, ragg",
        "Enhances": "knitr",
        "License": "GPL (>= 2)",
        "URL": "https://github.com/rstudio/htmltools",
        "BugReports": "https://github.com/rstudio/htmltools/issues",
        "RoxygenNote": "7.1.0.9000",
        "Encoding": "UTF-8",
        "Collate": "'colors.R' 'html_dependency.R' 'html_escape.R' 'html_print.R'\n'images.R' 'known_tags.R' 'shim.R' 'utils.R' 'tags.R'\n'template.R'",
        "NeedsCompilation": "yes",
        "Packaged": "2020-06-15 14:46:19 UTC; cpsievert",
        "Author": "Joe Cheng [aut],\n  Carson Sievert [aut, cre] (<https://orcid.org/0000-0002-4958-2844>),\n  Winston Chang [aut],\n  Yihui Xie [aut],\n  Jeff Allen [aut],\n  RStudio [cph]",
        "Maintainer": "Carson Sievert <carson@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2020-06-16 14:10:10 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2020-07-21 17:45:17 UTC; unix"
      }
    },
    "htmlwidgets": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "htmlwidgets",
        "Type": "Package",
        "Title": "HTML Widgets for R",
        "Version": "1.5.1",
        "Authors@R": "c(\n    person(\"Ramnath\", \"Vaidyanathan\", role = c(\"aut\", \"cph\")),\n    person(\"Yihui\", \"Xie\", role = c(\"aut\")),\n    person(\"JJ\", \"Allaire\", role = c(\"aut\")),\n    person(\"Joe\", \"Cheng\", role = c(\"aut\", \"cre\"), email = \"joe@rstudio.com\"),\n    person(\"Kenton\", \"Russell\", role = c(\"aut\", \"cph\")),\n    person(family = \"RStudio\", role = \"cph\")\n    )",
        "Description": "A framework for creating HTML widgets that render in various\n    contexts including the R console, 'R Markdown' documents, and 'Shiny'\n    web applications.",
        "License": "MIT + file LICENSE",
        "VignetteBuilder": "knitr",
        "Imports": "grDevices, htmltools (>= 0.3), jsonlite (>= 0.9.16), yaml",
        "Suggests": "knitr (>= 1.8)",
        "Enhances": "shiny (>= 1.1)",
        "URL": "https://github.com/ramnathv/htmlwidgets",
        "BugReports": "https://github.com/ramnathv/htmlwidgets/issues",
        "RoxygenNote": "6.1.1",
        "NeedsCompilation": "no",
        "Packaged": "2019-10-07 21:55:31 UTC; jcheng",
        "Author": "Ramnath Vaidyanathan [aut, cph],\n  Yihui Xie [aut],\n  JJ Allaire [aut],\n  Joe Cheng [aut, cre],\n  Kenton Russell [aut, cph],\n  RStudio [cph]",
        "Maintainer": "Joe Cheng <joe@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2019-10-08 08:40:02 UTC",
        "Built": "R 3.6.3; ; 2020-07-21 17:48:41 UTC; unix"
      }
    },
    "httpuv": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "httpuv",
        "Type": "Package",
        "Encoding": "UTF-8",
        "Title": "HTTP and WebSocket Server Library",
        "Version": "1.5.4",
        "Authors@R": "c(\n    person(\"Joe\", \"Cheng\", role = c(\"aut\"), email = \"joe@rstudio.com\"),\n    person(\"Winston\", \"Chang\", role = c(\"aut\", \"cre\"), email = \"winston@rstudio.com\"),\n    person(family = \"RStudio, PBC\", role = \"cph\"),\n    person(\"Hector\", \"Corrada Bravo\", role = \"ctb\"),\n    person(\"Jeroen\", \"Ooms\", role = \"ctb\")\n    )",
        "Copyright": "RStudio, PBC; Joyent, Inc.; Nginx Inc.; Igor Sysoev; Niels\nProvos; Internet Systems Consortium, Inc.; Alexander Chemeris;\nBerkeley Software Design; Google Inc.; Sony Mobile\nCommunications AB; Alexander Peslyak; Free Software Foundation,\nInc.; X Consortium; Ben Noordhuis; StrongLoop, Inc.; Saúl\nIbarra Corretgé; Bert Belder; Fedor Indutny; libuv project;\nRefael Ackermann; Kenneth MacKay; Emergya; Diego Pettenò; xine\nproject, The Regents of the University of California, Dariusz\nDwornikowski",
        "Description": "Provides low-level socket and protocol support for handling\n    HTTP and WebSocket requests directly from within R. It is primarily\n    intended as a building block for other packages, rather than making it\n    particularly easy to create complete web applications using httpuv alone.\n    httpuv is built on top of the libuv and http-parser C libraries, both of\n    which were developed by Joyent, Inc. (See LICENSE file for libuv and\n    http-parser license information.)",
        "License": "GPL (>= 2) | file LICENSE",
        "Depends": "R (>= 2.15.1)",
        "Imports": "Rcpp (>= 0.11.0), utils, R6, promises, later (>= 0.8.0)",
        "LinkingTo": "Rcpp, BH, later",
        "URL": "https://github.com/rstudio/httpuv",
        "SystemRequirements": "GNU make",
        "RoxygenNote": "7.1.0",
        "Suggests": "testthat, callr, curl, websocket",
        "Collate": "'RcppExports.R' 'httpuv.R' 'random_port.R' 'server.R'\n'static_paths.R' 'utils.R'",
        "NeedsCompilation": "yes",
        "Packaged": "2020-06-05 19:56:39 UTC; winston",
        "Author": "Joe Cheng [aut],\n  Winston Chang [aut, cre],\n  RStudio, PBC [cph],\n  Hector Corrada Bravo [ctb],\n  Jeroen Ooms [ctb]",
        "Maintainer": "Winston Chang <winston@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2020-06-06 05:00:06 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2020-07-21 17:50:12 UTC; unix"
      }
    },
    "isoband": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "isoband",
        "Title": "Generate Isolines and Isobands from Regularly Spaced Elevation\nGrids",
        "Version": "0.2.2",
        "Authors@R": "\n    c(person(given = \"Claus O.\",\n             family = \"Wilke\",\n             role = c(\"aut\", \"cre\"),\n             email = \"wilke@austin.utexas.edu\",\n             comment = c(ORCID = \"0000-0002-7470-9261\")),\n      person(given = \"Thomas Lin\",\n             family = \"Pedersen\",\n             role = \"aut\",\n             email = \"thomasp85@gmail.com\",\n             comment = c(ORCID = \"0000-0002-5147-4711\")))",
        "Description": "A fast C++ implementation to generate contour lines (isolines) and\n  contour polygons (isobands) from regularly spaced grids containing elevation data.",
        "URL": "https://github.com/wilkelab/isoband",
        "BugReports": "https://github.com/wilkelab/isoband/issues",
        "License": "MIT + file LICENSE",
        "Encoding": "UTF-8",
        "LazyData": "true",
        "LinkingTo": "testthat",
        "Imports": "grid, utils",
        "RoxygenNote": "7.1.0",
        "Suggests": "covr, ggplot2, knitr, magick, microbenchmark, rmarkdown, sf,\ntestthat",
        "SystemRequirements": "C++11",
        "VignetteBuilder": "knitr",
        "NeedsCompilation": "yes",
        "Packaged": "2020-06-20 17:41:18 UTC; clauswilke",
        "Author": "Claus O. Wilke [aut, cre] (<https://orcid.org/0000-0002-7470-9261>),\n  Thomas Lin Pedersen [aut] (<https://orcid.org/0000-0002-5147-4711>)",
        "Maintainer": "Claus O. Wilke <wilke@austin.utexas.edu>",
        "Repository": "CRAN",
        "Date/Publication": "2020-06-20 18:20:03 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2020-07-21 18:19:09 UTC; unix"
      }
    },
    "jquerylib": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "jquerylib",
        "Title": "Obtain 'jQuery' as an HTML Dependency Object",
        "Version": "0.1.4",
        "Authors@R": "c(\n    person(\"Carson\", \"Sievert\", role = c(\"aut\", \"cre\"), email = \"carson@rstudio.com\", comment = c(ORCID = \"0000-0002-4958-2844\")),\n    person(\"Joe\", \"Cheng\", role = \"aut\", email = \"joe@rstudio.com\"),\n    person(family = \"RStudio\", role = \"cph\"),\n    person(family = \"jQuery Foundation\", role = \"cph\",\n    comment = \"jQuery library and jQuery UI library\"),\n    person(family = \"jQuery contributors\", role = c(\"ctb\", \"cph\"),\n    comment = \"jQuery library; authors listed in inst/lib/jquery-AUTHORS.txt\")\n    )",
        "Description": "Obtain any major version of 'jQuery' (<https://code.jquery.com/>) and use it in any webpage generated by 'htmltools' (e.g. 'shiny', 'htmlwidgets', and 'rmarkdown').\n    Most R users don't need to use this package directly, but other R packages (e.g. 'shiny', 'rmarkdown', etc.) depend on this package to avoid bundling redundant copies of 'jQuery'.",
        "License": "MIT + file LICENSE",
        "Encoding": "UTF-8",
        "Config/testthat/edition": "3",
        "RoxygenNote": "7.0.2",
        "Imports": "htmltools",
        "Suggests": "testthat",
        "NeedsCompilation": "no",
        "Packaged": "2021-04-26 16:40:21 UTC; cpsievert",
        "Author": "Carson Sievert [aut, cre] (<https://orcid.org/0000-0002-4958-2844>),\n  Joe Cheng [aut],\n  RStudio [cph],\n  jQuery Foundation [cph] (jQuery library and jQuery UI library),\n  jQuery contributors [ctb, cph] (jQuery library; authors listed in\n    inst/lib/jquery-AUTHORS.txt)",
        "Maintainer": "Carson Sievert <carson@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2021-04-26 17:10:02 UTC",
        "Built": "R 3.6.3; ; 2021-09-23 23:29:47 UTC; unix"
      }
    },
    "jsonlite": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "jsonlite",
        "Version": "1.7.2",
        "Title": "A Simple and Robust JSON Parser and Generator for R",
        "License": "MIT + file LICENSE",
        "Depends": "methods",
        "Authors@R": "c(\n    person(\"Jeroen\", \"Ooms\", role = c(\"aut\", \"cre\"), email = \"jeroen@berkeley.edu\",\n      comment = c(ORCID = \"0000-0002-4035-0289\")),\n    person(\"Duncan\", \"Temple Lang\", role = \"ctb\"),\n    person(\"Lloyd\", \"Hilaiel\", role = \"cph\", comment=\"author of bundled libyajl\"))",
        "URL": "https://arxiv.org/abs/1403.2805 (paper)",
        "BugReports": "https://github.com/jeroen/jsonlite/issues",
        "Maintainer": "Jeroen Ooms <jeroen@berkeley.edu>",
        "VignetteBuilder": "knitr, R.rsp",
        "Description": "A reasonably fast JSON parser and generator, optimized for statistical \n    data and the web. Offers simple, flexible tools for working with JSON in R, and\n    is particularly powerful for building pipelines and interacting with a web API. \n    The implementation is based on the mapping described in the vignette (Ooms, 2014).\n    In addition to converting JSON data from/to R objects, 'jsonlite' contains \n    functions to stream, validate, and prettify JSON data. The unit tests included \n    with the package verify that all edge cases are encoded and decoded consistently \n    for use with dynamic data in systems and applications.",
        "Suggests": "httr, curl, plyr, testthat, knitr, rmarkdown, R.rsp, sf",
        "RoxygenNote": "7.1.1",
        "Encoding": "UTF-8",
        "NeedsCompilation": "yes",
        "Packaged": "2020-12-09 13:54:18 UTC; jeroen",
        "Author": "Jeroen Ooms [aut, cre] (<https://orcid.org/0000-0002-4035-0289>),\n  Duncan Temple Lang [ctb],\n  Lloyd Hilaiel [cph] (author of bundled libyajl)",
        "Repository": "CRAN",
        "Date/Publication": "2020-12-09 17:40:03 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2021-10-11 17:44:02 UTC; unix"
      }
    },
    "labeling": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "labeling",
        "Type": "Package",
        "Title": "Axis Labeling",
        "Version": "0.3",
        "Date": "2014-08-22",
        "Author": "Justin Talbot",
        "Maintainer": "Justin Talbot <justintalbot@gmail.com>",
        "Description": "Provides a range of axis labeling algorithms",
        "License": "MIT + file LICENSE | Unlimited",
        "LazyLoad": "no",
        "Collate": "'labeling.R'",
        "Repository": "CRAN",
        "Repository/R-Forge/Project": "labeling",
        "Repository/R-Forge/Revision": "16",
        "Repository/R-Forge/DateTimeStamp": "2014-08-23 05:53:23",
        "Date/Publication": "2014-08-23 14:57:53",
        "Packaged": "2014-08-23 06:15:07 UTC; rforge",
        "NeedsCompilation": "no",
        "Built": "R 3.6.3; ; 2020-07-21 18:04:41 UTC; unix"
      }
    },
    "later": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "later",
        "Type": "Package",
        "Title": "Utilities for Scheduling Functions to Execute Later with Event\nLoops",
        "Version": "1.1.0.1",
        "Authors@R": "c(\n    person(\"Joe\", \"Cheng\", role = c(\"aut\", \"cre\"), email = \"joe@rstudio.com\"),\n    person(family = \"RStudio\", role = \"cph\"),\n    person(\"Winston\", \"Chang\", role = c(\"aut\"), email = \"winston@rstudio.com\"),\n    person(\"Marcus\", \"Geelnard\", role = c(\"ctb\", \"cph\"), comment = \"TinyCThread library, https://tinycthread.github.io/\"),\n    person(\"Evan\", \"Nemerson\", role = c(\"ctb\", \"cph\"), comment = \"TinyCThread library, https://tinycthread.github.io/\")\n    )",
        "Description": "Executes arbitrary R or C functions some time after the current\n    time, after the R execution stack has emptied. The functions are scheduled\n    in an event loop.",
        "URL": "https://github.com/r-lib/later",
        "BugReports": "https://github.com/r-lib/later/issues",
        "License": "GPL (>= 2)",
        "Imports": "Rcpp (>= 0.12.9), rlang",
        "LinkingTo": "Rcpp, BH",
        "RoxygenNote": "7.1.0",
        "Suggests": "knitr, rmarkdown, testthat",
        "VignetteBuilder": "knitr",
        "NeedsCompilation": "yes",
        "Packaged": "2020-06-02 13:23:01 UTC; winston",
        "Author": "Joe Cheng [aut, cre],\n  RStudio [cph],\n  Winston Chang [aut],\n  Marcus Geelnard [ctb, cph] (TinyCThread library,\n    https://tinycthread.github.io/),\n  Evan Nemerson [ctb, cph] (TinyCThread library,\n    https://tinycthread.github.io/)",
        "Maintainer": "Joe Cheng <joe@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2020-06-05 10:10:13 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2020-07-21 17:44:53 UTC; unix"
      }
    },
    "lattice": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "lattice",
        "Version": "0.20-41",
        "Date": "2020-04-01",
        "Priority": "recommended",
        "Title": "Trellis Graphics for R",
        "Authors@R": "c(person(\"Deepayan\", \"Sarkar\", role = c(\"aut\", \"cre\"),\n\t            email = \"deepayan.sarkar@r-project.org\",\n\t\t    comment = c(ORCID = \"0000-0003-4107-1553\")),\n              person(\"Felix\", \"Andrews\", role = \"ctb\"),\n\t      person(\"Kevin\", \"Wright\", role = \"ctb\", comment = \"documentation\"),\n\t      person(\"Neil\", \"Klepeis\", role = \"ctb\"),\n              person(\"Paul\", \"Murrell\", role = \"ctb\", email = \"paul@stat.auckland.ac.nz\"))",
        "Description": "A powerful and elegant high-level data visualization\n  system inspired by Trellis graphics, with an emphasis on\n  multivariate data. Lattice is sufficient for typical graphics needs,\n  and is also flexible enough to handle most nonstandard requirements.\n  See ?Lattice for an introduction.",
        "Depends": "R (>= 3.0.0)",
        "Suggests": "KernSmooth, MASS, latticeExtra",
        "Imports": "grid, grDevices, graphics, stats, utils",
        "Enhances": "chron",
        "LazyLoad": "yes",
        "LazyData": "yes",
        "License": "GPL (>= 2)",
        "URL": "http://lattice.r-forge.r-project.org/",
        "BugReports": "https://github.com/deepayan/lattice/issues",
        "NeedsCompilation": "yes",
        "Packaged": "2020-04-02 10:52:37 UTC; deepayan",
        "Author": "Deepayan Sarkar [aut, cre] (<https://orcid.org/0000-0003-4107-1553>),\n  Felix Andrews [ctb],\n  Kevin Wright [ctb] (documentation),\n  Neil Klepeis [ctb],\n  Paul Murrell [ctb]",
        "Maintainer": "Deepayan Sarkar <deepayan.sarkar@r-project.org>",
        "Repository": "CRAN",
        "Date/Publication": "2020-04-02 12:00:06 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; \"Thu, 09 Apr 2020 14:19:52 +0000\"; unix"
      }
    },
    "lazyeval": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "lazyeval",
        "Version": "0.2.2",
        "Title": "Lazy (Non-Standard) Evaluation",
        "Description": "An alternative approach to non-standard evaluation using\n    formulas. Provides a full implementation of LISP style 'quasiquotation',\n    making it easier to generate code with other code.",
        "Authors@R": "c(\n    person(\"Hadley\", \"Wickham\", ,\"hadley@rstudio.com\", c(\"aut\", \"cre\")),\n    person(\"RStudio\", role = \"cph\")\n    )",
        "License": "GPL-3",
        "LazyData": "true",
        "Depends": "R (>= 3.1.0)",
        "Suggests": "knitr, rmarkdown (>= 0.2.65), testthat, covr",
        "VignetteBuilder": "knitr",
        "RoxygenNote": "6.1.1",
        "NeedsCompilation": "yes",
        "Packaged": "2019-03-15 14:18:01 UTC; lionel",
        "Author": "Hadley Wickham [aut, cre],\n  RStudio [cph]",
        "Maintainer": "Hadley Wickham <hadley@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2019-03-15 17:50:07 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2020-07-21 17:43:45 UTC; unix"
      }
    },
    "lifecycle": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "lifecycle",
        "Title": "Manage the Life Cycle of your Package Functions",
        "Version": "1.0.0",
        "Authors@R": "\n    c(person(given = \"Lionel\",\n             family = \"Henry\",\n             role = c(\"aut\", \"cre\"),\n             email = \"lionel@rstudio.com\"),\n      person(given = \"Hadley\",\n             family = \"Wickham\",\n             role = \"aut\",\n             email = \"hadley@rstudio.com\",\n             comment = c(ORCID = \"0000-0003-4757-117X\")),\n      person(given = \"RStudio\",\n             role = \"cph\"))",
        "Description": "Manage the life cycle of your exported functions\n    with shared conventions, documentation badges, and user-friendly\n    deprecation warnings.",
        "License": "MIT + file LICENSE",
        "URL": "https://lifecycle.r-lib.org/, https://github.com/r-lib/lifecycle",
        "BugReports": "https://github.com/r-lib/lifecycle/issues",
        "Depends": "R (>= 3.3)",
        "Imports": "glue, rlang (>= 0.4.10)",
        "Suggests": "covr, crayon, knitr, rmarkdown, testthat (>= 3.0.1), tibble",
        "VignetteBuilder": "knitr",
        "Config/testthat/edition": "3",
        "Encoding": "UTF-8",
        "LazyData": "true",
        "RoxygenNote": "7.1.1",
        "NeedsCompilation": "no",
        "Packaged": "2021-02-15 13:48:33 UTC; hadley",
        "Author": "Lionel Henry [aut, cre],\n  Hadley Wickham [aut] (<https://orcid.org/0000-0003-4757-117X>),\n  RStudio [cph]",
        "Maintainer": "Lionel Henry <lionel@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2021-02-15 15:20:06 UTC",
        "Built": "R 3.6.3; ; 2021-09-22 14:25:07 UTC; unix"
      }
    },
    "magrittr": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Type": "Package",
        "Package": "magrittr",
        "Title": "A Forward-Pipe Operator for R",
        "Version": "2.0.1",
        "Authors@R": "\n    c(person(given = \"Stefan Milton\",\n             family = \"Bache\",\n             role = c(\"aut\", \"cph\"),\n             email = \"stefan@stefanbache.dk\",\n             comment = \"Original author and creator of magrittr\"),\n      person(given = \"Hadley\",\n             family = \"Wickham\",\n             role = \"aut\",\n             email = \"hadley@rstudio.com\"),\n      person(given = \"Lionel\",\n             family = \"Henry\",\n             role = \"cre\",\n             email = \"lionel@rstudio.com\"),\n      person(given = \"RStudio\",\n             role = c(\"cph\", \"fnd\")))",
        "Description": "Provides a mechanism for chaining commands with a\n    new forward-pipe operator, %>%. This operator will forward a value, or\n    the result of an expression, into the next function call/expression.\n    There is flexible support for the type of right-hand side expressions.\n    For more information, see package vignette.  To quote Rene Magritte,\n    \"Ceci n'est pas un pipe.\"",
        "License": "MIT + file LICENSE",
        "URL": "https://magrittr.tidyverse.org,\nhttps://github.com/tidyverse/magrittr",
        "BugReports": "https://github.com/tidyverse/magrittr/issues",
        "Suggests": "covr, knitr, rlang, rmarkdown, testthat",
        "VignetteBuilder": "knitr",
        "ByteCompile": "Yes",
        "Encoding": "UTF-8",
        "RoxygenNote": "7.1.1",
        "NeedsCompilation": "yes",
        "Packaged": "2020-11-17 12:44:34 UTC; lionel",
        "Author": "Stefan Milton Bache [aut, cph] (Original author and creator of\n    magrittr),\n  Hadley Wickham [aut],\n  Lionel Henry [cre],\n  RStudio [cph, fnd]",
        "Maintainer": "Lionel Henry <lionel@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2020-11-17 16:20:06 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2021-10-11 17:44:27 UTC; unix"
      }
    },
    "memoise": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "memoise",
        "Title": "Memoisation of Functions",
        "Version": "2.0.0",
        "Authors@R": "\n    c(person(given = \"Hadley\",\n             family = \"Wickham\",\n             role = \"aut\",\n             email = \"hadley@rstudio.com\"),\n      person(given = \"Jim\",\n             family = \"Hester\",\n             role = c(\"aut\", \"cre\"),\n             email = \"jim.hester@rstudio.com\"),\n      person(given = \"Winston\",\n             family = \"Chang\",\n             role = \"aut\",\n             email = \"winston@rstudio.com\"),\n      person(given = \"Kirill\",\n             family = \"Müller\",\n             role = \"aut\",\n             email = \"krlmlr+r@mailbox.org\"),\n      person(given = \"Daniel\",\n             family = \"Cook\",\n             role = \"aut\",\n             email = \"danielecook@gmail.com\"),\n      person(given = \"Mark\",\n             family = \"Edmondson\",\n             role = \"ctb\",\n             email = \"r@sunholo.com\"))",
        "Description": "Cache the results of a function so that when you\n    call it again with the same arguments it returns the pre-computed\n    value.",
        "License": "MIT + file LICENSE",
        "URL": "https://github.com/r-lib/memoise",
        "BugReports": "https://github.com/r-lib/memoise/issues",
        "Imports": "rlang (>= 0.4.10), cachem",
        "Suggests": "digest, aws.s3, covr, googleAuthR, googleCloudStorageR, httr,\ntestthat",
        "Encoding": "UTF-8",
        "RoxygenNote": "7.1.1",
        "NeedsCompilation": "no",
        "Packaged": "2021-01-26 16:15:31 UTC; winston",
        "Author": "Hadley Wickham [aut],\n  Jim Hester [aut, cre],\n  Winston Chang [aut],\n  Kirill Müller [aut],\n  Daniel Cook [aut],\n  Mark Edmondson [ctb]",
        "Maintainer": "Jim Hester <jim.hester@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2021-01-26 17:20:02 UTC",
        "Built": "R 3.6.3; ; 2021-09-23 23:30:36 UTC; unix"
      }
    },
    "mgcv": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "mgcv",
        "Version": "1.8-31",
        "Author": "Simon Wood <simon.wood@r-project.org>",
        "Maintainer": "Simon Wood <simon.wood@r-project.org>",
        "Title": "Mixed GAM Computation Vehicle with Automatic Smoothness\nEstimation",
        "Description": "Generalized additive (mixed) models, some of their extensions and \n             other generalized ridge regression with multiple smoothing \n             parameter estimation by (Restricted) Marginal Likelihood, \n             Generalized Cross Validation and similar, or using iterated \n             nested Laplace approximation for fully Bayesian inference. See \n             Wood (2017) <doi:10.1201/9781315370279> for an overview. \n             Includes a gam() function, a wide variety of smoothers, 'JAGS' \n             support and distributions beyond the exponential family. ",
        "Priority": "recommended",
        "Depends": "R (>= 2.14.0), nlme (>= 3.1-64)",
        "Imports": "methods, stats, graphics, Matrix, splines, utils",
        "Suggests": "parallel, survival, MASS",
        "LazyLoad": "yes",
        "ByteCompile": "yes",
        "License": "GPL (>= 2)",
        "NeedsCompilation": "yes",
        "Packaged": "2019-11-08 21:21:15 UTC; sw283",
        "Repository": "CRAN",
        "Date/Publication": "2019-11-09 05:30:11 UTC",
        "Built": "R 3.6.1; x86_64-pc-linux-gnu; \"Sat, 16 Nov 2019 16:30:18 +0000\"; unix"
      }
    },
    "mime": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "mime",
        "Type": "Package",
        "Title": "Map Filenames to MIME Types",
        "Version": "0.9",
        "Authors@R": "c(\n    person(\"Yihui\", \"Xie\", role = c(\"aut\", \"cre\"), email = \"xie@yihui.name\", comment = c(ORCID = \"0000-0003-0645-5666\")),\n    person(\"Jeffrey\", \"Horner\", role = \"ctb\"),\n    person(\"Beilei\", \"Bian\", role = \"ctb\")\n    )",
        "Description": "Guesses the MIME type from a filename extension using the data\n    derived from /etc/mime.types in UNIX-type systems.",
        "Imports": "tools",
        "License": "GPL",
        "URL": "https://github.com/yihui/mime",
        "BugReports": "https://github.com/yihui/mime/issues",
        "LazyData": "TRUE",
        "RoxygenNote": "7.0.2",
        "Encoding": "UTF-8",
        "NeedsCompilation": "yes",
        "Packaged": "2020-02-04 17:11:45 UTC; yihui",
        "Author": "Yihui Xie [aut, cre] (<https://orcid.org/0000-0003-0645-5666>),\n  Jeffrey Horner [ctb],\n  Beilei Bian [ctb]",
        "Maintainer": "Yihui Xie <xie@yihui.name>",
        "Repository": "CRAN",
        "Date/Publication": "2020-02-04 18:20:06 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2020-07-21 17:42:47 UTC; unix"
      }
    },
    "munsell": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "munsell",
        "Type": "Package",
        "Title": "Utilities for Using Munsell Colours",
        "Version": "0.5.0",
        "Author": "Charlotte Wickham <cwickham@gmail.com>",
        "Maintainer": "Charlotte Wickham <cwickham@gmail.com>",
        "Description": "Provides easy access to, and manipulation of, the Munsell \n    colours. Provides a mapping between Munsell's \n    original notation (e.g. \"5R 5/10\") and hexadecimal strings suitable \n    for use directly in R graphics. Also provides utilities \n    to explore slices through the Munsell colour tree, to transform \n    Munsell colours and display colour palettes.",
        "Suggests": "ggplot2, testthat",
        "Imports": "colorspace, methods",
        "License": "MIT + file LICENSE",
        "URL": "https://cran.r-project.org/package=munsell,\nhttps://github.com/cwickham/munsell/",
        "RoxygenNote": "6.0.1",
        "NeedsCompilation": "no",
        "Packaged": "2018-06-11 23:15:15 UTC; wickhamc",
        "Repository": "CRAN",
        "Date/Publication": "2018-06-12 04:29:06 UTC",
        "Built": "R 3.6.3; ; 2020-07-21 18:07:29 UTC; unix"
      }
    },
    "nlme": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "nlme",
        "Version": "3.1-147",
        "Date": "2020-04-13",
        "Priority": "recommended",
        "Title": "Linear and Nonlinear Mixed Effects Models",
        "Authors@R": "c(person(\"José\", \"Pinheiro\", role = \"aut\", comment = \"S version\"),\n             person(\"Douglas\", \"Bates\", role = \"aut\", comment = \"up to 2007\"),\n             person(\"Saikat\", \"DebRoy\", role = \"ctb\", comment = \"up to 2002\"),\n             person(\"Deepayan\", \"Sarkar\", role = \"ctb\", comment = \"up to 2005\"),\n             person(\"EISPACK authors\", role = \"ctb\", comment = \"src/rs.f\"),\n\t     person(\"Siem\", \"Heisterkamp\", role = \"ctb\", comment = \"Author fixed sigma\"),\n             person(\"Bert\", \"Van Willigen\",role = \"ctb\", comment = \"Programmer fixed sigma\"),\n\t     person(\"R-core\", email = \"R-core@R-project.org\",\n                    role = c(\"aut\", \"cre\")))",
        "Description": "Fit and compare Gaussian linear and nonlinear mixed-effects models.",
        "Depends": "R (>= 3.4.0)",
        "Imports": "graphics, stats, utils, lattice",
        "Suggests": "Hmisc, MASS",
        "LazyData": "yes",
        "ByteCompile": "yes",
        "Encoding": "UTF-8",
        "License": "GPL (>= 2) | file LICENCE",
        "BugReports": "https://bugs.r-project.org",
        "URL": "https://svn.r-project.org/R-packages/trunk/nlme",
        "NeedsCompilation": "yes",
        "Packaged": "2020-04-13 09:05:34 UTC; ripley",
        "Author": "José Pinheiro [aut] (S version),\n  Douglas Bates [aut] (up to 2007),\n  Saikat DebRoy [ctb] (up to 2002),\n  Deepayan Sarkar [ctb] (up to 2005),\n  EISPACK authors [ctb] (src/rs.f),\n  Siem Heisterkamp [ctb] (Author fixed sigma),\n  Bert Van Willigen [ctb] (Programmer fixed sigma),\n  R-core [aut, cre]",
        "Maintainer": "R-core <R-core@R-project.org>",
        "Repository": "CRAN",
        "Date/Publication": "2020-04-13 09:20:03 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 'Thu, 16 Apr 2020 17:43:22 +0000'; unix"
      }
    },
    "openssl": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "openssl",
        "Type": "Package",
        "Title": "Toolkit for Encryption, Signatures and Certificates Based on\nOpenSSL",
        "Version": "1.4.5",
        "Authors@R": "c(person(\"Jeroen\", \"Ooms\", role = c(\"aut\", \"cre\"), email = \"jeroen@berkeley.edu\",\n    comment = c(ORCID = \"0000-0002-4035-0289\")),\n    person(\"Oliver\", \"Keyes\", role = \"ctb\"))",
        "Description": "Bindings to OpenSSL libssl and libcrypto, plus custom SSH key parsers.\n    Supports RSA, DSA and EC curves P-256, P-384, P-521, and curve25519. Cryptographic\n    signatures can either be created and verified manually or via x509 certificates. \n    AES can be used in cbc, ctr or gcm mode for symmetric encryption; RSA for asymmetric\n    (public key) encryption or EC for Diffie Hellman. High-level envelope functions \n    combine RSA and AES for encrypting arbitrary sized data. Other utilities include key\n    generators, hash functions (md5, sha1, sha256, etc), base64 encoder, a secure random\n    number generator, and 'bignum' math methods for manually performing crypto \n    calculations on large multibyte integers.",
        "License": "MIT + file LICENSE",
        "URL": "https://github.com/jeroen/openssl",
        "BugReports": "https://github.com/jeroen/openssl/issues",
        "SystemRequirements": "OpenSSL >= 1.0.1",
        "VignetteBuilder": "knitr",
        "Imports": "askpass",
        "Suggests": "testthat (>= 2.1.0), digest, knitr, rmarkdown, jsonlite,\njose, sodium",
        "RoxygenNote": "7.1.1",
        "Encoding": "UTF-8",
        "NeedsCompilation": "yes",
        "Packaged": "2021-09-01 13:46:10 UTC; jeroen",
        "Author": "Jeroen Ooms [aut, cre] (<https://orcid.org/0000-0002-4035-0289>),\n  Oliver Keyes [ctb]",
        "Maintainer": "Jeroen Ooms <jeroen@berkeley.edu>",
        "Repository": "CRAN",
        "Date/Publication": "2021-09-02 14:50:02 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2021-09-22 14:24:17 UTC; unix"
      }
    },
    "pillar": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "pillar",
        "Title": "Coloured Formatting for Columns",
        "Version": "1.6.2",
        "Authors@R": "\n    c(person(given = \"Kirill\",\n             family = \"M\\u00fcller\",\n             role = c(\"aut\", \"cre\"),\n             email = \"krlmlr+r@mailbox.org\"),\n      person(given = \"Hadley\",\n             family = \"Wickham\",\n             role = \"aut\"),\n      person(given = \"RStudio\",\n             role = \"cph\"))",
        "Description": "Provides 'pillar' and 'colonnade' generics designed\n    for formatting columns of data using the full range of colours\n    provided by modern terminals.",
        "License": "MIT + file LICENSE",
        "URL": "https://pillar.r-lib.org/, https://github.com/r-lib/pillar",
        "BugReports": "https://github.com/r-lib/pillar/issues",
        "Imports": "cli, crayon (>= 1.3.4), ellipsis (>= 0.3.2), fansi, lifecycle,\nrlang (>= 0.3.0), utf8 (>= 1.1.0), utils, vctrs (>= 0.3.8)",
        "Suggests": "bit64, debugme, DiagrammeR, dplyr, formattable, ggplot2,\nknitr, lubridate, nycflights13, palmerpenguins, rmarkdown,\nscales, stringi, survival, testthat (>= 3.0.2), tibble, units\n(>= 0.7.2), withr",
        "VignetteBuilder": "knitr",
        "Encoding": "UTF-8",
        "RoxygenNote": "7.1.1.9001",
        "Config/testthat/edition": "3",
        "Config/testthat/parallel": "true",
        "Config/testthat/start-first": "format_multi_fuzz, format_multi_fuzz_2,\nformat_multi, ctl_colonnade, ctl_colonnade_1, ctl_colonnade_2",
        "NeedsCompilation": "no",
        "Packaged": "2021-07-29 03:40:03 UTC; kirill",
        "Author": "Kirill Müller [aut, cre],\n  Hadley Wickham [aut],\n  RStudio [cph]",
        "Maintainer": "Kirill Müller <krlmlr+r@mailbox.org>",
        "Repository": "CRAN",
        "Date/Publication": "2021-07-29 08:50:01 UTC",
        "Built": "R 3.6.3; ; 2021-09-22 14:26:05 UTC; unix"
      }
    },
    "pkgconfig": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "pkgconfig",
        "Title": "Private Configuration for 'R' Packages",
        "Version": "2.0.3",
        "Author": "Gábor Csárdi",
        "Maintainer": "Gábor Csárdi <csardi.gabor@gmail.com>",
        "Description": "Set configuration options on a per-package basis.\n    Options set by a given package only apply to that package,\n    other packages are unaffected.",
        "License": "MIT + file LICENSE",
        "LazyData": "true",
        "Imports": "utils",
        "Suggests": "covr, testthat, disposables (>= 1.0.3)",
        "URL": "https://github.com/r-lib/pkgconfig#readme",
        "BugReports": "https://github.com/r-lib/pkgconfig/issues",
        "Encoding": "UTF-8",
        "NeedsCompilation": "no",
        "Packaged": "2019-09-22 08:42:40 UTC; gaborcsardi",
        "Repository": "CRAN",
        "Date/Publication": "2019-09-22 09:20:02 UTC",
        "Built": "R 3.6.3; ; 2020-07-21 17:57:16 UTC; unix"
      }
    },
    "pkgload": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "pkgload",
        "Title": "Simulate Package Installation and Attach",
        "Version": "1.2.3",
        "Authors@R": "c(\n    person(\"Hadley\", \"Wickham\", role = \"aut\"),\n    person(\"Jim\", \"Hester\", , \"jim.hester@rstudio.com\", role = c(\"aut\", \"cre\")),\n    person(\"Winston\", \"Chang\", role = \"aut\"),\n    person(\"RStudio\", role = \"cph\"),\n    person(\"R Core team\", role = \"ctb\",\n      comment = \"Some namespace and vignette code extracted from base R\")\n    )",
        "Description": "Simulates the process of installing a package\n    and then attaching it. This is a key part of the 'devtools' package as it\n    allows you to rapidly iterate while developing a package.",
        "License": "GPL-3",
        "URL": "https://github.com/r-lib/pkgload",
        "BugReports": "https://github.com/r-lib/pkgload/issues",
        "Imports": "cli, crayon, desc, methods, rlang, rprojroot, rstudioapi,\nutils, withr",
        "Suggests": "bitops, covr, pkgbuild, Rcpp, testthat",
        "Encoding": "UTF-8",
        "RoxygenNote": "7.1.1",
        "NeedsCompilation": "no",
        "Packaged": "2021-10-12 19:57:14 UTC; jhester",
        "Author": "Hadley Wickham [aut],\n  Jim Hester [aut, cre],\n  Winston Chang [aut],\n  RStudio [cph],\n  R Core team [ctb] (Some namespace and vignette code extracted from base\n    R)",
        "Maintainer": "Jim Hester <jim.hester@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2021-10-13 20:20:04 UTC",
        "Built": "R 3.6.3; ; 2021-10-27 19:38:26 UTC; unix"
      }
    },
    "plogr": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "plogr",
        "Title": "The 'plog' C++ Logging Library",
        "Version": "0.2.0",
        "Date": "2018-03-24",
        "Authors@R": "c(\n  person(\"Kirill\", \"Müller\", role = c(\"aut\", \"cre\"), email = \"krlmlr+r@mailbox.org\"),\n  person(\"Sergey\", \"Podobry\", role = \"cph\", comment = \"Author of the bundled plog library\"))",
        "Description": "\n  A simple header-only logging library for C++.\n  Add 'LinkingTo: plogr' to 'DESCRIPTION', and '#include <plogr.h>' in your C++ modules to use it.",
        "Suggests": "Rcpp",
        "License": "MIT + file LICENSE",
        "Encoding": "UTF-8",
        "LazyData": "true",
        "URL": "https://github.com/krlmlr/plogr#readme",
        "BugReports": "https://github.com/krlmlr/plogr/issues",
        "RoxygenNote": "6.0.1.9000",
        "NeedsCompilation": "no",
        "Packaged": "2018-03-24 11:02:06 UTC; muelleki",
        "Author": "Kirill Müller [aut, cre],\n  Sergey Podobry [cph] (Author of the bundled plog library)",
        "Maintainer": "Kirill Müller <krlmlr+r@mailbox.org>",
        "Repository": "CRAN",
        "Date/Publication": "2018-03-25 15:25:27 UTC",
        "Built": "R 3.6.3; ; 2021-09-23 23:30:26 UTC; unix"
      }
    },
    "praise": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "praise",
        "Title": "Praise Users",
        "Version": "1.0.0",
        "Author": "Gabor Csardi, Sindre Sorhus",
        "Maintainer": "Gabor Csardi <csardi.gabor@gmail.com>",
        "Description": "Build friendly R packages that\n    praise their users if they have done something\n    good, or they just need it to feel better.",
        "License": "MIT + file LICENSE",
        "LazyData": "true",
        "URL": "https://github.com/gaborcsardi/praise",
        "BugReports": "https://github.com/gaborcsardi/praise/issues",
        "Suggests": "testthat",
        "Collate": "'adjective.R' 'adverb.R' 'exclamation.R' 'verb.R' 'rpackage.R'\n'package.R'",
        "NeedsCompilation": "no",
        "Packaged": "2015-08-11 02:01:43 UTC; gaborcsardi",
        "Repository": "CRAN",
        "Date/Publication": "2015-08-11 08:22:28",
        "Built": "R 3.6.3; ; 2020-07-21 17:56:49 UTC; unix"
      }
    },
    "processx": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "processx",
        "Title": "Execute and Control System Processes",
        "Version": "3.5.2",
        "Authors@R": "c(\n    person(\"Gábor\", \"Csárdi\", role = c(\"aut\", \"cre\", \"cph\"),\n           email = \"csardi.gabor@gmail.com\",\n\t   comment = c(ORCID = \"0000-0001-7098-9676\")),\n    person(\"Winston\", \"Chang\", role = \"aut\"),\n    person(\"RStudio\", role = c(\"cph\", \"fnd\")),\n    person(\"Mango Solutions\", role  = c(\"cph\", \"fnd\")))",
        "Description": "Tools to run system processes in the background.\n    It can check if a background process is running; wait on a background\n    process to finish; get the exit status of finished processes; kill\n    background processes. It can read the standard output and error of\n    the processes, using non-blocking connections. 'processx' can poll\n    a process for standard output or error, with a timeout. It can also\n    poll several processes at once.",
        "License": "MIT + file LICENSE",
        "URL": "https://processx.r-lib.org,\nhttps://github.com/r-lib/processx#readme",
        "BugReports": "https://github.com/r-lib/processx/issues",
        "RoxygenNote": "7.1.1.9001",
        "Imports": "ps (>= 1.2.0), R6, utils",
        "Suggests": "callr (>= 3.2.0), cli, codetools, covr, curl, debugme,\nparallel, testthat, withr",
        "Encoding": "UTF-8",
        "NeedsCompilation": "yes",
        "Packaged": "2021-04-30 18:31:37 UTC; gaborcsardi",
        "Author": "Gábor Csárdi [aut, cre, cph] (<https://orcid.org/0000-0001-7098-9676>),\n  Winston Chang [aut],\n  RStudio [cph, fnd],\n  Mango Solutions [cph, fnd]",
        "Maintainer": "Gábor Csárdi <csardi.gabor@gmail.com>",
        "Repository": "CRAN",
        "Date/Publication": "2021-04-30 19:40:03 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2021-10-11 17:42:56 UTC; unix"
      }
    },
    "promises": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "promises",
        "Type": "Package",
        "Title": "Abstractions for Promise-Based Asynchronous Programming",
        "Version": "1.1.1",
        "Authors@R": "c(\n      person(\"Joe\", \"Cheng\", email = \"joe@rstudio.com\", role = c(\"aut\", \"cre\")),\n      person(\"RStudio\", role = c(\"cph\", \"fnd\"))\n    )",
        "Description": "Provides fundamental abstractions for doing asynchronous programming\n    in R using promises. Asynchronous programming is useful for allowing a single\n    R process to orchestrate multiple tasks in the background while also attending\n    to something else. Semantics are similar to 'JavaScript' promises, but with a\n    syntax that is idiomatic R.",
        "License": "MIT + file LICENSE",
        "Imports": "R6, Rcpp, later, rlang, stats, magrittr",
        "Suggests": "testthat, future, knitr, rmarkdown",
        "LinkingTo": "later, Rcpp",
        "RoxygenNote": "7.1.0",
        "Encoding": "UTF-8",
        "LazyData": "true",
        "VignetteBuilder": "knitr",
        "URL": "https://rstudio.github.io/promises,\nhttps://github.com/rstudio/promises",
        "BugReports": "https://github.com/rstudio/promises/issues",
        "NeedsCompilation": "yes",
        "Packaged": "2020-06-09 21:23:18 UTC; winston",
        "Author": "Joe Cheng [aut, cre],\n  RStudio [cph, fnd]",
        "Maintainer": "Joe Cheng <joe@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2020-06-09 21:50:02 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2020-07-21 17:48:27 UTC; unix"
      }
    },
    "ps": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "ps",
        "Version": "1.6.0",
        "Title": "List, Query, Manipulate System Processes",
        "Description": "List, query and manipulate all system processes, on 'Windows',\n    'Linux' and 'macOS'.",
        "Authors@R": "c(\n    person(\"Jay\", \"Loden\", role = \"aut\"),\n    person(\"Dave\", \"Daeschler\", role = \"aut\"),\n    person(\"Giampaolo\", \"Rodola'\", role = \"aut\"),\n    person(\"Gábor\", \"Csárdi\", , \"csardi.gabor@gmail.com\", c(\"aut\", \"cre\")),\n    person(\"RStudio\", role = \"cph\"))",
        "License": "MIT + file LICENSE",
        "URL": "https://github.com/r-lib/ps#readme",
        "BugReports": "https://github.com/r-lib/ps/issues",
        "Encoding": "UTF-8",
        "Depends": "R (>= 3.1)",
        "Imports": "utils",
        "Suggests": "callr, covr, curl, pingr, processx (>= 3.1.0), R6, rlang,\ntestthat, tibble",
        "RoxygenNote": "7.1.1.9001",
        "Biarch": "true",
        "NeedsCompilation": "yes",
        "Packaged": "2021-02-28 20:25:46 UTC; gaborcsardi",
        "Author": "Jay Loden [aut],\n  Dave Daeschler [aut],\n  Giampaolo Rodola' [aut],\n  Gábor Csárdi [aut, cre],\n  RStudio [cph]",
        "Maintainer": "Gábor Csárdi <csardi.gabor@gmail.com>",
        "Repository": "CRAN",
        "Date/Publication": "2021-02-28 20:50:02 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2021-10-27 19:24:08 UTC; unix"
      }
    },
    "reactR": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "reactR",
        "Type": "Package",
        "Title": "React Helpers",
        "Version": "0.4.4",
        "Date": "2021-02-20",
        "Authors@R": "c(\n      person(\n        \"Facebook\", \"Inc\"\n        , role = c(\"aut\", \"cph\")\n        , comment = \"React library in lib, https://reactjs.org/; see AUTHORS for full list of contributors\"\n      ),\n      person(\n        \"Michel\",\"Weststrate\",\n        , role = c(\"aut\", \"cph\")\n        , comment = \"mobx library in lib, https://github.com/mobxjs\"\n      ),\n      person(\n        \"Kent\", \"Russell\"\n        , role = c(\"aut\", \"cre\")\n        , comment = \"R interface\"\n        , email = \"kent.russell@timelyportfolio.com\"\n      ),\n      person(\n        \"Alan\", \"Dipert\"\n        , role = c(\"aut\")\n        , comment = \"R interface\"\n        , email = \"alan@rstudio.com\"\n      )\n    )",
        "Maintainer": "Kent Russell <kent.russell@timelyportfolio.com>",
        "Description": "Make it easy to use 'React' in R with 'htmlwidget' scaffolds,\n              helper dependency functions, an embedded 'Babel' 'transpiler',\n              and examples.",
        "URL": "https://github.com/react-R/reactR",
        "BugReports": "https://github.com/react-R/reactR/issues",
        "License": "MIT + file LICENSE",
        "LazyData": "TRUE",
        "Encoding": "UTF-8",
        "Imports": "htmltools",
        "Suggests": "htmlwidgets (>= 1.5.3), rmarkdown, shiny, V8, knitr, usethis,\njsonlite",
        "RoxygenNote": "7.1.1",
        "VignetteBuilder": "knitr",
        "NeedsCompilation": "no",
        "Packaged": "2021-02-21 15:11:04 UTC; kentr",
        "Author": "Facebook Inc [aut, cph] (React library in lib, https://reactjs.org/;\n    see AUTHORS for full list of contributors),\n  Michel Weststrate [aut, cph] (mobx library in lib,\n    https://github.com/mobxjs),\n  Kent Russell [aut, cre] (R interface),\n  Alan Dipert [aut] (R interface)",
        "Repository": "CRAN",
        "Date/Publication": "2021-02-22 14:50:06 UTC",
        "Built": "R 3.6.3; ; 2021-09-23 23:28:10 UTC; unix"
      }
    },
    "reactable": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "reactable",
        "Type": "Package",
        "Title": "Interactive Data Tables Based on 'React Table'",
        "Version": "0.2.3",
        "Authors@R": "c(\n    person(\"Greg\", \"Lin\", email = \"glin@glin.io\", role = c(\"aut\", \"cre\")),\n    person(\"Tanner\", \"Linsley\", role = c(\"ctb\", \"cph\"), comment = \"React Table library\"),\n    person(family = \"Emotion team and other contributors\", role = c(\"ctb\", \"cph\"),\n           comment = \"Emotion library\")\n    )",
        "Description": "Interactive data tables for R, based on the 'React Table'\n    JavaScript library. Provides an HTML widget that can be used in 'R Markdown'\n    documents and 'Shiny' applications, or viewed from an R console.",
        "License": "MIT + file LICENSE",
        "URL": "https://glin.github.io/reactable/,\nhttps://github.com/glin/reactable",
        "BugReports": "https://github.com/glin/reactable/issues",
        "Depends": "R (>= 3.1)",
        "Imports": "digest, htmltools, htmlwidgets, jsonlite, reactR",
        "Suggests": "covr, crosstalk, dplyr, leaflet, MASS, rmarkdown, shiny,\nsparkline, testthat",
        "Encoding": "UTF-8",
        "LazyData": "true",
        "RoxygenNote": "7.1.1",
        "NeedsCompilation": "no",
        "Packaged": "2020-10-04 21:31:55 UTC; greg",
        "Author": "Greg Lin [aut, cre],\n  Tanner Linsley [ctb, cph] (React Table library),\n  Emotion team and other contributors [ctb, cph] (Emotion library)",
        "Maintainer": "Greg Lin <glin@glin.io>",
        "Repository": "CRAN",
        "Date/Publication": "2020-10-04 21:50:02 UTC",
        "Built": "R 3.6.3; ; 2021-09-23 23:28:12 UTC; unix"
      }
    },
    "rematch2": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "rematch2",
        "Title": "Tidy Output from Regular Expression Matching",
        "Version": "2.1.2",
        "Authors@R": "c(\n    person(\"Gábor\", \"Csárdi\", email = \"csardi.gabor@gmail.com\", role = c(\"aut\", \"cre\")),\n    person(\"Matthew\", \"Lincoln\", email = \"matthew.d.lincoln@gmail.com\", role = c(\"ctb\")))",
        "Description": "Wrappers on 'regexpr' and 'gregexpr' to return the match\n    results in tidy data frames.",
        "License": "MIT + file LICENSE",
        "LazyData": "true",
        "URL": "https://github.com/r-lib/rematch2#readme",
        "BugReports": "https://github.com/r-lib/rematch2/issues",
        "RoxygenNote": "7.1.0",
        "Imports": "tibble",
        "Suggests": "covr, testthat",
        "Encoding": "UTF-8",
        "NeedsCompilation": "no",
        "Packaged": "2020-04-30 10:31:13 UTC; gaborcsardi",
        "Author": "Gábor Csárdi [aut, cre],\n  Matthew Lincoln [ctb]",
        "Maintainer": "Gábor Csárdi <csardi.gabor@gmail.com>",
        "Repository": "CRAN",
        "Date/Publication": "2020-05-01 06:50:02 UTC",
        "Built": "R 3.6.3; ; 2021-10-11 17:45:08 UTC; unix"
      }
    },
    "rlang": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "rlang",
        "Version": "0.4.11",
        "Title": "Functions for Base Types and Core R and 'Tidyverse' Features",
        "Description": "A toolbox for working with base types, core R features\n  like the condition system, and core 'Tidyverse' features like tidy\n  evaluation.",
        "Authors@R": "c(\n    person(\"Lionel\", \"Henry\", ,\"lionel@rstudio.com\", c(\"aut\", \"cre\")),\n    person(\"Hadley\", \"Wickham\", ,\"hadley@rstudio.com\", \"aut\"),\n    person(given = \"mikefc\",\n           email = \"mikefc@coolbutuseless.com\", \n           role = \"cph\", \n           comment = \"Hash implementation based on Mike's xxhashlite\"),\n    person(given = \"Yann\",\n           family = \"Collet\",\n           role = \"cph\", \n           comment = \"Author of the embedded xxHash library\"),\n    person(\"RStudio\", role = \"cph\")\n    )",
        "License": "MIT + file LICENSE",
        "ByteCompile": "true",
        "Biarch": "true",
        "Depends": "R (>= 3.3.0)",
        "Imports": "utils",
        "Suggests": "cli, covr, crayon, glue, magrittr, methods, pak, pillar,\nrmarkdown, testthat (>= 3.0.0), vctrs (>= 0.2.3), withr",
        "Enhances": "winch",
        "Encoding": "UTF-8",
        "RoxygenNote": "7.1.1",
        "URL": "https://rlang.r-lib.org, https://github.com/r-lib/rlang",
        "BugReports": "https://github.com/r-lib/rlang/issues",
        "Config/testthat/edition": "3",
        "NeedsCompilation": "yes",
        "Packaged": "2021-04-29 14:15:00 UTC; lionel",
        "Author": "Lionel Henry [aut, cre],\n  Hadley Wickham [aut],\n  mikefc [cph] (Hash implementation based on Mike's xxhashlite),\n  Yann Collet [cph] (Author of the embedded xxHash library),\n  RStudio [cph]",
        "Maintainer": "Lionel Henry <lionel@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2021-04-30 23:20:02 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2021-09-22 14:24:30 UTC; unix"
      }
    },
    "rprojroot": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "rprojroot",
        "Title": "Finding Files in Project Subdirectories",
        "Version": "2.0.2",
        "Authors@R": "\n    person(given = \"Kirill\",\n           family = \"M\\u00fcller\",\n           role = c(\"aut\", \"cre\"),\n           email = \"krlmlr+r@mailbox.org\",\n           comment = c(ORCID = \"0000-0002-1416-3412\"))",
        "Description": "Robust, reliable and flexible paths to files below\n    a project root. The 'root' of a project is defined as a directory that\n    matches a certain criterion, e.g., it contains a certain regular file.",
        "License": "MIT + file LICENSE",
        "URL": "https://rprojroot.r-lib.org/, https://github.com/r-lib/rprojroot",
        "BugReports": "https://github.com/r-lib/rprojroot/issues",
        "Depends": "R (>= 3.0.0)",
        "Suggests": "covr, knitr, lifecycle, mockr, rmarkdown, testthat (>=\n3.0.0), withr",
        "VignetteBuilder": "knitr",
        "Config/testthat/edition": "3",
        "Encoding": "UTF-8",
        "LazyData": "true",
        "RoxygenNote": "7.1.1.9000",
        "NeedsCompilation": "no",
        "Packaged": "2020-11-15 13:03:34 UTC; kirill",
        "Author": "Kirill Müller [aut, cre] (<https://orcid.org/0000-0002-1416-3412>)",
        "Maintainer": "Kirill Müller <krlmlr+r@mailbox.org>",
        "Repository": "CRAN",
        "Date/Publication": "2020-11-15 13:30:03 UTC",
        "Built": "R 3.6.3; ; 2021-09-23 23:29:15 UTC; unix"
      }
    },
    "rstudioapi": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "rstudioapi",
        "Title": "Safely Access the RStudio API",
        "Description": "Access the RStudio API (if available) and provide informative error\n    messages when it's not.",
        "Version": "0.13",
        "Authors@R": "c(\n    person(\"Kevin\", \"Ushey\", role = c(\"aut\", \"cre\"), email = \"kevin@rstudio.com\"),\n    person(\"JJ\", \"Allaire\", role = c(\"aut\"), email = \"jj@rstudio.com\"),\n    person(\"Hadley\", \"Wickham\", role = c(\"aut\"), email = \"hadley@rstudio.com\"),\n    person(\"Gary\", \"Ritchie\", role = c(\"aut\"), email = \"gary@rstudio.com\"),\n    person(family = \"RStudio\", role = \"cph\")\n    )",
        "Maintainer": "Kevin Ushey <kevin@rstudio.com>",
        "License": "MIT + file LICENSE",
        "URL": "https://github.com/rstudio/rstudioapi",
        "BugReports": "https://github.com/rstudio/rstudioapi/issues",
        "RoxygenNote": "7.1.1",
        "Suggests": "testthat, knitr, rmarkdown, clipr",
        "VignetteBuilder": "knitr",
        "Encoding": "UTF-8",
        "NeedsCompilation": "no",
        "Packaged": "2020-11-11 23:34:30 UTC; kevinushey",
        "Author": "Kevin Ushey [aut, cre],\n  JJ Allaire [aut],\n  Hadley Wickham [aut],\n  Gary Ritchie [aut],\n  RStudio [cph]",
        "Repository": "CRAN",
        "Date/Publication": "2020-11-12 21:50:02 UTC",
        "Built": "R 3.6.3; ; 2021-10-11 17:44:30 UTC; unix"
      }
    },
    "scales": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "scales",
        "Title": "Scale Functions for Visualization",
        "Version": "1.1.1",
        "Authors@R": "\n    c(person(given = \"Hadley\",\n             family = \"Wickham\",\n             role = c(\"aut\", \"cre\"),\n             email = \"hadley@rstudio.com\"),\n      person(given = \"Dana\",\n             family = \"Seidel\",\n             role = \"aut\"),\n      person(given = \"RStudio\",\n             role = \"cph\"))",
        "Description": "Graphical scales map data to aesthetics, and\n    provide methods for automatically determining breaks and labels for\n    axes and legends.",
        "License": "MIT + file LICENSE",
        "URL": "https://scales.r-lib.org, https://github.com/r-lib/scales",
        "BugReports": "https://github.com/r-lib/scales/issues",
        "Depends": "R (>= 3.2)",
        "Imports": "farver (>= 2.0.3), labeling, lifecycle, munsell (>= 0.5), R6,\nRColorBrewer, viridisLite",
        "Suggests": "bit64, covr, dichromat, ggplot2, hms (>= 0.5.0), testthat (>=\n2.1.0)",
        "Encoding": "UTF-8",
        "LazyLoad": "yes",
        "RoxygenNote": "7.1.0",
        "NeedsCompilation": "no",
        "Packaged": "2020-05-11 14:46:40 UTC; hadley",
        "Author": "Hadley Wickham [aut, cre],\n  Dana Seidel [aut],\n  RStudio [cph]",
        "Maintainer": "Hadley Wickham <hadley@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2020-05-11 23:20:05 UTC",
        "Built": "R 3.6.3; ; 2020-07-21 18:09:59 UTC; unix"
      }
    },
    "scrypt": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "scrypt",
        "Type": "Package",
        "Title": "Key Derivation Functions for R Based on Scrypt",
        "Version": "0.1.3",
        "Authors@R": "c(\n    person(\"Bob\", \"Jansen\", email = \"bobjansen@gmail.com\", role = c(\"ctb\", \"cre\")),\n    person(\"Andy\", \"Kipp\", email = \"andy@rstudio.com\", role = c(\"aut\")),\n    person(\"Colin\", \"Percival\", role = c(\"aut\", \"cph\")),\n    person(family = \"RStudio\", role = \"cph\")\n    )",
        "Copyright": "RStudio, Inc.; Colin Percival",
        "Maintainer": "Bob Jansen <bobjansen@gmail.com>",
        "Description": "Functions for working with the scrypt key derivation functions\n    originally described by Colin Percival\n    <https://www.tarsnap.com/scrypt/scrypt.pdf> and in Percival and Josefsson\n    (2016) <doi:10.17487/RFC7914>. Scrypt is a password-based key derivation\n    function created by Colin Percival. The algorithm was specifically designed\n    to make it costly to perform large-scale custom hardware attacks by\n    requiring large amounts of memory.",
        "License": "FreeBSD",
        "Depends": "R (>= 3.0.0)",
        "URL": "https://github.com/rstudio/rscrypt",
        "Imports": "Rcpp (>= 0.10.6)",
        "LinkingTo": "Rcpp",
        "NeedsCompilation": "yes",
        "Packaged": "2019-07-21 16:15:29 UTC; brj",
        "Author": "Bob Jansen [ctb, cre],\n  Andy Kipp [aut],\n  Colin Percival [aut, cph],\n  RStudio [cph]",
        "Repository": "CRAN",
        "Date/Publication": "2019-08-09 13:30:08 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2021-09-23 23:30:51 UTC; unix"
      }
    },
    "shiny": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "shiny",
        "Type": "Package",
        "Title": "Web Application Framework for R",
        "Version": "1.5.0",
        "Authors@R": "c(\n    person(\"Winston\", \"Chang\", role = c(\"aut\", \"cre\"), email = \"winston@rstudio.com\"),\n    person(\"Joe\", \"Cheng\", role = \"aut\", email = \"joe@rstudio.com\"),\n    person(\"JJ\", \"Allaire\", role = \"aut\", email = \"jj@rstudio.com\"),\n    person(\"Yihui\", \"Xie\", role = \"aut\", email = \"yihui@rstudio.com\"),\n    person(\"Jonathan\", \"McPherson\", role = \"aut\", email = \"jonathan@rstudio.com\"),\n    person(family = \"RStudio\", role = \"cph\"),\n    person(family = \"jQuery Foundation\", role = \"cph\",\n    comment = \"jQuery library and jQuery UI library\"),\n    person(family = \"jQuery contributors\", role = c(\"ctb\", \"cph\"),\n    comment = \"jQuery library; authors listed in inst/www/shared/jquery-AUTHORS.txt\"),\n    person(family = \"jQuery UI contributors\", role = c(\"ctb\", \"cph\"),\n    comment = \"jQuery UI library; authors listed in inst/www/shared/jqueryui/AUTHORS.txt\"),\n    person(\"Mark\", \"Otto\", role = \"ctb\",\n    comment = \"Bootstrap library\"),\n    person(\"Jacob\", \"Thornton\", role = \"ctb\",\n    comment = \"Bootstrap library\"),\n    person(family = \"Bootstrap contributors\", role = \"ctb\",\n    comment = \"Bootstrap library\"),\n    person(family = \"Twitter, Inc\", role = \"cph\",\n    comment = \"Bootstrap library\"),\n    person(\"Alexander\", \"Farkas\", role = c(\"ctb\", \"cph\"),\n    comment = \"html5shiv library\"),\n    person(\"Scott\", \"Jehl\", role = c(\"ctb\", \"cph\"),\n    comment = \"Respond.js library\"),\n    person(\"Stefan\", \"Petre\", role = c(\"ctb\", \"cph\"),\n    comment = \"Bootstrap-datepicker library\"),\n    person(\"Andrew\", \"Rowls\", role = c(\"ctb\", \"cph\"),\n    comment = \"Bootstrap-datepicker library\"),\n    person(\"Dave\", \"Gandy\", role = c(\"ctb\", \"cph\"),\n    comment = \"Font-Awesome font\"),\n    person(\"Brian\", \"Reavis\", role = c(\"ctb\", \"cph\"),\n    comment = \"selectize.js library\"),\n    person(\"Kristopher Michael\", \"Kowal\", role = c(\"ctb\", \"cph\"),\n    comment = \"es5-shim library\"),\n    person(family = \"es5-shim contributors\", role = c(\"ctb\", \"cph\"),\n    comment = \"es5-shim library\"),\n    person(\"Denis\", \"Ineshin\", role = c(\"ctb\", \"cph\"),\n    comment = \"ion.rangeSlider library\"),\n    person(\"Sami\", \"Samhuri\", role = c(\"ctb\", \"cph\"),\n    comment = \"Javascript strftime library\"),\n    person(family = \"SpryMedia Limited\", role = c(\"ctb\", \"cph\"),\n    comment = \"DataTables library\"),\n    person(\"John\", \"Fraser\", role = c(\"ctb\", \"cph\"),\n    comment = \"showdown.js library\"),\n    person(\"John\", \"Gruber\", role = c(\"ctb\", \"cph\"),\n    comment = \"showdown.js library\"),\n    person(\"Ivan\", \"Sagalaev\", role = c(\"ctb\", \"cph\"),\n    comment = \"highlight.js library\"),\n    person(family = \"R Core Team\", role = c(\"ctb\", \"cph\"),\n    comment = \"tar implementation from R\")\n    )",
        "Description": "Makes it incredibly easy to build interactive web\n    applications with R. Automatic \"reactive\" binding between inputs and\n    outputs and extensive prebuilt widgets make it possible to build\n    beautiful, responsive, and powerful applications with minimal effort.",
        "License": "GPL-3 | file LICENSE",
        "Depends": "R (>= 3.0.2), methods",
        "Imports": "utils, grDevices, httpuv (>= 1.5.2), mime (>= 0.3), jsonlite\n(>= 0.9.16), xtable, digest, htmltools (>= 0.4.0.9003), R6 (>=\n2.0), sourcetools, later (>= 1.0.0), promises (>= 1.1.0),\ntools, crayon, rlang (>= 0.4.0), fastmap (>= 1.0.0), withr,\ncommonmark (>= 1.7), glue (>= 1.3.2)",
        "Suggests": "datasets, Cairo (>= 1.5-5), testthat (>= 2.1.1), knitr (>=\n1.6), markdown, rmarkdown, ggplot2, reactlog (>= 1.0.0),\nmagrittr, shinytest, yaml, future, dygraphs, ragg, showtext",
        "URL": "http://shiny.rstudio.com",
        "BugReports": "https://github.com/rstudio/shiny/issues",
        "Collate": "'app.R' 'app_template.R' 'bookmark-state-local.R' 'stack.R'\n'bookmark-state.R' 'bootstrap-deprecated.R'\n'bootstrap-layout.R' 'globals.R' 'conditions.R' 'map.R'\n'utils.R' 'bootstrap.R' 'cache-context.R' 'cache-disk.R'\n'cache-memory.R' 'cache-utils.R' 'diagnose.R' 'fileupload.R'\n'font-awesome.R' 'graph.R' 'reactives.R' 'reactive-domains.R'\n'history.R' 'hooks.R' 'html-deps.R' 'htmltools.R'\n'image-interact-opts.R' 'image-interact.R' 'imageutils.R'\n'input-action.R' 'input-checkbox.R' 'input-checkboxgroup.R'\n'input-date.R' 'input-daterange.R' 'input-file.R'\n'input-numeric.R' 'input-password.R' 'input-radiobuttons.R'\n'input-select.R' 'input-slider.R' 'input-submit.R'\n'input-text.R' 'input-textarea.R' 'input-utils.R'\n'insert-tab.R' 'insert-ui.R' 'jqueryui.R' 'middleware-shiny.R'\n'middleware.R' 'timer.R' 'shiny.R' 'mock-session.R' 'modal.R'\n'modules.R' 'notifications.R' 'priorityqueue.R' 'progress.R'\n'react.R' 'reexports.R' 'render-cached-plot.R' 'render-plot.R'\n'render-table.R' 'run-url.R' 'serializers.R'\n'server-input-handlers.R' 'server.R' 'shiny-options.R'\n'shinyui.R' 'shinywrappers.R' 'showcase.R' 'snapshot.R' 'tar.R'\n'test-export.R' 'test-server.R' 'test.R' 'update-input.R'",
        "RoxygenNote": "7.1.0.9000",
        "Encoding": "UTF-8",
        "NeedsCompilation": "no",
        "Packaged": "2020-06-19 17:22:05 UTC; winston",
        "Author": "Winston Chang [aut, cre],\n  Joe Cheng [aut],\n  JJ Allaire [aut],\n  Yihui Xie [aut],\n  Jonathan McPherson [aut],\n  RStudio [cph],\n  jQuery Foundation [cph] (jQuery library and jQuery UI library),\n  jQuery contributors [ctb, cph] (jQuery library; authors listed in\n    inst/www/shared/jquery-AUTHORS.txt),\n  jQuery UI contributors [ctb, cph] (jQuery UI library; authors listed in\n    inst/www/shared/jqueryui/AUTHORS.txt),\n  Mark Otto [ctb] (Bootstrap library),\n  Jacob Thornton [ctb] (Bootstrap library),\n  Bootstrap contributors [ctb] (Bootstrap library),\n  Twitter, Inc [cph] (Bootstrap library),\n  Alexander Farkas [ctb, cph] (html5shiv library),\n  Scott Jehl [ctb, cph] (Respond.js library),\n  Stefan Petre [ctb, cph] (Bootstrap-datepicker library),\n  Andrew Rowls [ctb, cph] (Bootstrap-datepicker library),\n  Dave Gandy [ctb, cph] (Font-Awesome font),\n  Brian Reavis [ctb, cph] (selectize.js library),\n  Kristopher Michael Kowal [ctb, cph] (es5-shim library),\n  es5-shim contributors [ctb, cph] (es5-shim library),\n  Denis Ineshin [ctb, cph] (ion.rangeSlider library),\n  Sami Samhuri [ctb, cph] (Javascript strftime library),\n  SpryMedia Limited [ctb, cph] (DataTables library),\n  John Fraser [ctb, cph] (showdown.js library),\n  John Gruber [ctb, cph] (showdown.js library),\n  Ivan Sagalaev [ctb, cph] (highlight.js library),\n  R Core Team [ctb, cph] (tar implementation from R)",
        "Maintainer": "Winston Chang <winston@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2020-06-23 13:30:03 UTC",
        "Built": "R 3.6.3; ; 2020-07-21 17:52:05 UTC; unix"
      }
    },
    "shinymanager": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "shinymanager",
        "Title": "Authentication Management for 'Shiny' Applications",
        "Version": "1.0.400",
        "Authors@R": "c(\n    person(\"Benoit\", \"Thieurmel\", email = \"benoit.thieurmel@datastorm.fr\", role = c(\"aut\", \"cre\")),\n    person(\"Victor\", \"Perrier\", email = \"victor.perrier@dreamRs.fr\", role = c(\"aut\"))\n    )",
        "Description": "Simple and secure authentification mechanism for single 'Shiny' applications.\n    Credentials are stored in an encrypted 'SQLite' database. Source code of main application\n    is protected until authentication is successful.",
        "License": "GPL-3",
        "URL": "https://github.com/datastorm-open/shinymanager",
        "Encoding": "UTF-8",
        "RoxygenNote": "7.1.1",
        "Imports": "R6, shiny, htmltools, DT (>= 0.5), DBI, RSQLite, openssl,\nR.utils, billboarder, scrypt",
        "Suggests": "keyring, testthat (>= 2.1.0), knitr, rmarkdown",
        "VignetteBuilder": "knitr",
        "NeedsCompilation": "no",
        "Packaged": "2021-06-16 10:44:36 UTC; bthie",
        "Author": "Benoit Thieurmel [aut, cre],\n  Victor Perrier [aut]",
        "Maintainer": "Benoit Thieurmel <benoit.thieurmel@datastorm.fr>",
        "Repository": "CRAN",
        "Date/Publication": "2021-06-16 11:00:02 UTC",
        "Built": "R 3.6.3; ; 2021-09-23 23:32:50 UTC; unix"
      }
    },
    "sourcetools": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "sourcetools",
        "Type": "Package",
        "Title": "Tools for Reading, Tokenizing and Parsing R Code",
        "Version": "0.1.7",
        "Author": "Kevin Ushey",
        "Maintainer": "Kevin Ushey <kevinushey@gmail.com>",
        "Description": "Tools for the reading and tokenization of R code. The\n    'sourcetools' package provides both an R and C++ interface for the tokenization\n    of R code, and helpers for interacting with the tokenized representation of R\n    code.",
        "License": "MIT + file LICENSE",
        "LazyData": "TRUE",
        "Depends": "R (>= 3.0.2)",
        "Suggests": "testthat",
        "RoxygenNote": "5.0.1",
        "BugReports": "https://github.com/kevinushey/sourcetools/issues",
        "Encoding": "UTF-8",
        "NeedsCompilation": "yes",
        "Packaged": "2018-04-25 03:19:22 UTC; kevin",
        "Repository": "CRAN",
        "Date/Publication": "2018-04-25 03:38:09 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2020-07-21 17:42:50 UTC; unix"
      }
    },
    "stringi": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "stringi",
        "Version": "1.4.6",
        "Date": "2020-02-17",
        "Title": "Character String Processing Facilities",
        "Description": "Fast, correct, consistent, portable and convenient character\n    string/text processing in every locale and any native encoding. \n    Owing to the use of the 'ICU' (International Components for Unicode) \n    library, the package provides 'R' users with platform-independent functions\n    known to 'Java', 'Perl', 'Python', 'PHP' and 'Ruby' programmers. Available\n    features include: pattern searching (e.g., with 'Java'-like regular\n    expressions or the 'Unicode' collation algorithm), random string generation,\n    case mapping, string transliteration, concatenation,\n    Unicode normalization, date-time formatting and parsing and many more.",
        "URL": "http://www.gagolewski.com/software/stringi/\nhttp://site.icu-project.org/ http://www.unicode.org/",
        "BugReports": "http://github.com/gagolews/stringi/issues",
        "SystemRequirements": "ICU4C (>= 55, optional)",
        "Type": "Package",
        "Depends": "R (>= 2.14)",
        "Imports": "tools, utils, stats",
        "Biarch": "TRUE",
        "License": "file LICENSE",
        "Author": "Marek Gagolewski [aut, cre] (<https://orcid.org/0000-0003-0637-6028>),\n    Bartek Tartanus [ctb]\n    and other contributors (stringi source code);\n    IBM, Unicode, Inc. and other contributors (ICU4C source code);\n    Unicode, Inc. (Unicode Character Database)",
        "Maintainer": "Marek Gagolewski <marek@gagolewski.com>",
        "RoxygenNote": "7.0.2",
        "NeedsCompilation": "yes",
        "Packaged": "2020-02-17 01:46:10 UTC; gagolews",
        "License_is_FOSS": "yes",
        "Repository": "CRAN",
        "Date/Publication": "2020-02-17 18:00:06 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2020-07-21 17:41:54 UTC; unix"
      }
    },
    "stringr": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "stringr",
        "Title": "Simple, Consistent Wrappers for Common String Operations",
        "Version": "1.4.0",
        "Authors@R": "\n    c(person(given = \"Hadley\",\n             family = \"Wickham\",\n             role = c(\"aut\", \"cre\", \"cph\"),\n             email = \"hadley@rstudio.com\"),\n      person(given = \"RStudio\",\n             role = c(\"cph\", \"fnd\")))",
        "Description": "A consistent, simple and easy to use set of\n    wrappers around the fantastic 'stringi' package. All function and\n    argument names (and positions) are consistent, all functions deal with\n    \"NA\"'s and zero length vectors in the same way, and the output from\n    one function is easy to feed into the input of another.",
        "License": "GPL-2 | file LICENSE",
        "URL": "http://stringr.tidyverse.org, https://github.com/tidyverse/stringr",
        "BugReports": "https://github.com/tidyverse/stringr/issues",
        "Depends": "R (>= 3.1)",
        "Imports": "glue (>= 1.2.0), magrittr, stringi (>= 1.1.7)",
        "Suggests": "covr, htmltools, htmlwidgets, knitr, rmarkdown, testthat",
        "VignetteBuilder": "knitr",
        "Encoding": "UTF-8",
        "LazyData": "true",
        "RoxygenNote": "6.1.1",
        "NeedsCompilation": "no",
        "Packaged": "2019-02-09 16:03:19 UTC; hadley",
        "Author": "Hadley Wickham [aut, cre, cph],\n  RStudio [cph, fnd]",
        "Maintainer": "Hadley Wickham <hadley@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2019-02-10 03:40:03 UTC",
        "Built": "R 3.6.3; ; 2020-07-21 17:44:52 UTC; unix"
      }
    },
    "sys": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "sys",
        "Type": "Package",
        "Title": "Powerful and Reliable Tools for Running System Commands in R",
        "Version": "3.3",
        "Authors@R": "c(person(\"Jeroen\", \"Ooms\", role = c(\"aut\", \"cre\"), \n      email = \"jeroen@berkeley.edu\", comment = c(ORCID = \"0000-0002-4035-0289\")),\n    person(\"Gábor\", \"Csárdi\", , \"csardi.gabor@gmail.com\", role = \"ctb\"))",
        "Description": "Drop-in replacements for the base system2() function with fine control\n    and consistent behavior across platforms. Supports clean interruption, timeout, \n    background tasks, and streaming STDIN / STDOUT / STDERR over binary or text \n    connections. Arguments on Windows automatically get encoded and quoted to work \n    on different locales.",
        "License": "MIT + file LICENSE",
        "URL": "https://github.com/jeroen/sys",
        "BugReports": "https://github.com/jeroen/sys/issues",
        "Encoding": "UTF-8",
        "LazyData": "true",
        "RoxygenNote": "6.1.1",
        "Suggests": "unix (>= 1.4), spelling, testthat",
        "Language": "en-US",
        "NeedsCompilation": "yes",
        "Packaged": "2019-08-21 11:45:42 UTC; jeroen",
        "Author": "Jeroen Ooms [aut, cre] (<https://orcid.org/0000-0002-4035-0289>),\n  Gábor Csárdi [ctb]",
        "Maintainer": "Jeroen Ooms <jeroen@berkeley.edu>",
        "Repository": "CRAN",
        "Date/Publication": "2019-08-21 14:20:02 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2020-07-21 18:26:58 UTC; unix"
      }
    },
    "testthat": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "testthat",
        "Title": "Unit Testing for R",
        "Version": "3.1.0",
        "Authors@R": "\n    c(person(given = \"Hadley\",\n             family = \"Wickham\",\n             role = c(\"aut\", \"cre\"),\n             email = \"hadley@rstudio.com\"),\n      person(given = \"RStudio\",\n             role = c(\"cph\", \"fnd\")),\n      person(given = \"R Core team\",\n             role = \"ctb\",\n             comment = \"Implementation of utils::recover()\"))",
        "Description": "Software testing is important, but, in part because it is\n    frustrating and boring, many of us avoid it. 'testthat' is a testing\n    framework for R that is easy to learn and use, and integrates with\n    your existing 'workflow'.",
        "License": "MIT + file LICENSE",
        "URL": "https://testthat.r-lib.org, https://github.com/r-lib/testthat",
        "BugReports": "https://github.com/r-lib/testthat/issues",
        "Depends": "R (>= 3.1)",
        "Imports": "brio, callr (>= 3.5.1), cli (>= 2.2.0), crayon (>= 1.3.4),\ndesc, digest, ellipsis (>= 0.2.0), evaluate, jsonlite,\nlifecycle, magrittr, methods, pkgload, praise, processx, ps (>=\n1.3.4), R6 (>= 2.2.0), rlang (>= 0.4.9), utils, waldo (>=\n0.2.4), withr (>= 2.3.0)",
        "Suggests": "covr, curl (>= 0.9.5), diffviewer (>= 0.1.0), knitr, mockery,\nrmarkdown, rstudioapi, shiny, usethis, vctrs (>= 0.1.0), xml2",
        "VignetteBuilder": "knitr",
        "Config/testthat/edition": "3",
        "Config/testthat/start-first": "watcher, parallel*",
        "Encoding": "UTF-8",
        "RoxygenNote": "7.1.2",
        "NeedsCompilation": "yes",
        "Packaged": "2021-10-01 12:44:13 UTC; hadley",
        "Author": "Hadley Wickham [aut, cre],\n  RStudio [cph, fnd],\n  R Core team [ctb] (Implementation of utils::recover())",
        "Maintainer": "Hadley Wickham <hadley@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2021-10-04 08:30:02 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2021-10-27 19:51:55 UTC; unix"
      }
    },
    "tibble": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "tibble",
        "Title": "Simple Data Frames",
        "Version": "3.1.5",
        "Authors@R": "\n    c(person(given = \"Kirill\",\n             family = \"M\\u00fcller\",\n             role = c(\"aut\", \"cre\"),\n             email = \"krlmlr+r@mailbox.org\"),\n      person(given = \"Hadley\",\n             family = \"Wickham\",\n             role = \"aut\",\n             email = \"hadley@rstudio.com\"),\n      person(given = \"Romain\",\n             family = \"Francois\",\n             role = \"ctb\",\n             email = \"romain@r-enthusiasts.com\"),\n      person(given = \"Jennifer\",\n             family = \"Bryan\",\n             role = \"ctb\",\n             email = \"jenny@rstudio.com\"),\n      person(given = \"RStudio\",\n             role = \"cph\"))",
        "Description": "Provides a 'tbl_df' class (the 'tibble') with stricter checking and better formatting than the traditional\n    data frame.",
        "License": "MIT + file LICENSE",
        "URL": "https://tibble.tidyverse.org/, https://github.com/tidyverse/tibble",
        "BugReports": "https://github.com/tidyverse/tibble/issues",
        "Depends": "R (>= 3.1.0)",
        "Imports": "ellipsis (>= 0.3.2), fansi (>= 0.4.0), lifecycle (>= 1.0.0),\nmagrittr, methods, pillar (>= 1.6.2), pkgconfig, rlang (>=\n0.4.3), utils, vctrs (>= 0.3.8)",
        "Suggests": "bench, bit64, blob, brio, callr, cli, covr, crayon (>=\n1.3.4), DiagrammeR, dplyr, evaluate, formattable, ggplot2, hms,\nhtmltools, knitr, lubridate, mockr, nycflights13, pkgbuild,\npkgload, purrr, rmarkdown, stringi, testthat (>= 3.0.2), tidyr,\nwithr",
        "VignetteBuilder": "knitr",
        "Encoding": "UTF-8",
        "RoxygenNote": "7.1.2",
        "Config/testthat/edition": "3",
        "Config/testthat/parallel": "true",
        "Config/testthat/start-first": "subsetting, as_tibble, add, invariants",
        "NeedsCompilation": "yes",
        "Packaged": "2021-09-29 14:03:45 UTC; kirill",
        "Author": "Kirill Müller [aut, cre],\n  Hadley Wickham [aut],\n  Romain Francois [ctb],\n  Jennifer Bryan [ctb],\n  RStudio [cph]",
        "Maintainer": "Kirill Müller <krlmlr+r@mailbox.org>",
        "Repository": "CRAN",
        "Date/Publication": "2021-09-30 12:10:02 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2021-10-11 17:44:56 UTC; unix"
      }
    },
    "utf8": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "utf8",
        "Version": "1.1.4",
        "Title": "Unicode Text Processing",
        "Authors@R": "c(\n  person(c(\"Patrick\", \"O.\"), \"Perry\",\n         role = c(\"aut\", \"cph\", \"cre\"),\n         email = \"patperry@gmail.com\"),\n  person(\"Unicode, Inc.\",\n         role = c(\"cph\", \"dtc\"),\n         comment = \"Unicode Character Database\"))",
        "Depends": "R (>= 2.10)",
        "Suggests": "knitr, rmarkdown, testthat",
        "Description": "Process and print 'UTF-8' encoded international text (Unicode). Input, validate, normalize, encode, format, and display.",
        "License": "Apache License (== 2.0) | file LICENSE",
        "URL": "https://github.com/patperry/r-utf8",
        "BugReports": "https://github.com/patperry/r-utf8/issues",
        "LazyData": "Yes",
        "Encoding": "UTF-8",
        "VignetteBuilder": "knitr, rmarkdown",
        "NeedsCompilation": "yes",
        "Packaged": "2018-05-24 15:00:57 UTC; ptrck",
        "Author": "Patrick O. Perry [aut, cph, cre],\n  Unicode, Inc. [cph, dtc] (Unicode Character Database)",
        "Maintainer": "Patrick O. Perry <patperry@gmail.com>",
        "Repository": "CRAN",
        "Date/Publication": "2018-05-24 17:09:15 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2020-07-21 17:56:54 UTC; unix"
      }
    },
    "vctrs": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "vctrs",
        "Title": "Vector Helpers",
        "Version": "0.3.8",
        "Authors@R": "\n    c(person(given = \"Hadley\",\n             family = \"Wickham\",\n             role = \"aut\",\n             email = \"hadley@rstudio.com\"),\n      person(given = \"Lionel\",\n             family = \"Henry\",\n             role = c(\"aut\", \"cre\"),\n             email = \"lionel@rstudio.com\"),\n      person(given = \"Davis\",\n             family = \"Vaughan\",\n             role = \"aut\",\n             email = \"davis@rstudio.com\"),\n      person(given = \"data.table team\",\n             role = \"cph\",\n             comment = \"Radix sort based on data.table's forder() and their contribution to R's order()\"),\n      person(given = \"RStudio\",\n             role = \"cph\"))",
        "Description": "Defines new notions of prototype and size that are\n    used to provide tools for consistent and well-founded type-coercion\n    and size-recycling, and are in turn connected to ideas of type- and\n    size-stability useful for analysing function interfaces.",
        "License": "MIT + file LICENSE",
        "URL": "https://vctrs.r-lib.org/",
        "BugReports": "https://github.com/r-lib/vctrs/issues",
        "Depends": "R (>= 3.3)",
        "Imports": "ellipsis (>= 0.2.0), glue, rlang (>= 0.4.10)",
        "Suggests": "bit64, covr, crayon, dplyr (>= 0.8.5), generics, knitr,\npillar (>= 1.4.4), pkgdown, rmarkdown, testthat (>= 2.3.0),\ntibble, withr, xml2, waldo (>= 0.2.0), zeallot",
        "VignetteBuilder": "knitr",
        "Encoding": "UTF-8",
        "Language": "en-GB",
        "RoxygenNote": "7.1.1",
        "NeedsCompilation": "yes",
        "Packaged": "2021-04-29 15:14:11 UTC; lionel",
        "Author": "Hadley Wickham [aut],\n  Lionel Henry [aut, cre],\n  Davis Vaughan [aut],\n  data.table team [cph] (Radix sort based on data.table's forder() and\n    their contribution to R's order()),\n  RStudio [cph]",
        "Maintainer": "Lionel Henry <lionel@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2021-04-29 16:00:03 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2021-09-22 14:25:39 UTC; unix"
      }
    },
    "viridisLite": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "viridisLite",
        "Type": "Package",
        "Title": "Default Color Maps from 'matplotlib' (Lite Version)",
        "Version": "0.3.0",
        "Authors@R": "c(\n      person(\"Simon\", \"Garnier\", email = \"garnier@njit.edu\", role = c(\"aut\", \"cre\")),\n      person(\"Noam\", \"Ross\", email = \"noam.ross@gmail.com\", role = c(\"ctb\", \"cph\")),\n      person(\"Bob\", \"Rudis\", email = \"bob@rud.is\", role = c(\"ctb\", \"cph\")),\n      person(\"Marco\", \"Sciaini\", email = \"sciaini.marco@gmail.com\", role = c(\"ctb\", \"cph\")),\n      person(\"Cédric\", \"Scherer\", email = \"scherer@izw-berlin.de\", role = c(\"ctb\", \"cph\"))\n  )",
        "Maintainer": "Simon Garnier <garnier@njit.edu>",
        "Description": "Implementation of the 'viridis' - the default -, 'magma', 'plasma', \n    'inferno', and 'cividis' color maps for 'R'. 'viridis', 'magma', 'plasma', \n    and 'inferno' are ported from 'matplotlib' <http://matplotlib.org/>, a \n    popular plotting library for 'python'. 'cividis', was developed by Jamie R. \n    Nuñez and Sean M. Colby. These color maps are designed in such a way that \n    they will analytically be perfectly perceptually-uniform, both in regular \n    form and also when converted to black-and-white. They are also designed to \n    be perceived by readers with the most common form of color blindness (all \n    color maps in this package) and color vision deficiency ('cividis' only). \n    This is the 'lite' version of the more complete 'viridis' package that can \n    be found at <https://cran.r-project.org/package=viridis>.",
        "License": "MIT + file LICENSE",
        "LazyData": "TRUE",
        "Encoding": "UTF-8",
        "Depends": "R (>= 2.10)",
        "Suggests": "hexbin (>= 1.27.0), ggplot2 (>= 1.0.1), testthat, covr",
        "URL": "https://github.com/sjmgarnier/viridisLite",
        "BugReports": "https://github.com/sjmgarnier/viridisLite/issues",
        "RoxygenNote": "6.0.1",
        "NeedsCompilation": "no",
        "Packaged": "2018-02-01 17:33:56 UTC; simon",
        "Author": "Simon Garnier [aut, cre],\n  Noam Ross [ctb, cph],\n  Bob Rudis [ctb, cph],\n  Marco Sciaini [ctb, cph],\n  Cédric Scherer [ctb, cph]",
        "Repository": "CRAN",
        "Date/Publication": "2018-02-01 22:45:56 UTC",
        "Built": "R 3.6.3; ; 2020-07-21 18:04:51 UTC; unix"
      }
    },
    "waldo": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "waldo",
        "Title": "Find Differences Between R Objects",
        "Version": "0.3.1",
        "Authors@R": "\n    c(person(given = \"Hadley\",\n             family = \"Wickham\",\n             role = c(\"aut\", \"cre\"),\n             email = \"hadley@rstudio.com\"),\n      person(given = \"RStudio\",\n             role = \"cph\"))",
        "Description": "Compare complex R objects and reveal the key\n    differences.  Designed particularly for use in testing packages where\n    being able to quickly isolate key differences makes understanding test\n    failures much easier.",
        "License": "MIT + file LICENSE",
        "URL": "https://waldo.r-lib.org, https://github.com/r-lib/waldo",
        "BugReports": "https://github.com/r-lib/waldo/issues",
        "Imports": "cli, diffobj (>= 0.3.4), fansi, glue, methods, rematch2, rlang\n(>= 0.4.10), tibble",
        "Suggests": "testthat (>= 3.0.0), covr, R6, withr, xml2",
        "Encoding": "UTF-8",
        "RoxygenNote": "7.1.2",
        "Config/testthat/edition": "3",
        "NeedsCompilation": "no",
        "Packaged": "2021-09-14 17:58:24 UTC; hadley",
        "Author": "Hadley Wickham [aut, cre],\n  RStudio [cph]",
        "Maintainer": "Hadley Wickham <hadley@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2021-09-14 18:20:02 UTC",
        "Built": "R 3.6.3; ; 2021-10-27 19:37:19 UTC; unix"
      }
    },
    "withr": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "withr",
        "Title": "Run Code 'With' Temporarily Modified Global State",
        "Version": "2.4.2",
        "Authors@R": "\n    c(person(given = \"Jim\",\n             family = \"Hester\",\n             role = c(\"aut\", \"cre\"),\n             email = \"jim.hester@rstudio.com\"),\n      person(given = \"Kirill\",\n             family = \"Müller\",\n             role = \"aut\",\n             email = \"krlmlr+r@mailbox.org\"),\n      person(given = \"Kevin\",\n             family = \"Ushey\",\n             role = \"aut\",\n             email = \"kevinushey@gmail.com\"),\n      person(given = \"Hadley\",\n             family = \"Wickham\",\n             role = \"aut\",\n             email = \"hadley@rstudio.com\"),\n      person(given = \"Winston\",\n             family = \"Chang\",\n             role = \"aut\"),\n      person(given = \"Jennifer\",\n             family = \"Bryan\",\n             role = \"ctb\"),\n      person(given = \"Richard\",\n             family = \"Cotton\",\n             role = \"ctb\"),\n      person(given = \"RStudio\",\n             role = \"cph\"))",
        "Description": "A set of functions to run code 'with' safely and\n    temporarily modified global state. Many of these functions were\n    originally a part of the 'devtools' package, this provides a simple\n    package with limited dependencies to provide access to these\n    functions.",
        "License": "MIT + file LICENSE",
        "URL": "https://withr.r-lib.org, https://github.com/r-lib/withr#readme",
        "BugReports": "https://github.com/r-lib/withr/issues",
        "Depends": "R (>= 3.2.0)",
        "Imports": "graphics, grDevices, stats",
        "Suggests": "covr, DBI, knitr, lattice, methods, rmarkdown, RSQLite,\ntestthat (>= 2.1.0)",
        "VignetteBuilder": "knitr",
        "Encoding": "UTF-8",
        "RoxygenNote": "7.1.1",
        "Collate": "'local_.R' 'with_.R' 'collate.R' 'compat-defer.R'\n'connection.R' 'db.R' 'defer.R' 'wrap.R' 'devices.R' 'dir.R'\n'env.R' 'file.R' 'libpaths.R' 'locale.R' 'makevars.R'\n'namespace.R' 'options.R' 'par.R' 'path.R' 'rng.R' 'seed.R'\n'sink.R' 'tempfile.R' 'timezone.R' 'torture.R' 'utils.R'\n'with.R'",
        "NeedsCompilation": "no",
        "Packaged": "2021-04-16 17:12:53 UTC; jhester",
        "Author": "Jim Hester [aut, cre],\n  Kirill Müller [aut],\n  Kevin Ushey [aut],\n  Hadley Wickham [aut],\n  Winston Chang [aut],\n  Jennifer Bryan [ctb],\n  Richard Cotton [ctb],\n  RStudio [cph]",
        "Maintainer": "Jim Hester <jim.hester@rstudio.com>",
        "Repository": "CRAN",
        "Date/Publication": "2021-04-18 10:20:02 UTC",
        "Built": "R 3.6.3; ; 2021-10-11 17:43:56 UTC; unix"
      }
    },
    "xtable": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "xtable",
        "Version": "1.8-4",
        "Date": "2019-04-08",
        "Title": "Export Tables to LaTeX or HTML",
        "Authors@R": "c(person(\"David B.\", \"Dahl\", role=\"aut\"),\n             person(\"David\", \"Scott\", role=c(\"aut\",\"cre\"),\n               email=\"d.scott@auckland.ac.nz\"),\n             person(\"Charles\", \"Roosen\", role=\"aut\"),\n             person(\"Arni\", \"Magnusson\", role=\"aut\"),\n             person(\"Jonathan\", \"Swinton\", role=\"aut\"),\n             person(\"Ajay\", \"Shah\", role=\"ctb\"),\n             person(\"Arne\", \"Henningsen\", role=\"ctb\"),\n             person(\"Benno\", \"Puetz\", role=\"ctb\"),\n             person(\"Bernhard\", \"Pfaff\", role=\"ctb\"),\n             person(\"Claudio\", \"Agostinelli\", role=\"ctb\"),\n             person(\"Claudius\", \"Loehnert\", role=\"ctb\"),\n             person(\"David\", \"Mitchell\", role=\"ctb\"),\n             person(\"David\", \"Whiting\", role=\"ctb\"),\n             person(\"Fernando da\", \"Rosa\", role=\"ctb\"),\n             person(\"Guido\", \"Gay\", role=\"ctb\"),\n             person(\"Guido\", \"Schulz\", role=\"ctb\"),\n             person(\"Ian\", \"Fellows\", role=\"ctb\"),\n             person(\"Jeff\", \"Laake\", role=\"ctb\"),\n             person(\"John\", \"Walker\", role=\"ctb\"),\n             person(\"Jun\", \"Yan\", role=\"ctb\"),\n             person(\"Liviu\", \"Andronic\", role=\"ctb\"),\n             person(\"Markus\", \"Loecher\", role=\"ctb\"),\n             person(\"Martin\", \"Gubri\", role=\"ctb\"),\n             person(\"Matthieu\", \"Stigler\", role=\"ctb\"),\n             person(\"Robert\", \"Castelo\", role=\"ctb\"),\n             person(\"Seth\", \"Falcon\", role=\"ctb\"),\n             person(\"Stefan\", \"Edwards\", role=\"ctb\"),\n             person(\"Sven\", \"Garbade\", role=\"ctb\"),\n             person(\"Uwe\", \"Ligges\", role=\"ctb\"))",
        "Maintainer": "David Scott <d.scott@auckland.ac.nz>",
        "Imports": "stats, utils",
        "Suggests": "knitr, plm, zoo, survival",
        "VignetteBuilder": "knitr",
        "Description": "Coerce data to LaTeX and HTML tables.",
        "URL": "http://xtable.r-forge.r-project.org/",
        "Depends": "R (>= 2.10.0)",
        "License": "GPL (>= 2)",
        "Repository": "CRAN",
        "NeedsCompilation": "no",
        "Packaged": "2019-04-21 10:56:51 UTC; dsco036",
        "Author": "David B. Dahl [aut],\n  David Scott [aut, cre],\n  Charles Roosen [aut],\n  Arni Magnusson [aut],\n  Jonathan Swinton [aut],\n  Ajay Shah [ctb],\n  Arne Henningsen [ctb],\n  Benno Puetz [ctb],\n  Bernhard Pfaff [ctb],\n  Claudio Agostinelli [ctb],\n  Claudius Loehnert [ctb],\n  David Mitchell [ctb],\n  David Whiting [ctb],\n  Fernando da Rosa [ctb],\n  Guido Gay [ctb],\n  Guido Schulz [ctb],\n  Ian Fellows [ctb],\n  Jeff Laake [ctb],\n  John Walker [ctb],\n  Jun Yan [ctb],\n  Liviu Andronic [ctb],\n  Markus Loecher [ctb],\n  Martin Gubri [ctb],\n  Matthieu Stigler [ctb],\n  Robert Castelo [ctb],\n  Seth Falcon [ctb],\n  Stefan Edwards [ctb],\n  Sven Garbade [ctb],\n  Uwe Ligges [ctb]",
        "Date/Publication": "2019-04-21 12:20:03 UTC",
        "Built": "R 3.6.3; ; 2020-07-21 17:42:48 UTC; unix"
      }
    },
    "yaml": {
      "Source": "CRAN",
      "Repository": "https://cran.rstudio.com/",
      "description": {
        "Package": "yaml",
        "Type": "Package",
        "Title": "Methods to Convert R Data to YAML and Back",
        "Date": "2020-01-23",
        "Version": "2.2.1",
        "Suggests": "RUnit",
        "Author": "Jeremy Stephens [aut, cre], Kirill Simonov [aut], Yihui Xie [ctb],\n  Zhuoer Dong [ctb], Hadley Wickham [ctb], Jeffrey Horner [ctb], reikoch [ctb],\n  Will Beasley [ctb], Brendan O'Connor [ctb], Gregory R. Warnes [ctb]",
        "Maintainer": "Jeremy Stephens <jeremy.f.stephens@vumc.org>",
        "License": "BSD_3_clause + file LICENSE",
        "Description": "Implements the 'libyaml' 'YAML' 1.1 parser and emitter\n  (<http://pyyaml.org/wiki/LibYAML>) for R.",
        "URL": "https://github.com/viking/r-yaml/",
        "BugReports": "https://github.com/viking/r-yaml/issues",
        "NeedsCompilation": "yes",
        "Packaged": "2020-01-30 20:29:56 UTC; stephej1",
        "Repository": "CRAN",
        "Date/Publication": "2020-02-01 05:50:02 UTC",
        "Built": "R 3.6.3; x86_64-pc-linux-gnu; 2020-07-21 17:42:32 UTC; unix"
      }
    }
  },
  "files": {
    "app.R": {
      "checksum": "d3c6c9c04cf0b636b6a6d72c3694a9f7"
    },
    "cl_arms_length_sales_pct_all-7_30aug21.Rds": {
      "checksum": "3b63c3a7646beb3e0b3e9a3d7d63d64e"
    },
    "cl_program_eligible_properties.csv": {
      "checksum": "abc684a8138e731ec8fb406e3df79ab0"
    },
    "cl_program_eligible_properties.RDS": {
      "checksum": "fd0e1f4b145f8576a9799377c61ace66"
    },
    "packrat/desc/askpass": {
      "checksum": "7628786abe320a1ab5f108ab0522c4f9"
    },
    "packrat/desc/base64enc": {
      "checksum": "20aa6e4470f0aafa58bd5b13fb5d2a36"
    },
    "packrat/desc/BH": {
      "checksum": "1d6fd7754daab96c59a595a32bfa0dcc"
    },
    "packrat/desc/billboarder": {
      "checksum": "93142f6eca5ee2c0f5a6c7a7485fe14c"
    },
    "packrat/desc/bit": {
      "checksum": "ad23214b24db2a2dcebb7d117e495fe4"
    },
    "packrat/desc/bit64": {
      "checksum": "ee0f59bd4395a011833246deb5cbf2df"
    },
    "packrat/desc/blob": {
      "checksum": "0083c81b114af7e1e8ec026de08b6ba5"
    },
    "packrat/desc/brio": {
      "checksum": "d8af0c15b7a23a61380e016bc5a08515"
    },
    "packrat/desc/cachem": {
      "checksum": "e408fa586476b7b672b3c9dc6f3fa586"
    },
    "packrat/desc/callr": {
      "checksum": "096291d48b43f259dc69c3a6d3d3b6bc"
    },
    "packrat/desc/cli": {
      "checksum": "0fcc1e9d9dbb6d758b4ef223e74e5400"
    },
    "packrat/desc/colorspace": {
      "checksum": "5e4665e1d250e33276b163ebf54b7529"
    },
    "packrat/desc/commonmark": {
      "checksum": "e288cd445aba16752b529ff7df6cd12b"
    },
    "packrat/desc/crayon": {
      "checksum": "e35b674e5ec3092c4ad908a9054d3785"
    },
    "packrat/desc/crosstalk": {
      "checksum": "f7d22998e043cb61c75224c92a134960"
    },
    "packrat/desc/data.table": {
      "checksum": "1c94117553f4fccba789999d68c001e0"
    },
    "packrat/desc/DBI": {
      "checksum": "2857a0e88856614523f40bc2353b986e"
    },
    "packrat/desc/desc": {
      "checksum": "58503dd333903c1bba583b6731b1c508"
    },
    "packrat/desc/diffobj": {
      "checksum": "c96b290ca4a9abb230a5665bb9d766a2"
    },
    "packrat/desc/digest": {
      "checksum": "744dc76504c1d774fbdcdcb15a8ad276"
    },
    "packrat/desc/DT": {
      "checksum": "26b8757f12d86a34b68d0fe705b9512a"
    },
    "packrat/desc/ellipsis": {
      "checksum": "e8341f6d76cd313769c3daa36638a9d9"
    },
    "packrat/desc/evaluate": {
      "checksum": "dd0647a1a1a7fe171a06e7652118de96"
    },
    "packrat/desc/fansi": {
      "checksum": "72256a5a407c4e602955f0a68b733a28"
    },
    "packrat/desc/farver": {
      "checksum": "15816611f2c32a422a266ebe605947c3"
    },
    "packrat/desc/fastmap": {
      "checksum": "b99fa0813b3e550448b2008926dd0bcd"
    },
    "packrat/desc/ggplot2": {
      "checksum": "f0e76ae097b48e639cc83a64034a98f2"
    },
    "packrat/desc/glue": {
      "checksum": "6e7ff31a39b77a9652309d517b65293d"
    },
    "packrat/desc/gtable": {
      "checksum": "e9e8caa5fc98a71972fee90e08c20dae"
    },
    "packrat/desc/here": {
      "checksum": "17ed94b1be02e1f077d65d999286ed83"
    },
    "packrat/desc/htmltools": {
      "checksum": "34612406f29d2c0828edaa521d95cd40"
    },
    "packrat/desc/htmlwidgets": {
      "checksum": "bcda400d72bc50cb675d87730163a6e4"
    },
    "packrat/desc/httpuv": {
      "checksum": "6c45c1298fd835a1a4d6fe3df57a2ccd"
    },
    "packrat/desc/isoband": {
      "checksum": "3f7d321ad677cfabd35ccb067125367a"
    },
    "packrat/desc/jquerylib": {
      "checksum": "e9bda2ddd617cebba82b83c0406630ec"
    },
    "packrat/desc/jsonlite": {
      "checksum": "255f289f2d7aa39e9e8c46dd1df2f94f"
    },
    "packrat/desc/labeling": {
      "checksum": "9385abd61558131b061edf817465b65c"
    },
    "packrat/desc/later": {
      "checksum": "50df8109060707cf4ea2965017934123"
    },
    "packrat/desc/lattice": {
      "checksum": "a0413837c7fad52c6c0e15222ee70ad5"
    },
    "packrat/desc/lazyeval": {
      "checksum": "a96e82ac571e7982e856388600d8e706"
    },
    "packrat/desc/lifecycle": {
      "checksum": "a9217dc68516f7e0721566e8bfd81fe8"
    },
    "packrat/desc/magrittr": {
      "checksum": "a64486d25376f5fa0f0f207db1f70cd0"
    },
    "packrat/desc/MASS": {
      "checksum": "1b07e2b3298098061664c9b5c9600977"
    },
    "packrat/desc/Matrix": {
      "checksum": "bdc59ccc8442b14444e731c12addf100"
    },
    "packrat/desc/memoise": {
      "checksum": "857dbe6bd92178fdf00026a73d204dbc"
    },
    "packrat/desc/mgcv": {
      "checksum": "3322e1ba5ad4d21f42dbfa87333048e7"
    },
    "packrat/desc/mime": {
      "checksum": "a47994be5a9232df9ae75f07fd2bbbf6"
    },
    "packrat/desc/munsell": {
      "checksum": "84132adb2f0c4d6cc7586ade8226d08d"
    },
    "packrat/desc/nlme": {
      "checksum": "b4824f0b3482ad715e0f8fa45242ddf8"
    },
    "packrat/desc/openssl": {
      "checksum": "aa6278a39eebb9128bdede05875b4fb7"
    },
    "packrat/desc/pillar": {
      "checksum": "865d93c79248762b55c45df6c759f06b"
    },
    "packrat/desc/pkgconfig": {
      "checksum": "1fd332b25323853f33202363991b7889"
    },
    "packrat/desc/pkgload": {
      "checksum": "bd46c4b9674f6cef257bb449a931a376"
    },
    "packrat/desc/plogr": {
      "checksum": "324e94b220c6bfdd60c53a3e42b0fa9e"
    },
    "packrat/desc/praise": {
      "checksum": "88b3cd4a141112e71b630637efdbe715"
    },
    "packrat/desc/processx": {
      "checksum": "8eed3304e6771673e4868ad5f48ec697"
    },
    "packrat/desc/promises": {
      "checksum": "06a60757c4795ef0d25526575504f05e"
    },
    "packrat/desc/ps": {
      "checksum": "9b956f2607418eeb1f50c736789cfbfb"
    },
    "packrat/desc/R.methodsS3": {
      "checksum": "a0a0e273649dfb150f585cf3d576d3eb"
    },
    "packrat/desc/R.oo": {
      "checksum": "9369f49d6d7d9a1d1480a4f1950e30e4"
    },
    "packrat/desc/R.utils": {
      "checksum": "4776b3b35e6271fd074b35d3574dfff9"
    },
    "packrat/desc/R6": {
      "checksum": "42a717a1d989acd7759afa01d6b8f9e6"
    },
    "packrat/desc/RColorBrewer": {
      "checksum": "73be047d6250440c46c06e44bd94e845"
    },
    "packrat/desc/Rcpp": {
      "checksum": "f5eae8266e54198feeb299c4e85ae063"
    },
    "packrat/desc/reactable": {
      "checksum": "d859062fcc40ff1f6d534810c4b56e70"
    },
    "packrat/desc/reactR": {
      "checksum": "89b9b20b7fecb7eb58649796a21e6f0c"
    },
    "packrat/desc/rematch2": {
      "checksum": "d790d5084dbdc95e1aa7b138613d7cd4"
    },
    "packrat/desc/rlang": {
      "checksum": "df2cd9dd2484f22ecff763b2836f9ba0"
    },
    "packrat/desc/RPostgreSQL": {
      "checksum": "aa51ac43e63a557fe8a64a76b907d2ce"
    },
    "packrat/desc/rprojroot": {
      "checksum": "ce15ed7070f31de2484f587336eed724"
    },
    "packrat/desc/RSQLite": {
      "checksum": "ea1ebced6116e56b8626cda96410026e"
    },
    "packrat/desc/rstudioapi": {
      "checksum": "97d3b128eda30c0f41aab39b96ea2d18"
    },
    "packrat/desc/scales": {
      "checksum": "aae4111f998b5dd7d5341631b81f3a95"
    },
    "packrat/desc/scrypt": {
      "checksum": "552ea6bb57bb421505374bc52caf8a59"
    },
    "packrat/desc/shiny": {
      "checksum": "4b0c615431c9bed4ff55d52eb16477c6"
    },
    "packrat/desc/shinymanager": {
      "checksum": "44781b8a2ee3dbfa5c51b01dd27498f1"
    },
    "packrat/desc/sourcetools": {
      "checksum": "80b0aafb213de7ee512b00408014a98a"
    },
    "packrat/desc/stringi": {
      "checksum": "28320b109203793879803b5679352ebb"
    },
    "packrat/desc/stringr": {
      "checksum": "a94d259f51f1cba555de45d08917615a"
    },
    "packrat/desc/sys": {
      "checksum": "7a124b7526497e2e9f9608b08db94b68"
    },
    "packrat/desc/testthat": {
      "checksum": "e5690c3c551d7f43ee8b09a43dbf198c"
    },
    "packrat/desc/tibble": {
      "checksum": "7547a67940acca5eff3ceedeb7ba1c22"
    },
    "packrat/desc/utf8": {
      "checksum": "aa0dcf89da210ab8746354ddead10f08"
    },
    "packrat/desc/vctrs": {
      "checksum": "b5e8d892058b814a3bf6270a6cdf5d54"
    },
    "packrat/desc/viridisLite": {
      "checksum": "020f1803464565ec8601640d355e1a9c"
    },
    "packrat/desc/waldo": {
      "checksum": "2f054e78e1e75190df62415a426e3b0c"
    },
    "packrat/desc/withr": {
      "checksum": "3e7c3bcc28b0210189f59298f5982250"
    },
    "packrat/desc/xtable": {
      "checksum": "d5747eca685fd68005bec4a36baa47a3"
    },
    "packrat/desc/yaml": {
      "checksum": "328eb6cb519095b6c48ccbe875aa463a"
    },
    "packrat/packrat.lock": {
      "checksum": "ac856cdb0a070e6e61010c002de48b95"
    },
    "shiny_app_codebook_20aug21.csv": {
      "checksum": "14173d15ef388b783e04852677f12050"
    },
    "shiny_app_dict_19aug21.csv": {
      "checksum": "f42fd45ca74d6be28314d3b93d46a521"
    },
    "state_codes.RDS": {
      "checksum": "f3f28b6759f6b11f697add678214dadf"
    },
    "www/AK_02016_Aleutians_West_Census_Area.zip": {
      "checksum": "9c943ef5b8590c98a121ee972cf6f995"
    },
    "www/AK_02020_Anchorage_Municipality.zip": {
      "checksum": "3532c2431cb021fb0d6322e819b6e735"
    },
    "www/AK_02060_Bristol_Bay_Borough.zip": {
      "checksum": "7f189eebf3441601a8885b8b61108aea"
    },
    "www/AK_02090_Fairbanks_North_Star_Borough.zip": {
      "checksum": "2c1171070c4168c1850aaa04543da0e1"
    },
    "www/AK_02100_Haines_Borough.zip": {
      "checksum": "170ee967d463bacbd5073552d9566606"
    },
    "www/AK_02110_Juneau_City_and_Borough.zip": {
      "checksum": "db977d65911dde68b9b66ee3e5d09ec2"
    },
    "www/AK_02122_Kenai_Peninsula_Borough.zip": {
      "checksum": "612dbf4faa011ef02c53233dade5c53a"
    },
    "www/AK_02130_Ketchikan_Gateway_Borough.zip": {
      "checksum": "24d0cfaca63f137846421553586bdd45"
    },
    "www/AK_02150_Kodiak_Island_Borough.zip": {
      "checksum": "eec22ea56b5804e1bbe3c5dec6259140"
    },
    "www/AK_02170_Matanuska-Susitna_Borough.zip": {
      "checksum": "da9a3431b52f5b2d94f47d21aedb9475"
    },
    "www/AK_02180_Nome_Census_Area.zip": {
      "checksum": "0338a8c059ef866fdbf4796c18198877"
    },
    "www/AK_02185_North_Slope_Borough.zip": {
      "checksum": "ab7e40b51b72b6756fbb9622b037feed"
    },
    "www/AK_02220_Sitka_City_and_Borough.zip": {
      "checksum": "0399bce8d33c4266e57277bac655b197"
    },
    "www/AK_02261_Valdez-Cordova_Census_Area.zip": {
      "checksum": "71a05b43b27f39964ef65ac24d07eede"
    },
    "www/AL_01001_Autauga_County.zip": {
      "checksum": "9817bedacd151505d3f393ddf2a1d9b6"
    },
    "www/AL_01003_Baldwin_County.zip": {
      "checksum": "6a1e0f1d41f13b83349acd4aec3b03f7"
    },
    "www/AL_01005_Barbour_County.zip": {
      "checksum": "bc49681f8f798eca4361453d136bb394"
    },
    "www/AL_01007_Bibb_County.zip": {
      "checksum": "8181d5076c1aeacc4d6b64109b9bb5e2"
    },
    "www/AL_01009_Blount_County.zip": {
      "checksum": "c3a28b5b1178a0b306515be5c3d3ddee"
    },
    "www/AL_01011_Bullock_County.zip": {
      "checksum": "e7cd49369b9d01d48ff99f678289047c"
    },
    "www/AL_01013_Butler_County.zip": {
      "checksum": "5cbbc2e472b59e115a3079005ad0dd4b"
    },
    "www/AL_01015_Calhoun_County.zip": {
      "checksum": "f3a467b28280d51d230d40cdbedbbf05"
    },
    "www/AL_01017_Chambers_County.zip": {
      "checksum": "d7a9fdbbdbad35f6844db4f41d3df3c1"
    },
    "www/AL_01019_Cherokee_County.zip": {
      "checksum": "86a6230b0768d3487b4fd0f579b40fa9"
    },
    "www/AL_01021_Chilton_County.zip": {
      "checksum": "389a98f0ddedd6e65f6ee85cec0f0695"
    },
    "www/AL_01025_Clarke_County.zip": {
      "checksum": "7f56ad901ba84d98e238ccde09a6ecd7"
    },
    "www/AL_01027_Clay_County.zip": {
      "checksum": "a8c97c144faece0298bea23ade620d07"
    },
    "www/AL_01029_Cleburne_County.zip": {
      "checksum": "8ddc07345b6a07266129886d945032e3"
    },
    "www/AL_01031_Coffee_County.zip": {
      "checksum": "b6bb9116678a5dae25817ec40ddd488b"
    },
    "www/AL_01033_Colbert_County.zip": {
      "checksum": "1f098f0ce1c5c1e1e03a2f1947d326d8"
    },
    "www/AL_01035_Conecuh_County.zip": {
      "checksum": "0c7826892ba81c6163ce8376f1448183"
    },
    "www/AL_01037_Coosa_County.zip": {
      "checksum": "6d9887a32ed94d977b63ad3b5ff5445b"
    },
    "www/AL_01039_Covington_County.zip": {
      "checksum": "17758b7830ddcf1c4da720ca1bdcd24c"
    },
    "www/AL_01041_Crenshaw_County.zip": {
      "checksum": "d204d9d00e39d5dba74ca732c632682c"
    },
    "www/AL_01043_Cullman_County.zip": {
      "checksum": "30ae9a69df0cd824d4bec4421a48430a"
    },
    "www/AL_01045_Dale_County.zip": {
      "checksum": "44abed1bd808aedaefc7e4c07184d85d"
    },
    "www/AL_01047_Dallas_County.zip": {
      "checksum": "69bce27dd10589db20f05a6bc99150ed"
    },
    "www/AL_01049_DeKalb_County.zip": {
      "checksum": "2bbe8af553e46e67b29c58a177957490"
    },
    "www/AL_01051_Elmore_County.zip": {
      "checksum": "3f18ac2e8add310bcbcfeb185af9668f"
    },
    "www/AL_01053_Escambia_County.zip": {
      "checksum": "b08fa73a2aad5fd1915ad0472d288941"
    },
    "www/AL_01055_Etowah_County.zip": {
      "checksum": "9656239b66526476c06c8e5a6fc35310"
    },
    "www/AL_01057_Fayette_County.zip": {
      "checksum": "4873c2fc6c0f15435eb386d22ba8d2d6"
    },
    "www/AL_01059_Franklin_County.zip": {
      "checksum": "6a402136f4d5dd77de2f6a61fdc9aaaa"
    },
    "www/AL_01061_Geneva_County.zip": {
      "checksum": "8f2a0382d4212f6fd3d0c75d5ecd58b2"
    },
    "www/AL_01063_Greene_County.zip": {
      "checksum": "443766fbe9c19324319042aa828f9c3b"
    },
    "www/AL_01065_Hale_County.zip": {
      "checksum": "f8c21e491f775cd7834286e19dec0fc0"
    },
    "www/AL_01067_Henry_County.zip": {
      "checksum": "e4febdd375d5856228c3d7b08bd08caa"
    },
    "www/AL_01069_Houston_County.zip": {
      "checksum": "1248394223d063d9cc103d10ea9a1d1b"
    },
    "www/AL_01071_Jackson_County.zip": {
      "checksum": "e207efaff7a88c1b1e6ad3ebd052b871"
    },
    "www/AL_01073_Jefferson_County.zip": {
      "checksum": "1e857d20bfa1edc108b0332af3d66f16"
    },
    "www/AL_01077_Lauderdale_County.zip": {
      "checksum": "cdee40399a8129acdd911e6d03fd4d0a"
    },
    "www/AL_01079_Lawrence_County.zip": {
      "checksum": "da5ae5772bd8b4c02723e0052a5e6053"
    },
    "www/AL_01081_Lee_County.zip": {
      "checksum": "a030c2c37d823a03c7f1d28e295aa6a2"
    },
    "www/AL_01083_Limestone_County.zip": {
      "checksum": "2cbf6c427cd295347c841f0c8a6c6744"
    },
    "www/AL_01085_Lowndes_County.zip": {
      "checksum": "9900fcf4cf17778faf950edb556a0c7b"
    },
    "www/AL_01087_Macon_County.zip": {
      "checksum": "6e74174c00855bfa16a61ef59b2f2198"
    },
    "www/AL_01089_Madison_County.zip": {
      "checksum": "443c0594b1da59eea94caf6cd5dad61e"
    },
    "www/AL_01091_Marengo_County.zip": {
      "checksum": "340b2dd601af8214c440e43ec7d8f999"
    },
    "www/AL_01093_Marion_County.zip": {
      "checksum": "ee3327d5188b3d63783763fc18d46d62"
    },
    "www/AL_01095_Marshall_County.zip": {
      "checksum": "5346fc6bd69d9cdf1ed100f45f18c506"
    },
    "www/AL_01097_Mobile_County.zip": {
      "checksum": "5330b26de1952c205a71f025f99deced"
    },
    "www/AL_01099_Monroe_County.zip": {
      "checksum": "bf612f4d3374aec50ac8385f95d33969"
    },
    "www/AL_01101_Montgomery_County.zip": {
      "checksum": "b498fba28981d64349453e684feb3d52"
    },
    "www/AL_01103_Morgan_County.zip": {
      "checksum": "3de710fa5bb5041fe5557435df274490"
    },
    "www/AL_01105_Perry_County.zip": {
      "checksum": "e94615d6cfa121f3fc130f7b088efdf7"
    },
    "www/AL_01107_Pickens_County.zip": {
      "checksum": "08901b5eef3a7f29677e01be16eed070"
    },
    "www/AL_01109_Pike_County.zip": {
      "checksum": "a52ed21cb6cf7d1c560a717e7b15a4df"
    },
    "www/AL_01111_Randolph_County.zip": {
      "checksum": "8368665c24d4ba1af1ab4515173680a2"
    },
    "www/AL_01113_Russell_County.zip": {
      "checksum": "d62b9e88c8b9b26927504f92bdd04dd2"
    },
    "www/AL_01115_St._Clair_County.zip": {
      "checksum": "4dea2b2cdb85648e802d7495a88918e7"
    },
    "www/AL_01117_Shelby_County.zip": {
      "checksum": "fdaf9f616840ac0040dcbb6ffa0f8891"
    },
    "www/AL_01119_Sumter_County.zip": {
      "checksum": "4f743fc6af1b7f2ff2fcc2c25ea6aed1"
    },
    "www/AL_01121_Talladega_County.zip": {
      "checksum": "e15d797bf3f2ffc3c3cbd1d06c6b2cb6"
    },
    "www/AL_01123_Tallapoosa_County.zip": {
      "checksum": "5221211dfdd8c884ebba1befc5d7fb47"
    },
    "www/AL_01125_Tuscaloosa_County.zip": {
      "checksum": "c606d2982854a7fb92875eb10aa5c576"
    },
    "www/AL_01127_Walker_County.zip": {
      "checksum": "7a2a384cf388cf8d6862bdfe8f15d221"
    },
    "www/AL_01131_Wilcox_County.zip": {
      "checksum": "d64d907c56bbcdb1b64d1da0fa85111e"
    },
    "www/AL_01133_Winston_County.zip": {
      "checksum": "3d6f122d8c2aad04d9d698fe79d2bb0b"
    },
    "www/AR_05001_Arkansas_County.zip": {
      "checksum": "12671f113d5fbdcfc86b7fd6e69014b3"
    },
    "www/AR_05003_Ashley_County.zip": {
      "checksum": "df1f47af444decd2c0d0919171bee1fd"
    },
    "www/AR_05005_Baxter_County.zip": {
      "checksum": "fa9d30e11dc6bb4db0c5d704ff74a4a9"
    },
    "www/AR_05007_Benton_County.zip": {
      "checksum": "895ba6465bfdb42bf9104f7831d80e45"
    },
    "www/AR_05009_Boone_County.zip": {
      "checksum": "83b76ce4b0a08e34971c90ac41238b8c"
    },
    "www/AR_05011_Bradley_County.zip": {
      "checksum": "ac9912218fdacc115c8f356753f67704"
    },
    "www/AR_05013_Calhoun_County.zip": {
      "checksum": "013907140a642ca6c5af305e31e9148b"
    },
    "www/AR_05015_Carroll_County.zip": {
      "checksum": "88ceceb4ad1575b94abed9a97b930499"
    },
    "www/AR_05017_Chicot_County.zip": {
      "checksum": "307e1a705e76b85a5fee2b4eec1c69cd"
    },
    "www/AR_05019_Clark_County.zip": {
      "checksum": "6b261dd281f729385a08b11bc1693c74"
    },
    "www/AR_05021_Clay_County.zip": {
      "checksum": "4e8b3d25dbaba125ae41b40c8b634669"
    },
    "www/AR_05023_Cleburne_County.zip": {
      "checksum": "79c51cddfce5d326b14c5862f619e186"
    },
    "www/AR_05025_Cleveland_County.zip": {
      "checksum": "cb4101ea29c36cdd025fc61f988fe8cb"
    },
    "www/AR_05027_Columbia_County.zip": {
      "checksum": "b25e88cb26972fd20a602bae28fcd0a2"
    },
    "www/AR_05029_Conway_County.zip": {
      "checksum": "cb40b7a7b9df7dfd4d5ca18cc4b011ea"
    },
    "www/AR_05031_Craighead_County.zip": {
      "checksum": "6c9e9bc4d34f7b3282ea4168139e39e9"
    },
    "www/AR_05033_Crawford_County.zip": {
      "checksum": "aae558591032ada83d960c9e25fbfd6d"
    },
    "www/AR_05035_Crittenden_County.zip": {
      "checksum": "81ae4de33d7c1f2f96c771c847077a16"
    },
    "www/AR_05037_Cross_County.zip": {
      "checksum": "71026ff927059040233958eda6fe93d0"
    },
    "www/AR_05039_Dallas_County.zip": {
      "checksum": "459dff8b1f8ec68170e4857e841eff26"
    },
    "www/AR_05041_Desha_County.zip": {
      "checksum": "78d1bad5cc4a4d90eaac035613d218f7"
    },
    "www/AR_05043_Drew_County.zip": {
      "checksum": "af93953eec34c305341229d1ac22025a"
    },
    "www/AR_05045_Faulkner_County.zip": {
      "checksum": "61cadadd463a43d3ea4750f1a3fd2e05"
    },
    "www/AR_05047_Franklin_County.zip": {
      "checksum": "c6f319a03db1ea0ffea8284a79d7c273"
    },
    "www/AR_05049_Fulton_County.zip": {
      "checksum": "858fa0357e8f511c024f43e0f1682240"
    },
    "www/AR_05051_Garland_County.zip": {
      "checksum": "cfb695f5ee0ecc04c459254bbf983efc"
    },
    "www/AR_05053_Grant_County.zip": {
      "checksum": "54a50b9c76184e08ea36148aea4e6a0b"
    },
    "www/AR_05055_Greene_County.zip": {
      "checksum": "d6e734fbd909bff8c3227c31cc16569d"
    },
    "www/AR_05057_Hempstead_County.zip": {
      "checksum": "68027f2bf177521dda2c0922151385f5"
    },
    "www/AR_05059_Hot_Spring_County.zip": {
      "checksum": "6e5c7fb679798a42392b4425ace7fca2"
    },
    "www/AR_05061_Howard_County.zip": {
      "checksum": "f3639bb2ad3862fdcd26d97aedac5f85"
    },
    "www/AR_05063_Independence_County.zip": {
      "checksum": "5acd4672c657882e7138f3ddfe8db39c"
    },
    "www/AR_05065_Izard_County.zip": {
      "checksum": "854a26dc53c1a06307909676216d85b7"
    },
    "www/AR_05069_Jefferson_County.zip": {
      "checksum": "5e5a2b19d9160804e36ec35f2bf43f48"
    },
    "www/AR_05071_Johnson_County.zip": {
      "checksum": "3f10bb8002865d5b46303210dfc329f7"
    },
    "www/AR_05073_Lafayette_County.zip": {
      "checksum": "7dfaa5b84518aadb31ed2ac572f34000"
    },
    "www/AR_05075_Lawrence_County.zip": {
      "checksum": "8e6c1f076e0a2b6698226bcf52ee5fb7"
    },
    "www/AR_05077_Lee_County.zip": {
      "checksum": "ab19cf9b21388af64b5bbbdc9bb34010"
    },
    "www/AR_05081_Little_River_County.zip": {
      "checksum": "bfb482a735ebcef8201a61c70da2bd72"
    },
    "www/AR_05083_Logan_County.zip": {
      "checksum": "76513d9a6388446136f9a7b3d9c1ba4d"
    },
    "www/AR_05085_Lonoke_County.zip": {
      "checksum": "90d94ec8c4432c9efb8436ad2740cd89"
    },
    "www/AR_05087_Madison_County.zip": {
      "checksum": "0750bd8a46539b1493a78ea8f141da47"
    },
    "www/AR_05089_Marion_County.zip": {
      "checksum": "27a01f5cce3d05163f7065ba4488ea4c"
    },
    "www/AR_05091_Miller_County.zip": {
      "checksum": "e352b6a0ced52bf2851ef624544bd14f"
    },
    "www/AR_05093_Mississippi_County.zip": {
      "checksum": "75fdf9c3328eef68b75ad2925891f5ef"
    },
    "www/AR_05095_Monroe_County.zip": {
      "checksum": "18bf6e4d376f746ee0d51fc74bf19276"
    },
    "www/AR_05097_Montgomery_County.zip": {
      "checksum": "a0ef28b8948116c9ea3ed7ba750e5c36"
    },
    "www/AR_05099_Nevada_County.zip": {
      "checksum": "8ee7105bf40c68023b4694b78002eb55"
    },
    "www/AR_05101_Newton_County.zip": {
      "checksum": "d92fd402c9cfe6f5b464fd9d90edb181"
    },
    "www/AR_05103_Ouachita_County.zip": {
      "checksum": "04ed8852988c3f26516d6c90e66b0df8"
    },
    "www/AR_05105_Perry_County.zip": {
      "checksum": "e83b84b9cfd6952cda5ca73f8964063b"
    },
    "www/AR_05107_Phillips_County.zip": {
      "checksum": "3898ca80926653b7dea151a4ce0864b3"
    },
    "www/AR_05109_Pike_County.zip": {
      "checksum": "316a32cdcadb380129dd6758feffb615"
    },
    "www/AR_05111_Poinsett_County.zip": {
      "checksum": "56e9c9970231cc4d0b877efc13404c20"
    },
    "www/AR_05113_Polk_County.zip": {
      "checksum": "44d630616878a9403cdb93379eff66ec"
    },
    "www/AR_05115_Pope_County.zip": {
      "checksum": "f302bb8638cc4018179c9c5269584c77"
    },
    "www/AR_05117_Prairie_County.zip": {
      "checksum": "82f140406fc3b9c5721089e17994b935"
    },
    "www/AR_05119_Pulaski_County.zip": {
      "checksum": "18b49c642f5c3dbf09af41fa53a3b463"
    },
    "www/AR_05121_Randolph_County.zip": {
      "checksum": "27eb7c5c0d760ecc51bbfbbc5b976a87"
    },
    "www/AR_05123_St._Francis_County.zip": {
      "checksum": "00fcdf6870867b56ba361e77af65b5f2"
    },
    "www/AR_05125_Saline_County.zip": {
      "checksum": "c8fe6c496a13fdac29ce515f6136569a"
    },
    "www/AR_05127_Scott_County.zip": {
      "checksum": "0d1578d74e6a64ecccb31def086aae05"
    },
    "www/AR_05129_Searcy_County.zip": {
      "checksum": "fa7d097898509ddf2ec91df01ec4a50f"
    },
    "www/AR_05131_Sebastian_County.zip": {
      "checksum": "5ea841585ed8ace17871034a615c6fa6"
    },
    "www/AR_05133_Sevier_County.zip": {
      "checksum": "a9a7aab4037ee9df910350190c2028da"
    },
    "www/AR_05135_Sharp_County.zip": {
      "checksum": "aebaefb06d981d34616b19d17a59f4ea"
    },
    "www/AR_05137_Stone_County.zip": {
      "checksum": "1dd1763903bf54c8f07a71fb916b2a86"
    },
    "www/AR_05139_Union_County.zip": {
      "checksum": "2b63ba0ab4743d9ee312128605873d8c"
    },
    "www/AR_05141_Van_Buren_County.zip": {
      "checksum": "0f1cd91db17412a456c2a88efc1e1a80"
    },
    "www/AR_05143_Washington_County.zip": {
      "checksum": "30d7482066287b1bc4d5e9e24d4974af"
    },
    "www/AR_05145_White_County.zip": {
      "checksum": "38ddad29d978b5b843d15d41c9010bbf"
    },
    "www/AR_05147_Woodruff_County.zip": {
      "checksum": "d21d9f16ec718cb17620aafb732650b0"
    },
    "www/AR_05149_Yell_County.zip": {
      "checksum": "098cae2534b375d76e83db3773197240"
    },
    "www/AZ_04001_Apache_County.zip": {
      "checksum": "2ace4951dc512732308b1f51e53fb79c"
    },
    "www/AZ_04003_Cochise_County.zip": {
      "checksum": "ef76e5b79a03ebe4b500460ce90c00b4"
    },
    "www/AZ_04005_Coconino_County.zip": {
      "checksum": "6debb60fbf8cc37b960b7634bbae79a3"
    },
    "www/AZ_04007_Gila_County.zip": {
      "checksum": "7aa8c43a72899c50367ccfbeee2dc1cf"
    },
    "www/AZ_04009_Graham_County.zip": {
      "checksum": "679b247855ca27624e3c357261c1f47a"
    },
    "www/AZ_04011_Greenlee_County.zip": {
      "checksum": "cb385657cd840e2b21580592649c8039"
    },
    "www/AZ_04012_La_Paz_County.zip": {
      "checksum": "f0cb967e0d42ee9796323e515cc45fe4"
    },
    "www/AZ_04013_Maricopa_County.zip": {
      "checksum": "08fd8085c0761eb357188e8347e8f90a"
    },
    "www/AZ_04015_Mohave_County.zip": {
      "checksum": "f4b9a4c20f6204841be6f2cf46d83e04"
    },
    "www/AZ_04017_Navajo_County.zip": {
      "checksum": "78fe0c17824a5241d883543d67dab8eb"
    },
    "www/AZ_04019_Pima_County.zip": {
      "checksum": "e3b10dc93f00da852a323c0d5a7a04cd"
    },
    "www/AZ_04021_Pinal_County.zip": {
      "checksum": "5b7f872ad81cbf580e50693d09dca039"
    },
    "www/AZ_04023_Santa_Cruz_County.zip": {
      "checksum": "110ce2600eb393d48d436eb67a4bf8c9"
    },
    "www/AZ_04025_Yavapai_County.zip": {
      "checksum": "21a30890c59cd5feea63df298bd3a6d2"
    },
    "www/AZ_04027_Yuma_County.zip": {
      "checksum": "9306168957d878fd18e64422d0b009be"
    },
    "www/CA_06001_Alameda_County.zip": {
      "checksum": "ab1a8f46cbe2c22f3130f722a9369020"
    },
    "www/CA_06003_Alpine_County.zip": {
      "checksum": "d76f11545e1b3f3c710d5fbbf5d8e345"
    },
    "www/CA_06005_Amador_County.zip": {
      "checksum": "e41c2db58e650abf4c0e5fbadaf29857"
    },
    "www/CA_06007_Butte_County.zip": {
      "checksum": "a2e71ab32c0a61950108a6e0987be1bf"
    },
    "www/CA_06009_Calaveras_County.zip": {
      "checksum": "28b3b2632cf0e85c3a02deb88fd56554"
    },
    "www/CA_06011_Colusa_County.zip": {
      "checksum": "8a28eace8fb262be8f469d0951a73d9e"
    },
    "www/CA_06013_Contra_Costa_County.zip": {
      "checksum": "4b08915b43feaf0a4b3aaa8ffe7f52e4"
    },
    "www/CA_06015_Del_Norte_County.zip": {
      "checksum": "bbdbcaed0013c684d811815726cc2c1a"
    },
    "www/CA_06017_El_Dorado_County.zip": {
      "checksum": "cd77840e35d2323ab509f3c23e0f03ee"
    },
    "www/CA_06019_Fresno_County.zip": {
      "checksum": "29c74c2da20cc8a21bf510da5cfb49d7"
    },
    "www/CA_06021_Glenn_County.zip": {
      "checksum": "862497bf55f66c47b87d7b46f51bcf4f"
    },
    "www/CA_06023_Humboldt_County.zip": {
      "checksum": "e34aeecaf5e2d3a145e28bd6917a2adc"
    },
    "www/CA_06025_Imperial_County.zip": {
      "checksum": "21179b959abb5799de51f313cc2980ca"
    },
    "www/CA_06027_Inyo_County.zip": {
      "checksum": "b46b75a2dbf09db8141dc4e149300e82"
    },
    "www/CA_06029_Kern_County.zip": {
      "checksum": "ac0a28ac8e9fb39a4c530cad4c9c961f"
    },
    "www/CA_06031_Kings_County.zip": {
      "checksum": "c02f7de1432b9dd08e539b8b530fe79a"
    },
    "www/CA_06033_Lake_County.zip": {
      "checksum": "57e7ca13f6942e7a0dca83b073fd9847"
    },
    "www/CA_06035_Lassen_County.zip": {
      "checksum": "8c2403ea3015dec480e61d9a4394091a"
    },
    "www/CA_06037_Los_Angeles_County.zip": {
      "checksum": "2c0a0971110aabf0bd72891fe107f2c5"
    },
    "www/CA_06039_Madera_County.zip": {
      "checksum": "40e65e1673c5c8bd7658d55bb87bad89"
    },
    "www/CA_06041_Marin_County.zip": {
      "checksum": "64dae1338733cb646227af9c0dae96fb"
    },
    "www/CA_06043_Mariposa_County.zip": {
      "checksum": "a7746a4b4f6d05c8ed6edb77a714a958"
    },
    "www/CA_06045_Mendocino_County.zip": {
      "checksum": "b5f54fdb074b45aa85201265a614d0ac"
    },
    "www/CA_06047_Merced_County.zip": {
      "checksum": "e92f8b11ae137c8f798c1c611ac24b86"
    },
    "www/CA_06049_Modoc_County.zip": {
      "checksum": "ef89a657ed878970cc42f265dcc12f35"
    },
    "www/CA_06051_Mono_County.zip": {
      "checksum": "ce15f981865344c4360fc7895e1228c7"
    },
    "www/CA_06053_Monterey_County.zip": {
      "checksum": "40bea72ec0308fb168ac51f014f52ff0"
    },
    "www/CA_06055_Napa_County.zip": {
      "checksum": "86ba81e4100be1ad6dceb5bd1773c0ee"
    },
    "www/CA_06057_Nevada_County.zip": {
      "checksum": "4414f53d9281bdf02e8f41deb410035a"
    },
    "www/CA_06059_Orange_County.zip": {
      "checksum": "79b390343a6a8f5dcbe085daf99b885f"
    },
    "www/CA_06061_Placer_County.zip": {
      "checksum": "6da28f82e5a639af5d50d914bdb4e1c8"
    },
    "www/CA_06063_Plumas_County.zip": {
      "checksum": "51459e08b9207ac22eea838d6baf0c38"
    },
    "www/CA_06065_Riverside_County.zip": {
      "checksum": "c3cd87c6f48313555bb7e65827d8918e"
    },
    "www/CA_06067_Sacramento_County.zip": {
      "checksum": "fa14f0d7116c1a97ec3f7e803d708f1d"
    },
    "www/CA_06069_San_Benito_County.zip": {
      "checksum": "5643d35bb3a4263e0a9c6689103b940e"
    },
    "www/CA_06071_San_Bernardino_County.zip": {
      "checksum": "abb10abe6448888b170167c0f5214ed8"
    },
    "www/CA_06073_San_Diego_County.zip": {
      "checksum": "bdcf7c54ec34de0971972098a569c353"
    },
    "www/CA_06075_San_Francisco_County.zip": {
      "checksum": "4a8679f7b11a5b50683d1d81d9efa59d"
    },
    "www/CA_06077_San_Joaquin_County.zip": {
      "checksum": "f13708d7709e290439a9332959613b4c"
    },
    "www/CA_06079_San_Luis_Obispo_County.zip": {
      "checksum": "1c0fc3f18bfb75089b91a9a9d6e6a114"
    },
    "www/CA_06081_San_Mateo_County.zip": {
      "checksum": "f37e6aee30bcb21e858b5112f46dfff4"
    },
    "www/CA_06083_Santa_Barbara_County.zip": {
      "checksum": "9c1fd23ddf14525fb004bee9a485e99f"
    },
    "www/CA_06085_Santa_Clara_County.zip": {
      "checksum": "f3a52dda99a2e7d800db84dac06b3cd7"
    },
    "www/CA_06087_Santa_Cruz_County.zip": {
      "checksum": "07cd505b7bb9d995dbebd8afb34bf374"
    },
    "www/CA_06089_Shasta_County.zip": {
      "checksum": "abc5bdc25f245e1bfd9cc113c299bd8b"
    },
    "www/CA_06091_Sierra_County.zip": {
      "checksum": "6149d04b87d2e541e4ea22f4474bc797"
    },
    "www/CA_06093_Siskiyou_County.zip": {
      "checksum": "c672bccc3304277ba8c4e7d2517e501a"
    },
    "www/CA_06095_Solano_County.zip": {
      "checksum": "9e281deac767841cf39697780051d7d1"
    },
    "www/CA_06097_Sonoma_County.zip": {
      "checksum": "00cda79bf74773bc3176a874be275bad"
    },
    "www/CA_06099_Stanislaus_County.zip": {
      "checksum": "f6a1c1937cd90da5b28e682ed9b45823"
    },
    "www/CA_06101_Sutter_County.zip": {
      "checksum": "0bc8dd47b5771f8ab9776d7c6ea49b40"
    },
    "www/CA_06103_Tehama_County.zip": {
      "checksum": "68b3235d9db7d05748d9dab5781b8bc4"
    },
    "www/CA_06105_Trinity_County.zip": {
      "checksum": "234aaa4632975cc3e53e20cdee97fad1"
    },
    "www/CA_06107_Tulare_County.zip": {
      "checksum": "74a13d869bf42b3ad7ccf1c1b82433c7"
    },
    "www/CA_06109_Tuolumne_County.zip": {
      "checksum": "5f7257ca911b3c370a6e474970b78da2"
    },
    "www/CA_06111_Ventura_County.zip": {
      "checksum": "0722f262c14a1f4d5d4a7fcb08d2e6a0"
    },
    "www/CA_06113_Yolo_County.zip": {
      "checksum": "25c9bf6db47746bbd8ee3722410f6ccd"
    },
    "www/CA_06115_Yuba_County.zip": {
      "checksum": "5f44c2b52a55a3f68a67f59b24e7f875"
    },
    "www/cl_program_eligible_properties.csv": {
      "checksum": "abc684a8138e731ec8fb406e3df79ab0"
    },
    "www/CO_08001_Adams_County.zip": {
      "checksum": "0b9c20eab97b5d783d6e822111e6c741"
    },
    "www/CO_08003_Alamosa_County.zip": {
      "checksum": "967f0f94dce9187567942a33af869ecc"
    },
    "www/CO_08005_Arapahoe_County.zip": {
      "checksum": "33b4f50088d0479c98ce1c20b47ee95e"
    },
    "www/CO_08007_Archuleta_County.zip": {
      "checksum": "c00b07af387797f5a2b47821263d0480"
    },
    "www/CO_08009_Baca_County.zip": {
      "checksum": "d5495dadc774f74336e0dcdf113ac45c"
    },
    "www/CO_08011_Bent_County.zip": {
      "checksum": "6234c951f2e30b6fc605be2e9f19a40a"
    },
    "www/CO_08013_Boulder_County.zip": {
      "checksum": "febdfeab0d1df35f5cc6ec37330c56e2"
    },
    "www/CO_08014_Broomfield_County.zip": {
      "checksum": "0ee732d878bd101c3e74e549779001ec"
    },
    "www/CO_08015_Chaffee_County.zip": {
      "checksum": "305afc8d03fd16745afd369e920347c0"
    },
    "www/CO_08017_Cheyenne_County.zip": {
      "checksum": "7005feda1a35fb77e6f6233b9148e1f3"
    },
    "www/CO_08019_Clear_Creek_County.zip": {
      "checksum": "f8e372dcbeb7262eb8ca6ea4f54ce760"
    },
    "www/CO_08021_Conejos_County.zip": {
      "checksum": "3c81bac48d13b8c4bba90a03d77270ae"
    },
    "www/CO_08023_Costilla_County.zip": {
      "checksum": "966ac13383cb63263fb904e5a35035bb"
    },
    "www/CO_08025_Crowley_County.zip": {
      "checksum": "0633c50ba9534e364fb5a7588d4088f0"
    },
    "www/CO_08027_Custer_County.zip": {
      "checksum": "0dab4d4f21ba2cd7f3a2463acd163f53"
    },
    "www/CO_08029_Delta_County.zip": {
      "checksum": "935d34fdd863952358ae905988069a67"
    },
    "www/CO_08031_Denver_County.zip": {
      "checksum": "21d989b2189fb8d9510c19ace471c929"
    },
    "www/CO_08033_Dolores_County.zip": {
      "checksum": "e14dc4df171a31257b93250e25e24e30"
    },
    "www/CO_08035_Douglas_County.zip": {
      "checksum": "9a7b5a1e4bfd037471cb643391e75c65"
    },
    "www/CO_08037_Eagle_County.zip": {
      "checksum": "94cb7b57f224f01f0464a760d8c1f75d"
    },
    "www/CO_08039_Elbert_County.zip": {
      "checksum": "9e007e9ab18a1505ffbeb3295a26db78"
    },
    "www/CO_08041_El_Paso_County.zip": {
      "checksum": "472b2b8c72fff716075dc1712b55bb6a"
    },
    "www/CO_08043_Fremont_County.zip": {
      "checksum": "fe4eb68d3ff54ec5de44c7e0bcdba7c2"
    },
    "www/CO_08045_Garfield_County.zip": {
      "checksum": "26528869ce9068a0473554850ac62326"
    },
    "www/CO_08047_Gilpin_County.zip": {
      "checksum": "95cc29607ca10a3343c2b58ec1992567"
    },
    "www/CO_08049_Grand_County.zip": {
      "checksum": "66104e30eb26e336f7aea01de264476b"
    },
    "www/CO_08051_Gunnison_County.zip": {
      "checksum": "7e55e08a13fd32884a20ee97be0dbb8b"
    },
    "www/CO_08053_Hinsdale_County.zip": {
      "checksum": "940826374a67de96195659ec99184fc2"
    },
    "www/CO_08055_Huerfano_County.zip": {
      "checksum": "c52afe9ee43e84eaeec85867790e8ae2"
    },
    "www/CO_08057_Jackson_County.zip": {
      "checksum": "0c08c9c6a8d80e50a01cbf89aacc9c33"
    },
    "www/CO_08059_Jefferson_County.zip": {
      "checksum": "ef4ea593bdb31e9c848adc8599a61c58"
    },
    "www/CO_08061_Kiowa_County.zip": {
      "checksum": "fd8116456a6f0e64a6fc713002be7425"
    },
    "www/CO_08063_Kit_Carson_County.zip": {
      "checksum": "ba2e06e21782637f0ea28e5a7aaa75e2"
    },
    "www/CO_08065_Lake_County.zip": {
      "checksum": "6f49b8a16d67a1d39eb759b4d8ab8f53"
    },
    "www/CO_08067_La_Plata_County.zip": {
      "checksum": "9008ad33591329204f429292e1d45b3f"
    },
    "www/CO_08069_Larimer_County.zip": {
      "checksum": "2d8373f403d847ba7ebe11773a8f034b"
    },
    "www/CO_08071_Las_Animas_County.zip": {
      "checksum": "478e39f791866a6a78ee280c54e6367e"
    },
    "www/CO_08073_Lincoln_County.zip": {
      "checksum": "89baa1bb343fc70654a7e216d35c9232"
    },
    "www/CO_08075_Logan_County.zip": {
      "checksum": "575ac81b2b3cd6243ea3f6e1d18d9747"
    },
    "www/CO_08077_Mesa_County.zip": {
      "checksum": "2cb080304421393041bf28d195eed85d"
    },
    "www/CO_08079_Mineral_County.zip": {
      "checksum": "6c9255b3d2442d5df81ab83dea6329c1"
    },
    "www/CO_08081_Moffat_County.zip": {
      "checksum": "9d1aece252d3feee0dbca16b30fd78b2"
    },
    "www/CO_08083_Montezuma_County.zip": {
      "checksum": "792a7332fc40513c6b5fd1ae034aa5f6"
    },
    "www/CO_08085_Montrose_County.zip": {
      "checksum": "0a8e0ec1b971487506e7c6e6d8512426"
    },
    "www/CO_08087_Morgan_County.zip": {
      "checksum": "c1cde730cf355a114e33b317d81ec23c"
    },
    "www/CO_08089_Otero_County.zip": {
      "checksum": "f695706dce3081c7261794cf484eec64"
    },
    "www/CO_08091_Ouray_County.zip": {
      "checksum": "6a1f5a74097bbb06921592ab8898d428"
    },
    "www/CO_08093_Park_County.zip": {
      "checksum": "0c5e7dd8183e9a9f885e4f0c79e268a5"
    },
    "www/CO_08095_Phillips_County.zip": {
      "checksum": "e9bdd963d3400a6413b0b24ae9243227"
    },
    "www/CO_08097_Pitkin_County.zip": {
      "checksum": "e80b8d4e05df4c559ed2719c0ed6b4e9"
    },
    "www/CO_08099_Prowers_County.zip": {
      "checksum": "044f1ef0074652b0f40d1cb943b121cc"
    },
    "www/CO_08101_Pueblo_County.zip": {
      "checksum": "0c825642ffdad6f1624f07d6c4a2c943"
    },
    "www/CO_08103_Rio_Blanco_County.zip": {
      "checksum": "0934b82a5fa2d9db686bbb076cceb9a0"
    },
    "www/CO_08105_Rio_Grande_County.zip": {
      "checksum": "76055d6eda2ca1a17f7dde8d2729fa1f"
    },
    "www/CO_08107_Routt_County.zip": {
      "checksum": "361b4777bea699f5b8dbd93fe4319258"
    },
    "www/CO_08109_Saguache_County.zip": {
      "checksum": "dd9c703102899eb0e83e13a8878030f3"
    },
    "www/CO_08111_San_Juan_County.zip": {
      "checksum": "2458552fc9ee317475b566aa42aabec7"
    },
    "www/CO_08113_San_Miguel_County.zip": {
      "checksum": "cc6cf6885cc162d41488a252133ecd10"
    },
    "www/CO_08115_Sedgwick_County.zip": {
      "checksum": "21b6088406c39e229392334f53e81dd2"
    },
    "www/CO_08117_Summit_County.zip": {
      "checksum": "f54d1eb2d40c689c912c72d8cca0adee"
    },
    "www/CO_08119_Teller_County.zip": {
      "checksum": "eb0c6ed9e55495a912cd25ec0a84d403"
    },
    "www/CO_08121_Washington_County.zip": {
      "checksum": "875685e4cbb5916e5a77657eefd55e1f"
    },
    "www/CO_08123_Weld_County.zip": {
      "checksum": "265f01494396419e77d6f6a3d4dd0e9b"
    },
    "www/CO_08125_Yuma_County.zip": {
      "checksum": "b9cf5680534fe726fe30356e4e8e2f69"
    },
    "www/CT_09001_Fairfield_County.zip": {
      "checksum": "ae8bf4685039d50360daf67de50758ff"
    },
    "www/CT_09003_Hartford_County.zip": {
      "checksum": "4637e5b14ce729fabdfde77bd6a86bdd"
    },
    "www/CT_09005_Litchfield_County.zip": {
      "checksum": "bec5ef43927cb51764a769c5cf61923f"
    },
    "www/CT_09007_Middlesex_County.zip": {
      "checksum": "f3c517bb1642b555022ca40cff6b49c0"
    },
    "www/CT_09009_New_Haven_County.zip": {
      "checksum": "77f5ea8469178fcb70300feb5e16508b"
    },
    "www/CT_09011_New_London_County.zip": {
      "checksum": "47212ecf5ce0c1eeae2d69a50b8515fb"
    },
    "www/CT_09013_Tolland_County.zip": {
      "checksum": "485407e465ace7c527a342048f8b32bc"
    },
    "www/CT_09015_Windham_County.zip": {
      "checksum": "19f5eae273c71ce7dda56ca294782cdc"
    },
    "www/DC_11001_District_of_Columbia.zip": {
      "checksum": "bb2af0dd3585df0c5fde1a48ec5da1a6"
    },
    "www/DE_10001_Kent_County.zip": {
      "checksum": "995984ba660748e6a9fb3f29e060b280"
    },
    "www/DE_10003_New_Castle_County.zip": {
      "checksum": "085bd04b1842f013013fa2e94a66fea8"
    },
    "www/DE_10005_Sussex_County.zip": {
      "checksum": "ba2528bd5eb2d66628f773898c75c891"
    },
    "www/FL_12001_Alachua_County.zip": {
      "checksum": "049676764ead816eda919ca5d0be2fe0"
    },
    "www/FL_12003_Baker_County.zip": {
      "checksum": "487330b4e054c845bc11d60f9fe5290e"
    },
    "www/FL_12005_Bay_County.zip": {
      "checksum": "852baa6ed57f0a5f17790f0fbf3248f6"
    },
    "www/FL_12007_Bradford_County.zip": {
      "checksum": "f1a3100badeaded009e4897b2b0d863d"
    },
    "www/FL_12009_Brevard_County.zip": {
      "checksum": "d09cef273a99460cc544c4c435cb1872"
    },
    "www/FL_12011_Broward_County.zip": {
      "checksum": "4927ba3cb9803582cd1f94057b98ce0a"
    },
    "www/FL_12013_Calhoun_County.zip": {
      "checksum": "b72479f20b6741b8a2fcf8d8a72d3c76"
    },
    "www/FL_12015_Charlotte_County.zip": {
      "checksum": "bd7036dce640c6d2f170daa47d6bc0e0"
    },
    "www/FL_12017_Citrus_County.zip": {
      "checksum": "692f89d144c7c3274ec8c52d3cb8466e"
    },
    "www/FL_12019_Clay_County.zip": {
      "checksum": "f58e73b385bc3385f51845ffe08f5d1b"
    },
    "www/FL_12021_Collier_County.zip": {
      "checksum": "499e0bed3273756f31c528b212ecaea8"
    },
    "www/FL_12023_Columbia_County.zip": {
      "checksum": "5240f45490d90d9e02ccc3ff9b69545a"
    },
    "www/FL_12027_DeSoto_County.zip": {
      "checksum": "fdd6344305e99ef367c86f5dcd169ff8"
    },
    "www/FL_12029_Dixie_County.zip": {
      "checksum": "aaed9b7901cd931b7c352f9bf93e727e"
    },
    "www/FL_12031_Duval_County.zip": {
      "checksum": "a353b90ada36e5b8ee0a1bc8cad8862c"
    },
    "www/FL_12033_Escambia_County.zip": {
      "checksum": "cc97f5d8c2bd103e68c0e2983e8e71df"
    },
    "www/FL_12035_Flagler_County.zip": {
      "checksum": "5164ddbfdd5101a0d7c6dc30e9f5a8ea"
    },
    "www/FL_12037_Franklin_County.zip": {
      "checksum": "0db01eaf90fcbb7b80aa75620f99d7f5"
    },
    "www/FL_12039_Gadsden_County.zip": {
      "checksum": "8f6941d20ae058985d10664b3f71a822"
    },
    "www/FL_12041_Gilchrist_County.zip": {
      "checksum": "ee34f52e54a685cc6256b3e4a651eced"
    },
    "www/FL_12043_Glades_County.zip": {
      "checksum": "8def6c7d7e24dbd728c3eb0caefc887a"
    },
    "www/FL_12045_Gulf_County.zip": {
      "checksum": "fa97b432fa412f78d57b49f5e2b2dc74"
    },
    "www/FL_12047_Hamilton_County.zip": {
      "checksum": "52ffe834bccfdbfb40e0a3213c8b94e5"
    },
    "www/FL_12049_Hardee_County.zip": {
      "checksum": "dc99a3d1724adb6d2db4896b5007616e"
    },
    "www/FL_12051_Hendry_County.zip": {
      "checksum": "072f5aa982c904140292fbb9466fc99f"
    },
    "www/FL_12053_Hernando_County.zip": {
      "checksum": "117d5e4f48526df4633825bbcbec58b2"
    },
    "www/FL_12055_Highlands_County.zip": {
      "checksum": "a7378b6a1a17b086b93337cc10716c9a"
    },
    "www/FL_12057_Hillsborough_County.zip": {
      "checksum": "44a3a9c80342ec60352ebd36acfd7d3f"
    },
    "www/FL_12059_Holmes_County.zip": {
      "checksum": "b94a263df328ebf57f9a189794dff528"
    },
    "www/FL_12061_Indian_River_County.zip": {
      "checksum": "7e87a4eef674ae4ee828239289bd3c7c"
    },
    "www/FL_12063_Jackson_County.zip": {
      "checksum": "d3284d2a37df8401841cdc56293afff6"
    },
    "www/FL_12065_Jefferson_County.zip": {
      "checksum": "fbd45de1bd2f993c47e93bdffa2dca6c"
    },
    "www/FL_12067_Lafayette_County.zip": {
      "checksum": "716dc1415d4a081b5c5624c6066ba3d1"
    },
    "www/FL_12069_Lake_County.zip": {
      "checksum": "73547109a62aa6de41211e8936bf4e23"
    },
    "www/FL_12071_Lee_County.zip": {
      "checksum": "1a5cf034fbf10e7c25d53f3411d18f7b"
    },
    "www/FL_12073_Leon_County.zip": {
      "checksum": "f604ccfc0dc0f16c67b07b3dc25e2de2"
    },
    "www/FL_12075_Levy_County.zip": {
      "checksum": "b6fef2731475ad7a8f087476ea7c51ee"
    },
    "www/FL_12077_Liberty_County.zip": {
      "checksum": "1a6d10e43a85d4422db0aeea536a44fc"
    },
    "www/FL_12079_Madison_County.zip": {
      "checksum": "524538bc6a53ee72b3b0056e11fb9fa2"
    },
    "www/FL_12081_Manatee_County.zip": {
      "checksum": "65e9a3e2a554bd2742980d836451518a"
    },
    "www/FL_12083_Marion_County.zip": {
      "checksum": "cdcd779a553ddb5c6ea9c55d588c84c9"
    },
    "www/FL_12085_Martin_County.zip": {
      "checksum": "6f2d0abec27d44bf4056385d5e8bf6e3"
    },
    "www/FL_12087_Monroe_County.zip": {
      "checksum": "7ed7ac8bbaf073a964a5ffdcefff0fa8"
    },
    "www/FL_12089_Nassau_County.zip": {
      "checksum": "b8dab38b13acb796b44c458c86785f50"
    },
    "www/FL_12091_Okaloosa_County.zip": {
      "checksum": "909e758419a70c4641d79123f4e5dcae"
    },
    "www/FL_12093_Okeechobee_County.zip": {
      "checksum": "86a09f66d8d398f2c5566d5fd5c98700"
    },
    "www/FL_12095_Orange_County.zip": {
      "checksum": "c8c5d17d4f1a1ed2989501752cd5d61d"
    },
    "www/FL_12097_Osceola_County.zip": {
      "checksum": "20976f42479eaf80cd2185be1771e007"
    },
    "www/FL_12099_Palm_Beach_County.zip": {
      "checksum": "671f3ef359f24da09366b4b6b40e4516"
    },
    "www/FL_12101_Pasco_County.zip": {
      "checksum": "ebb7da6b8b6fd9a6e96f1104d7631909"
    },
    "www/FL_12103_Pinellas_County.zip": {
      "checksum": "77fd9b083096b4f8349c5f456d18c72c"
    },
    "www/FL_12105_Polk_County.zip": {
      "checksum": "12b4dd4d2c060ed456db9aaa89849d92"
    },
    "www/FL_12107_Putnam_County.zip": {
      "checksum": "3692442dc68ecf0638fd4669b484402b"
    },
    "www/FL_12109_St._Johns_County.zip": {
      "checksum": "cba9b55aeeaa02e95a40505b8403c609"
    },
    "www/FL_12111_St._Lucie_County.zip": {
      "checksum": "d12df61dd36db4369bb44acf7bba43a9"
    },
    "www/FL_12113_Santa_Rosa_County.zip": {
      "checksum": "d68848b683acb141e275c00d9b961de0"
    },
    "www/FL_12115_Sarasota_County.zip": {
      "checksum": "61d625bd239951ddd3b83a822b3fb453"
    },
    "www/FL_12117_Seminole_County.zip": {
      "checksum": "1c3133d80bc1bba08b65cb6f814cd396"
    },
    "www/FL_12119_Sumter_County.zip": {
      "checksum": "2e882fa32d57e61cde70cd5c57ea47d4"
    },
    "www/FL_12121_Suwannee_County.zip": {
      "checksum": "f90b552535576bb84d730de88fe31fca"
    },
    "www/FL_12123_Taylor_County.zip": {
      "checksum": "c97a1d63071481385258090ca59a7251"
    },
    "www/FL_12125_Union_County.zip": {
      "checksum": "9be05da8a9ede0c2bd7faeef205c5af9"
    },
    "www/FL_12127_Volusia_County.zip": {
      "checksum": "9e03642b774c289b970cc87dca6e7b22"
    },
    "www/FL_12129_Wakulla_County.zip": {
      "checksum": "edafd9a7797554b80843eaa9a4f5f162"
    },
    "www/FL_12131_Walton_County.zip": {
      "checksum": "766396f9a79d34c1dc14a0fe462499b7"
    },
    "www/FL_12133_Washington_County.zip": {
      "checksum": "b67b9866246c03026c09fb65a08d5190"
    },
    "www/GA_13001_Appling_County.zip": {
      "checksum": "ffc9c6f07ba59df44d5556911e11b6fb"
    },
    "www/GA_13003_Atkinson_County.zip": {
      "checksum": "8f07f18ffb275a5b5fb3d5d1f3d1b0be"
    },
    "www/GA_13005_Bacon_County.zip": {
      "checksum": "e8ce41afb5af95e97b189deaba4fa568"
    },
    "www/GA_13007_Baker_County.zip": {
      "checksum": "1d81d3db291c4460cff56463c2b53608"
    },
    "www/GA_13009_Baldwin_County.zip": {
      "checksum": "32ecad8aa724244a807d9c12f43b85d9"
    },
    "www/GA_13011_Banks_County.zip": {
      "checksum": "f43b020ec97b0d5516a30f404fae60c2"
    },
    "www/GA_13013_Barrow_County.zip": {
      "checksum": "bf37c533fde662bb8053286336ba5fd2"
    },
    "www/GA_13015_Bartow_County.zip": {
      "checksum": "1b0c186e9aac5ecab5f1cd7ce9630a51"
    },
    "www/GA_13017_Ben_Hill_County.zip": {
      "checksum": "37d716ff2796de9140218af46f9c5756"
    },
    "www/GA_13019_Berrien_County.zip": {
      "checksum": "57bb79acdae68c709a327f91acfa31c9"
    },
    "www/GA_13021_Bibb_County.zip": {
      "checksum": "9380b3b3e15b60de5e07e466d05909da"
    },
    "www/GA_13023_Bleckley_County.zip": {
      "checksum": "cb523a62bfea44e4e06a084143f415bb"
    },
    "www/GA_13025_Brantley_County.zip": {
      "checksum": "76093fc4efd0d171e9297c45c208ab2b"
    },
    "www/GA_13027_Brooks_County.zip": {
      "checksum": "b2d42459bbfb0aa42dc4ec06be55dcc3"
    },
    "www/GA_13029_Bryan_County.zip": {
      "checksum": "63fadf25cf045b5c9ed1898aa24fc172"
    },
    "www/GA_13031_Bulloch_County.zip": {
      "checksum": "cf9d640da5fe715e52b8af0829ed5693"
    },
    "www/GA_13033_Burke_County.zip": {
      "checksum": "ec842682ebd49dc46cbc1f3bee7313f4"
    },
    "www/GA_13035_Butts_County.zip": {
      "checksum": "4b0bb07c1eddf3c5503d27b7ab616ab5"
    },
    "www/GA_13037_Calhoun_County.zip": {
      "checksum": "556a1bb405d54fd72e36224e5d6aaa83"
    },
    "www/GA_13039_Camden_County.zip": {
      "checksum": "fd405a3a338d90aa443f27ed733c182d"
    },
    "www/GA_13043_Candler_County.zip": {
      "checksum": "3d7d504b43d35cbe4a623d1b9bc5779e"
    },
    "www/GA_13045_Carroll_County.zip": {
      "checksum": "2565df484e212f6d3a4bdf849b61781e"
    },
    "www/GA_13047_Catoosa_County.zip": {
      "checksum": "3e7386b3bbdd434296d4d544a1fc0f83"
    },
    "www/GA_13049_Charlton_County.zip": {
      "checksum": "dcb2d965d7fb0eb2e87b7e9fa6eebdeb"
    },
    "www/GA_13051_Chatham_County.zip": {
      "checksum": "05c6652764c3f08dbd11f1fe81fdba30"
    },
    "www/GA_13053_Chattahoochee_County.zip": {
      "checksum": "07cbb32e0d190e9819493dd825066db7"
    },
    "www/GA_13055_Chattooga_County.zip": {
      "checksum": "2d2203927f90ce56f58f0e00cb6b636b"
    },
    "www/GA_13057_Cherokee_County.zip": {
      "checksum": "66a08cabd43d688f5570b475ade81cfa"
    },
    "www/GA_13059_Clarke_County.zip": {
      "checksum": "ca058c41c62c9760076eb120262adb15"
    },
    "www/GA_13061_Clay_County.zip": {
      "checksum": "f42ca8ffb2131f462d2c7766f0ededde"
    },
    "www/GA_13063_Clayton_County.zip": {
      "checksum": "3b2ab5dd255cfff2c458f665d84e4dcb"
    },
    "www/GA_13065_Clinch_County.zip": {
      "checksum": "8e24040edc7640322cae3dd0181ec857"
    },
    "www/GA_13067_Cobb_County.zip": {
      "checksum": "2ae444c6c33b1c41a1c5a31af507951f"
    },
    "www/GA_13069_Coffee_County.zip": {
      "checksum": "76a34aebf71f3b6a48219f2c723c46af"
    },
    "www/GA_13071_Colquitt_County.zip": {
      "checksum": "85896819315fae86f4bd0da479013d01"
    },
    "www/GA_13073_Columbia_County.zip": {
      "checksum": "6f6f44b311ddafd7d6e8c16b7c34836c"
    },
    "www/GA_13075_Cook_County.zip": {
      "checksum": "f606a347065f0b8e7f631d4e0fa32ca4"
    },
    "www/GA_13077_Coweta_County.zip": {
      "checksum": "855e2215cea788bccb2774a734773ddf"
    },
    "www/GA_13079_Crawford_County.zip": {
      "checksum": "762f24d2de82d867e49c2ac20bcd2460"
    },
    "www/GA_13081_Crisp_County.zip": {
      "checksum": "a685a7c8bf3b34269e4e9fcdd0b871de"
    },
    "www/GA_13083_Dade_County.zip": {
      "checksum": "1a075471a3791af1ccf4e0a7d68b72a4"
    },
    "www/GA_13085_Dawson_County.zip": {
      "checksum": "c083e5000373734d18394417909385e6"
    },
    "www/GA_13087_Decatur_County.zip": {
      "checksum": "c36594948b44d1741900c1f8768250b3"
    },
    "www/GA_13089_DeKalb_County.zip": {
      "checksum": "7f4dbed1b01c47681561bb7c7276e7c9"
    },
    "www/GA_13091_Dodge_County.zip": {
      "checksum": "11b31640577b8d1d838170208353a507"
    },
    "www/GA_13093_Dooly_County.zip": {
      "checksum": "a7a2268f505c96947b0069677907ae50"
    },
    "www/GA_13095_Dougherty_County.zip": {
      "checksum": "da654114dabf1e9245d6312c4f31278d"
    },
    "www/GA_13097_Douglas_County.zip": {
      "checksum": "5de648049deb93d0fdbaa8bd9b713c37"
    },
    "www/GA_13099_Early_County.zip": {
      "checksum": "58083e2b8b441f5ff0f8a6021fa41b6a"
    },
    "www/GA_13101_Echols_County.zip": {
      "checksum": "03ed99a7e60e1079ee84b583cee9abb1"
    },
    "www/GA_13103_Effingham_County.zip": {
      "checksum": "e828d6594c1e6fcb68f0ba81b0648470"
    },
    "www/GA_13105_Elbert_County.zip": {
      "checksum": "6a030be65f1118921edb73445084df42"
    },
    "www/GA_13107_Emanuel_County.zip": {
      "checksum": "746c720b8b14848a79deec79cb5d7550"
    },
    "www/GA_13109_Evans_County.zip": {
      "checksum": "3c4a0e58f824d4689d6ac03054af8d7d"
    },
    "www/GA_13111_Fannin_County.zip": {
      "checksum": "1acdf0068da0f582a631f423cb320ff2"
    },
    "www/GA_13113_Fayette_County.zip": {
      "checksum": "683ca8073adff98386cd4136333c0b8b"
    },
    "www/GA_13115_Floyd_County.zip": {
      "checksum": "aa3fec0f1cf58b6957f873803dd10001"
    },
    "www/GA_13117_Forsyth_County.zip": {
      "checksum": "9ef6eca3da148b0fa21fce9bcd821bc1"
    },
    "www/GA_13119_Franklin_County.zip": {
      "checksum": "9df48408d0510c3bedb452d51a48c4b0"
    },
    "www/GA_13121_Fulton_County.zip": {
      "checksum": "2e36c198fd1eb27727cbf5fe001aba3f"
    },
    "www/GA_13123_Gilmer_County.zip": {
      "checksum": "6eb4b8533591f2e520e5e7624e864609"
    },
    "www/GA_13125_Glascock_County.zip": {
      "checksum": "d926eae9651391f94eb9869ca4b8edab"
    },
    "www/GA_13127_Glynn_County.zip": {
      "checksum": "fe1e4434290246ae0ab5eb657d177607"
    },
    "www/GA_13129_Gordon_County.zip": {
      "checksum": "55d42294eba8ee4bcca1e5a4c9382470"
    },
    "www/GA_13131_Grady_County.zip": {
      "checksum": "ee49ee8ac90357f7bc580db1f327c9ce"
    },
    "www/GA_13133_Greene_County.zip": {
      "checksum": "0c335ed2a74d1407662b7cecbd5ef9f2"
    },
    "www/GA_13135_Gwinnett_County.zip": {
      "checksum": "c9a27596acce2b652c23723719cfca68"
    },
    "www/GA_13137_Habersham_County.zip": {
      "checksum": "8df13282f52b8ea31328a8a4b315b328"
    },
    "www/GA_13139_Hall_County.zip": {
      "checksum": "8838f3c1512749b9e04faa77403421c6"
    },
    "www/GA_13141_Hancock_County.zip": {
      "checksum": "52bdcb61f07aee38ee8424eb4796396d"
    },
    "www/GA_13143_Haralson_County.zip": {
      "checksum": "aa15ab02aef975988187ef1ca78fe1d1"
    },
    "www/GA_13145_Harris_County.zip": {
      "checksum": "58b032f81126ea9922c02d63c242b1e5"
    },
    "www/GA_13147_Hart_County.zip": {
      "checksum": "ca804ac6b7098299066f098c3518a795"
    },
    "www/GA_13149_Heard_County.zip": {
      "checksum": "ca3495afb41e259363f799fb86725126"
    },
    "www/GA_13151_Henry_County.zip": {
      "checksum": "0216ab49eb7f4ef4dd94d8c47849e210"
    },
    "www/GA_13153_Houston_County.zip": {
      "checksum": "3d60a83854f5b71a40e5b37c3cf9a38c"
    },
    "www/GA_13155_Irwin_County.zip": {
      "checksum": "71137ffa3925b14288908b1d672ad103"
    },
    "www/GA_13157_Jackson_County.zip": {
      "checksum": "37d16e550825a918bc2da9ec311e7586"
    },
    "www/GA_13159_Jasper_County.zip": {
      "checksum": "69053cc081b463f60e60d577a7ebbb73"
    },
    "www/GA_13161_Jeff_Davis_County.zip": {
      "checksum": "7c26e86600ec1708603118a72ff425c1"
    },
    "www/GA_13163_Jefferson_County.zip": {
      "checksum": "de9ba15ab8e77dcd262ad65da42568ef"
    },
    "www/GA_13165_Jenkins_County.zip": {
      "checksum": "832e4797d0d6239ecb9b437663492452"
    },
    "www/GA_13167_Johnson_County.zip": {
      "checksum": "598d453acbb2b270e137dba0b00ad22c"
    },
    "www/GA_13169_Jones_County.zip": {
      "checksum": "4db31cd5c075176c93030db64f65cde5"
    },
    "www/GA_13171_Lamar_County.zip": {
      "checksum": "51828f28434de32b225a27afc1f48964"
    },
    "www/GA_13173_Lanier_County.zip": {
      "checksum": "0540c035d366142ecc64d3e0d4a9c250"
    },
    "www/GA_13175_Laurens_County.zip": {
      "checksum": "80b0f2194fb27f2fb34b2afde0279046"
    },
    "www/GA_13177_Lee_County.zip": {
      "checksum": "443d45ba39676580dc500cdb08904fab"
    },
    "www/GA_13179_Liberty_County.zip": {
      "checksum": "7d4a885aed2b83f3fe4938a3a3083b1c"
    },
    "www/GA_13181_Lincoln_County.zip": {
      "checksum": "9fb592dee34381d087b053f5064cc070"
    },
    "www/GA_13183_Long_County.zip": {
      "checksum": "a3aa84e160e942d46d2d8f1f4fdf2fee"
    },
    "www/GA_13185_Lowndes_County.zip": {
      "checksum": "7e1e5d0a63a64cb62417c4679f0db525"
    },
    "www/GA_13187_Lumpkin_County.zip": {
      "checksum": "eaacfc5fa915fcf29cba6658c1ade8f0"
    },
    "www/GA_13189_McDuffie_County.zip": {
      "checksum": "aa8ffc5b76cb068abd9a4e2e6d8c770b"
    },
    "www/GA_13191_McIntosh_County.zip": {
      "checksum": "7378bac08cda7b5e7dea537ba18cb4ea"
    },
    "www/GA_13193_Macon_County.zip": {
      "checksum": "97e535b642834b97987eff96dcb9c355"
    },
    "www/GA_13195_Madison_County.zip": {
      "checksum": "4d7ccd16d33dc65f4f00d97ccde16b03"
    },
    "www/GA_13197_Marion_County.zip": {
      "checksum": "9d8e4d4319746019b6a41631dade00ab"
    },
    "www/GA_13199_Meriwether_County.zip": {
      "checksum": "7f42c7cfb51410c1a5510081899cf6a3"
    },
    "www/GA_13201_Miller_County.zip": {
      "checksum": "2b9e3b5397cb08859264bbdd68ed106d"
    },
    "www/GA_13205_Mitchell_County.zip": {
      "checksum": "0d60fa08281242c02b2cabf3d9c0ae35"
    },
    "www/GA_13207_Monroe_County.zip": {
      "checksum": "fff4f7f480a4cfe6a57127c3ed093cd5"
    },
    "www/GA_13209_Montgomery_County.zip": {
      "checksum": "786256e7387785dd31da944f4cf849f3"
    },
    "www/GA_13211_Morgan_County.zip": {
      "checksum": "864251b252c2f097cebdbafc295d0463"
    },
    "www/GA_13213_Murray_County.zip": {
      "checksum": "28138d3ba5ffe0f275990f7a6a7036b2"
    },
    "www/GA_13215_Muscogee_County.zip": {
      "checksum": "edd03e2e513dc509ee459e3a4ea1809f"
    },
    "www/GA_13217_Newton_County.zip": {
      "checksum": "0635fb327578472626a8cb2e321f91b8"
    },
    "www/GA_13219_Oconee_County.zip": {
      "checksum": "7742e2ffd4a193f6b3180573bc11ca95"
    },
    "www/GA_13221_Oglethorpe_County.zip": {
      "checksum": "809da1e967e1217065ce44e118c51abb"
    },
    "www/GA_13223_Paulding_County.zip": {
      "checksum": "a88ab168d98df2da978349e3914ec6ac"
    },
    "www/GA_13225_Peach_County.zip": {
      "checksum": "b27ba73c26ab841fbda66d3ac8c3f6d4"
    },
    "www/GA_13227_Pickens_County.zip": {
      "checksum": "4c063b483ebd10827bf1bcd1ce1a8791"
    },
    "www/GA_13229_Pierce_County.zip": {
      "checksum": "5518d9aff93332f1c6be98073f130df6"
    },
    "www/GA_13231_Pike_County.zip": {
      "checksum": "737df1ccffc8ab65b71e54a6a4228541"
    },
    "www/GA_13233_Polk_County.zip": {
      "checksum": "829e56d00658ee1af509651fee5a5579"
    },
    "www/GA_13235_Pulaski_County.zip": {
      "checksum": "3be6915b0332a0548f87bd9c7d5933e2"
    },
    "www/GA_13237_Putnam_County.zip": {
      "checksum": "8ad561c5625e2e47bf150992907e53dc"
    },
    "www/GA_13239_Quitman_County.zip": {
      "checksum": "86a746c63c971cbd5c025d4e4ee83f0b"
    },
    "www/GA_13241_Rabun_County.zip": {
      "checksum": "c3be3336b704d4dcb1f044954524076c"
    },
    "www/GA_13243_Randolph_County.zip": {
      "checksum": "a1ab14fb61500825e9ab8c738d24aa3f"
    },
    "www/GA_13245_Richmond_County.zip": {
      "checksum": "ed8c63e47068768b562733d5d360ec96"
    },
    "www/GA_13247_Rockdale_County.zip": {
      "checksum": "2824731ba17f8696b1288fb0a1b68175"
    },
    "www/GA_13249_Schley_County.zip": {
      "checksum": "982311b582b62c5939658df731a0f8f3"
    },
    "www/GA_13251_Screven_County.zip": {
      "checksum": "1429ef318874b56d47f2ab46c7c8228f"
    },
    "www/GA_13253_Seminole_County.zip": {
      "checksum": "d18bdb8eab807f1b570bd12e40cc67f0"
    },
    "www/GA_13255_Spalding_County.zip": {
      "checksum": "dcb936212a5b3c45d65e2166edddfc2e"
    },
    "www/GA_13257_Stephens_County.zip": {
      "checksum": "43fc0b970d4ecf6e152cd137cba6d389"
    },
    "www/GA_13259_Stewart_County.zip": {
      "checksum": "58b348f5a73bb74364eac96ac9a3d203"
    },
    "www/GA_13261_Sumter_County.zip": {
      "checksum": "732dfcf11e348a16fcf79db197857dce"
    },
    "www/GA_13263_Talbot_County.zip": {
      "checksum": "8718eb9e4d9b071a8ac00f5ba762e1b7"
    },
    "www/GA_13265_Taliaferro_County.zip": {
      "checksum": "367b7bd89edfb98d2726849244179007"
    },
    "www/GA_13267_Tattnall_County.zip": {
      "checksum": "12c8b254d812f623d77b87f94161c83e"
    },
    "www/GA_13269_Taylor_County.zip": {
      "checksum": "d5c4de6f0f691b417d05a510dbc2f9b1"
    },
    "www/GA_13271_Telfair_County.zip": {
      "checksum": "af9e09b01c356ab7aaf5419c41f010a9"
    },
    "www/GA_13273_Terrell_County.zip": {
      "checksum": "b47b31889e8c4931d72b4d4207f4c5b1"
    },
    "www/GA_13275_Thomas_County.zip": {
      "checksum": "67c852f782d47eb0224954e6e33b8d90"
    },
    "www/GA_13277_Tift_County.zip": {
      "checksum": "25ad27106d9fcecf9190d75fdaab9fd9"
    },
    "www/GA_13279_Toombs_County.zip": {
      "checksum": "b6a10fc16bae246e606375d646454346"
    },
    "www/GA_13281_Towns_County.zip": {
      "checksum": "ef98cc167d8fac9f03431494f31e8d08"
    },
    "www/GA_13283_Treutlen_County.zip": {
      "checksum": "bd12a8295a5eb8a7ccf44dd47c69372f"
    },
    "www/GA_13285_Troup_County.zip": {
      "checksum": "09e7713df85b651c15edcd0c664a47f8"
    },
    "www/GA_13287_Turner_County.zip": {
      "checksum": "9a1edda4f769f1583a92928cd9d6207c"
    },
    "www/GA_13289_Twiggs_County.zip": {
      "checksum": "9f74541e709631f427906c32617169ef"
    },
    "www/GA_13291_Union_County.zip": {
      "checksum": "96fe1d37c1adcaaa0a7c881a1a1a9383"
    },
    "www/GA_13293_Upson_County.zip": {
      "checksum": "9901fe170a1b7b0c78c3188d2f57bc79"
    },
    "www/GA_13295_Walker_County.zip": {
      "checksum": "1907b6d0bcdfe39ef3c94360e6b201e2"
    },
    "www/GA_13297_Walton_County.zip": {
      "checksum": "fe688a8ac378e86a2ecd7c08547b7d7e"
    },
    "www/GA_13299_Ware_County.zip": {
      "checksum": "f24074ca91dd70576b7a2c189a38a479"
    },
    "www/GA_13301_Warren_County.zip": {
      "checksum": "02465dbd31b253765b198c86625e86fe"
    },
    "www/GA_13303_Washington_County.zip": {
      "checksum": "b34be936d6f89e33bd4491b9828dc4e0"
    },
    "www/GA_13305_Wayne_County.zip": {
      "checksum": "d53ad40c096bb6a1d9f13b34a1089fb5"
    },
    "www/GA_13307_Webster_County.zip": {
      "checksum": "6abf5600483e78a51e403855208435fd"
    },
    "www/GA_13309_Wheeler_County.zip": {
      "checksum": "36b09f2717c0cfbd535ab17d2ae7c1ac"
    },
    "www/GA_13311_White_County.zip": {
      "checksum": "c02c89727bb47bb5a948d1334e25fb27"
    },
    "www/GA_13313_Whitfield_County.zip": {
      "checksum": "fabde9ffeae527f8a086b09637a956f4"
    },
    "www/GA_13315_Wilcox_County.zip": {
      "checksum": "9760380bbc0dd33f2676824779b4b18c"
    },
    "www/GA_13317_Wilkes_County.zip": {
      "checksum": "06e44d901ee2d225be5257c0970b1c6d"
    },
    "www/GA_13319_Wilkinson_County.zip": {
      "checksum": "ef1a86a5fab222624e90522de58fbb5a"
    },
    "www/GA_13321_Worth_County.zip": {
      "checksum": "9f7fae9844747ea075868077ecf0bdab"
    },
    "www/HI_15001_Hawaii_County.zip": {
      "checksum": "ab5d39cd3959e3074c5e5596cf2cc266"
    },
    "www/HI_15003_Honolulu_County.zip": {
      "checksum": "389ff15c6434b6b7e3d3eb8db468da7b"
    },
    "www/HI_15007_Kauai_County.zip": {
      "checksum": "74c3197cce2b45c10b3b74cba8a2a99b"
    },
    "www/HI_15009_Maui_County.zip": {
      "checksum": "7bb6266a30f1754d50f580c02c5271cf"
    },
    "www/IA_19001_Adair_County.zip": {
      "checksum": "2e9ccd9c72d7297256d356b319c6dbf5"
    },
    "www/IA_19003_Adams_County.zip": {
      "checksum": "a00b82bcdf4a60581c40873bb60999a6"
    },
    "www/IA_19005_Allamakee_County.zip": {
      "checksum": "c9a18387e066cd37c3180cf494723329"
    },
    "www/IA_19007_Appanoose_County.zip": {
      "checksum": "5fb8e953fd1d624ab9f8089b0f64a0f6"
    },
    "www/IA_19009_Audubon_County.zip": {
      "checksum": "5658b6868c4750ae94f47091ccf2ae6c"
    },
    "www/IA_19011_Benton_County.zip": {
      "checksum": "0e7d9139c53cdbd9b4f2cea1287501c6"
    },
    "www/IA_19013_Black_Hawk_County.zip": {
      "checksum": "e2da59d9e967e910451477ebb9027cd7"
    },
    "www/IA_19015_Boone_County.zip": {
      "checksum": "6bcb7c0f5f65c0d35b12d81985f72d63"
    },
    "www/IA_19017_Bremer_County.zip": {
      "checksum": "8cd7154177f6d9ba2075733cfedffa0c"
    },
    "www/IA_19019_Buchanan_County.zip": {
      "checksum": "9cf63ca1502440424abd98d1dfc22c9a"
    },
    "www/IA_19021_Buena_Vista_County.zip": {
      "checksum": "699c26be383a26127f0caf55ce4b1b09"
    },
    "www/IA_19023_Butler_County.zip": {
      "checksum": "7197edaeddf32988105f67c9e47e642b"
    },
    "www/IA_19025_Calhoun_County.zip": {
      "checksum": "f8ae6086bfba512e6cf3dfac8c5a4e24"
    },
    "www/IA_19027_Carroll_County.zip": {
      "checksum": "cfd966398aafe6a9a688dd897214aff7"
    },
    "www/IA_19029_Cass_County.zip": {
      "checksum": "71a02565fbd1bbfdd207c4eac25584cc"
    },
    "www/IA_19031_Cedar_County.zip": {
      "checksum": "04001a966b34371651e801ed2085ea59"
    },
    "www/IA_19033_Cerro_Gordo_County.zip": {
      "checksum": "f77826b2a979bb8ca8e2843f9c9646b9"
    },
    "www/IA_19035_Cherokee_County.zip": {
      "checksum": "c3fbd362961334267bf2eafb50533041"
    },
    "www/IA_19037_Chickasaw_County.zip": {
      "checksum": "bb4b7b23e38babbbe2f29925e121c0da"
    },
    "www/IA_19039_Clarke_County.zip": {
      "checksum": "bd2d7a30c6306da2aab80a0a5e96511a"
    },
    "www/IA_19041_Clay_County.zip": {
      "checksum": "2a8c89cc3858df410a8336e5537ba85d"
    },
    "www/IA_19043_Clayton_County.zip": {
      "checksum": "0d95feb504cac7234b59676aa52f4086"
    },
    "www/IA_19045_Clinton_County.zip": {
      "checksum": "bb0c8766f33e5040458593a6fe7babdb"
    },
    "www/IA_19047_Crawford_County.zip": {
      "checksum": "105fca873de6a78ed0f5da868635d667"
    },
    "www/IA_19049_Dallas_County.zip": {
      "checksum": "9201d2a9fe0508c555b8cf45a78c7db0"
    },
    "www/IA_19051_Davis_County.zip": {
      "checksum": "db9baf2796cd49239278897ab0bf644e"
    },
    "www/IA_19053_Decatur_County.zip": {
      "checksum": "878926ec462ab9837b1e07f08a73444c"
    },
    "www/IA_19055_Delaware_County.zip": {
      "checksum": "d772e9433da2aace34cc16805f6d743c"
    },
    "www/IA_19057_Des_Moines_County.zip": {
      "checksum": "cae4eb5f62350976d523b5505fdd17d0"
    },
    "www/IA_19059_Dickinson_County.zip": {
      "checksum": "782262e1e7e065db15ed86f2a04f0597"
    },
    "www/IA_19061_Dubuque_County.zip": {
      "checksum": "24a0b9fd682127335d7b1bbdbae8f4d8"
    },
    "www/IA_19063_Emmet_County.zip": {
      "checksum": "ff54940c163516aa177894d57eb83992"
    },
    "www/IA_19065_Fayette_County.zip": {
      "checksum": "4b20282dff1fbd0d2e635b69733dc26d"
    },
    "www/IA_19067_Floyd_County.zip": {
      "checksum": "5de5b6189fc640ee74433ab2fd9e6396"
    },
    "www/IA_19069_Franklin_County.zip": {
      "checksum": "cd92fa8cdf4f5fb868b61d5400c6d2b2"
    },
    "www/IA_19071_Fremont_County.zip": {
      "checksum": "74ffdaedb9d76ad7893bd6ad0e9c5f2a"
    },
    "www/IA_19073_Greene_County.zip": {
      "checksum": "4396c41464b57aeae1a3e6f50260c832"
    },
    "www/IA_19075_Grundy_County.zip": {
      "checksum": "1634c484f12728903dfbe78c9fb1e26c"
    },
    "www/IA_19077_Guthrie_County.zip": {
      "checksum": "6e3db2704425b984fa02869ba19c96fa"
    },
    "www/IA_19079_Hamilton_County.zip": {
      "checksum": "a46fae1d056f19a173e7f8d2889d47f4"
    },
    "www/IA_19081_Hancock_County.zip": {
      "checksum": "b4df5be9b3879e5134c033aeacceeccd"
    },
    "www/IA_19083_Hardin_County.zip": {
      "checksum": "4e167e4a2e6668ebe887300b4a45f2d9"
    },
    "www/IA_19085_Harrison_County.zip": {
      "checksum": "f43aef2bb07f7fc4d8425756f7997485"
    },
    "www/IA_19087_Henry_County.zip": {
      "checksum": "06dfce4409c2a4dbb113a80f3efc56bb"
    },
    "www/IA_19089_Howard_County.zip": {
      "checksum": "f7c1744a7f2de9809b713513dad16913"
    },
    "www/IA_19091_Humboldt_County.zip": {
      "checksum": "375314bcc1dc7de47407d2a21577379a"
    },
    "www/IA_19093_Ida_County.zip": {
      "checksum": "73a24492c3edb7e368c002d45e939343"
    },
    "www/IA_19095_Iowa_County.zip": {
      "checksum": "70c57ddde62a63d878c4235a13a90488"
    },
    "www/IA_19097_Jackson_County.zip": {
      "checksum": "a36e57be59dae5bff6a90ff0372f5135"
    },
    "www/IA_19099_Jasper_County.zip": {
      "checksum": "c8660b622ae2981cb1de9fae12523421"
    },
    "www/IA_19101_Jefferson_County.zip": {
      "checksum": "52624ba47a3ef1afe4e7dfabc010f001"
    },
    "www/IA_19103_Johnson_County.zip": {
      "checksum": "0831ea0e87b0e18f8d9382ce7fd762a7"
    },
    "www/IA_19105_Jones_County.zip": {
      "checksum": "07cf0c9a7e7c83b1ce1cc3730cf9019e"
    },
    "www/IA_19107_Keokuk_County.zip": {
      "checksum": "de37ca53ebe2e51b82226fd66d9c9cd9"
    },
    "www/IA_19109_Kossuth_County.zip": {
      "checksum": "354d990c0db6d2e235f351ac6d1d92ec"
    },
    "www/IA_19111_Lee_County.zip": {
      "checksum": "48e5e6cd19b310a6b6c2ca561e682c71"
    },
    "www/IA_19113_Linn_County.zip": {
      "checksum": "5d57b622a4ea5a346f97589c5bddaebd"
    },
    "www/IA_19115_Louisa_County.zip": {
      "checksum": "76066a8adfec6bd4236506118709e7ca"
    },
    "www/IA_19117_Lucas_County.zip": {
      "checksum": "108e3030a44020f5d073f1eb20bac8f6"
    },
    "www/IA_19119_Lyon_County.zip": {
      "checksum": "0706d5dfc765a54373c504af3561ffcf"
    },
    "www/IA_19121_Madison_County.zip": {
      "checksum": "2676d55009bdb371724797d9c07ed909"
    },
    "www/IA_19123_Mahaska_County.zip": {
      "checksum": "095f8267ac3ff0a43bd964c9d0307d64"
    },
    "www/IA_19125_Marion_County.zip": {
      "checksum": "0f84db4318a5ed9187361eb8222e5bab"
    },
    "www/IA_19127_Marshall_County.zip": {
      "checksum": "81fca595cc649c9d157e3db15602f4b7"
    },
    "www/IA_19129_Mills_County.zip": {
      "checksum": "18af909ae2cf6c4934849b5e45ba8375"
    },
    "www/IA_19131_Mitchell_County.zip": {
      "checksum": "26b1b117ed4a8facbb021ae07c4a5371"
    },
    "www/IA_19133_Monona_County.zip": {
      "checksum": "bc0cbddde423113fba560b220a2f01f8"
    },
    "www/IA_19135_Monroe_County.zip": {
      "checksum": "9ca31fb6948b4b43ff9c56f4b3c299f5"
    },
    "www/IA_19137_Montgomery_County.zip": {
      "checksum": "fca17b1ba64618d23ecb30f2184403fb"
    },
    "www/IA_19139_Muscatine_County.zip": {
      "checksum": "a9dbf087e9a52cbdbdd848226fa972dc"
    },
    "www/IA_19141_O'Brien_County.zip": {
      "checksum": "aa4db7fbc6e43f8314184865c8b1d0ef"
    },
    "www/IA_19143_Osceola_County.zip": {
      "checksum": "7087d7ad3f098a9fe32e309cb1ba4e66"
    },
    "www/IA_19145_Page_County.zip": {
      "checksum": "63c6d90489397d6e8968ff4b30d8021f"
    },
    "www/IA_19147_Palo_Alto_County.zip": {
      "checksum": "ccb091b84bf58c133192377e7d297421"
    },
    "www/IA_19149_Plymouth_County.zip": {
      "checksum": "252df6aa2b87fb6c3083d4fbca32243c"
    },
    "www/IA_19151_Pocahontas_County.zip": {
      "checksum": "b80cff655d9f89fc08b0d4ccc1c8f12b"
    },
    "www/IA_19153_Polk_County.zip": {
      "checksum": "2b249c2ceb3ce0f84d2b2959ea340a3e"
    },
    "www/IA_19155_Pottawattamie_County.zip": {
      "checksum": "ade395492967f995e2e9ff9c548047f5"
    },
    "www/IA_19157_Poweshiek_County.zip": {
      "checksum": "3d66f2787f09a4528aae04689bb7f975"
    },
    "www/IA_19159_Ringgold_County.zip": {
      "checksum": "f0cd04297270d1a20fa8e7a3ead54e46"
    },
    "www/IA_19161_Sac_County.zip": {
      "checksum": "e9cb5bb405544d93b59e81cf4900f059"
    },
    "www/IA_19163_Scott_County.zip": {
      "checksum": "48e859d02e4be6ea4c6ac7ce7d1bd655"
    },
    "www/IA_19165_Shelby_County.zip": {
      "checksum": "e5c9af6930822803b11f79c43d725aa4"
    },
    "www/IA_19167_Sioux_County.zip": {
      "checksum": "c73ad619cbe02b79df61f9a57831f43f"
    },
    "www/IA_19169_Story_County.zip": {
      "checksum": "5f65ee95a42c9295063a9fba3380bd17"
    },
    "www/IA_19171_Tama_County.zip": {
      "checksum": "060cb846cd12ae7409eca18c4cb09a42"
    },
    "www/IA_19173_Taylor_County.zip": {
      "checksum": "526729c60a9d3f15da28549a38d5c22b"
    },
    "www/IA_19175_Union_County.zip": {
      "checksum": "54a4368bb6d563e76d4db52068655b8f"
    },
    "www/IA_19177_Van_Buren_County.zip": {
      "checksum": "e44db6627b6b0671ff29f10b4c5718de"
    },
    "www/IA_19179_Wapello_County.zip": {
      "checksum": "720b2fb87720b6b2f0ff4656417236cd"
    },
    "www/IA_19181_Warren_County.zip": {
      "checksum": "d5fe9285f1e46b39cdb5d145e66a56b4"
    },
    "www/IA_19183_Washington_County.zip": {
      "checksum": "e3a2141990af1c3ddabcb0e88aafd203"
    },
    "www/IA_19185_Wayne_County.zip": {
      "checksum": "2ee1501b6a5c5b63283fc7662ca6620f"
    },
    "www/IA_19187_Webster_County.zip": {
      "checksum": "f3ff631aa5521025441d261237939858"
    },
    "www/IA_19189_Winnebago_County.zip": {
      "checksum": "d609c54a810ecc68c4ed6b30469e42b2"
    },
    "www/IA_19191_Winneshiek_County.zip": {
      "checksum": "bce26833ef91d4fe0afed280b51e019a"
    },
    "www/IA_19193_Woodbury_County.zip": {
      "checksum": "0a96ffa6676c93c06f9d085234fb058a"
    },
    "www/IA_19195_Worth_County.zip": {
      "checksum": "7600fb9643d4295d8b6b838f5ce3ab21"
    },
    "www/IA_19197_Wright_County.zip": {
      "checksum": "ebbf8799af15a748e47319dac14c24ab"
    },
    "www/ID_16001_Ada_County.zip": {
      "checksum": "209e44da85d3e1d56fee2c82f4a7245d"
    },
    "www/ID_16003_Adams_County.zip": {
      "checksum": "54331fd8869337f89db968441ab76517"
    },
    "www/ID_16005_Bannock_County.zip": {
      "checksum": "00318dbdc024e5b3c42bf8aef36e9ca8"
    },
    "www/ID_16007_Bear_Lake_County.zip": {
      "checksum": "d14a4df6d01e7e592d1c733e59f713d6"
    },
    "www/ID_16009_Benewah_County.zip": {
      "checksum": "cec758f222c4b913117e128f5b562436"
    },
    "www/ID_16011_Bingham_County.zip": {
      "checksum": "acdf5d19bcf4afb45cdcca27657bacd6"
    },
    "www/ID_16013_Blaine_County.zip": {
      "checksum": "c2a98a8460c8d6294e3cb037b9e7537c"
    },
    "www/ID_16015_Boise_County.zip": {
      "checksum": "1ffb0dff76372a44a0ca94cc9cf5e614"
    },
    "www/ID_16017_Bonner_County.zip": {
      "checksum": "4585baeef54c571c039a361f09d723ee"
    },
    "www/ID_16019_Bonneville_County.zip": {
      "checksum": "8eaefced66da83c8afbeb023d80eebbd"
    },
    "www/ID_16021_Boundary_County.zip": {
      "checksum": "8931f0787e5a85afbb7f1db9d530cbe1"
    },
    "www/ID_16023_Butte_County.zip": {
      "checksum": "5a9f24539f28bdd25b1c4dd81b367f40"
    },
    "www/ID_16025_Camas_County.zip": {
      "checksum": "4b4abe7cf01c8d8f22142ce190689b48"
    },
    "www/ID_16027_Canyon_County.zip": {
      "checksum": "b100b68a010a4b0a75810d4661bb6456"
    },
    "www/ID_16029_Caribou_County.zip": {
      "checksum": "501efe6b729c3b1c0ccf21b5750a8162"
    },
    "www/ID_16031_Cassia_County.zip": {
      "checksum": "bffa3309c2b3d7c490f4e03ea81eb258"
    },
    "www/ID_16033_Clark_County.zip": {
      "checksum": "09270ed7000430a7d2f9fb366bbcef82"
    },
    "www/ID_16035_Clearwater_County.zip": {
      "checksum": "3c51a01cd5a69f566ba2be99d3964106"
    },
    "www/ID_16037_Custer_County.zip": {
      "checksum": "b9cdb43c31a118689a2111bd2ae7f0d3"
    },
    "www/ID_16039_Elmore_County.zip": {
      "checksum": "2369fc91ab6cdd0acaf278ccd3dfe20f"
    },
    "www/ID_16041_Franklin_County.zip": {
      "checksum": "f8a0ae9d77ef68f89c8e6ca321f319be"
    },
    "www/ID_16043_Fremont_County.zip": {
      "checksum": "58e491a62dae3d80eaed752619ddf118"
    },
    "www/ID_16045_Gem_County.zip": {
      "checksum": "ac1a92d4a34378bd2dc1258dafa00bc5"
    },
    "www/ID_16047_Gooding_County.zip": {
      "checksum": "3411a92acd53dd10bfb81794c4a4fa84"
    },
    "www/ID_16049_Idaho_County.zip": {
      "checksum": "94b5fd50e56e336ec531267c28f75896"
    },
    "www/ID_16051_Jefferson_County.zip": {
      "checksum": "b42750a22e94d6f1c50c630b0343d18d"
    },
    "www/ID_16053_Jerome_County.zip": {
      "checksum": "a559e8088569d19936eb89a9936ea771"
    },
    "www/ID_16055_Kootenai_County.zip": {
      "checksum": "9a25f5c66d3e45886cfaa76ab5d0b248"
    },
    "www/ID_16057_Latah_County.zip": {
      "checksum": "1dcd67ea383cb41385a80e9323861083"
    },
    "www/ID_16059_Lemhi_County.zip": {
      "checksum": "42fcf14749245281e2d8ac2caedde95a"
    },
    "www/ID_16061_Lewis_County.zip": {
      "checksum": "13e6f0f745428ee145e89e19c3868778"
    },
    "www/ID_16063_Lincoln_County.zip": {
      "checksum": "b8f5464c5c8cc51d8996ef647dab0f52"
    },
    "www/ID_16065_Madison_County.zip": {
      "checksum": "70070d424f545f6cc5ddb86984613ef5"
    },
    "www/ID_16067_Minidoka_County.zip": {
      "checksum": "9ffa8a3fe963a02763421ed8ed92664c"
    },
    "www/ID_16069_Nez_Perce_County.zip": {
      "checksum": "40eb27d6a02f4b439df298811bcab74a"
    },
    "www/ID_16071_Oneida_County.zip": {
      "checksum": "f83afffcae82e35a5f12e22fe548e8c9"
    },
    "www/ID_16073_Owyhee_County.zip": {
      "checksum": "af5d2e6d3c1c1abcaacc3c2bcad94604"
    },
    "www/ID_16075_Payette_County.zip": {
      "checksum": "50f5c4f0377e1eeb7d0a230bfec7e2c6"
    },
    "www/ID_16077_Power_County.zip": {
      "checksum": "9cb20086d01cd37e8bd6cebcce273e3c"
    },
    "www/ID_16079_Shoshone_County.zip": {
      "checksum": "c15fac54b08499e009e16c733cfb165d"
    },
    "www/ID_16081_Teton_County.zip": {
      "checksum": "650a46a1c96fc6d77da8352535d31001"
    },
    "www/ID_16083_Twin_Falls_County.zip": {
      "checksum": "eec7cffd637b4d808487e9f3559b4036"
    },
    "www/ID_16085_Valley_County.zip": {
      "checksum": "fc075596fd09e60aab3169be306d00c0"
    },
    "www/ID_16087_Washington_County.zip": {
      "checksum": "76f0215f4d10fe98a680c20d2592ad04"
    },
    "www/IL_17001_Adams_County.zip": {
      "checksum": "23c76b8c300c0945ab0e4e2525a8b775"
    },
    "www/IL_17003_Alexander_County.zip": {
      "checksum": "6c87d5c27f1153e0b26fb6c3f977e771"
    },
    "www/IL_17005_Bond_County.zip": {
      "checksum": "da72af9fb6a312888a4cdf403dcfa345"
    },
    "www/IL_17007_Boone_County.zip": {
      "checksum": "683a066aed22cb33cb59eeb06f4652eb"
    },
    "www/IL_17009_Brown_County.zip": {
      "checksum": "4c6df4403726da468ff1bd2a5dce5c96"
    },
    "www/IL_17011_Bureau_County.zip": {
      "checksum": "9e05e12f4067319fd7bcd3efeb69d349"
    },
    "www/IL_17015_Carroll_County.zip": {
      "checksum": "85f7b4ae338050ece805238a6cb3fd6e"
    },
    "www/IL_17017_Cass_County.zip": {
      "checksum": "80616a0dbd5f69ec630da4bacc94330e"
    },
    "www/IL_17019_Champaign_County.zip": {
      "checksum": "906a81d2ffe8e7d751f819478b5d813a"
    },
    "www/IL_17021_Christian_County.zip": {
      "checksum": "664914a4270eca21c558904be84e5c9b"
    },
    "www/IL_17023_Clark_County.zip": {
      "checksum": "8950ab794c9e7e51a8d56d5615194927"
    },
    "www/IL_17025_Clay_County.zip": {
      "checksum": "868092193b7d46ee52b24b9e1a716658"
    },
    "www/IL_17027_Clinton_County.zip": {
      "checksum": "5babfbbaa3a7dfa6eadcdbb6638a8413"
    },
    "www/IL_17029_Coles_County.zip": {
      "checksum": "8b5af1e10d037f1b86a138c09731120e"
    },
    "www/IL_17031_Cook_County.zip": {
      "checksum": "9dd070c7f2461102b66340044c6003ab"
    },
    "www/IL_17033_Crawford_County.zip": {
      "checksum": "fe4f2969ddbcf3aeb263686bb8ff7980"
    },
    "www/IL_17035_Cumberland_County.zip": {
      "checksum": "b2d324fa59ab54c546d43933a9e790a8"
    },
    "www/IL_17037_DeKalb_County.zip": {
      "checksum": "b75e5ed14d824f3727b0950d2a1fe7f4"
    },
    "www/IL_17039_De_Witt_County.zip": {
      "checksum": "f55b5c6a459cfdb1817fa2e1a6aafb5b"
    },
    "www/IL_17041_Douglas_County.zip": {
      "checksum": "d0541237798bf8b8f1ef2fb228e32842"
    },
    "www/IL_17043_DuPage_County.zip": {
      "checksum": "b68bc0ebf62d3e4c0bda7bf0448bb63e"
    },
    "www/IL_17045_Edgar_County.zip": {
      "checksum": "77457659d9cdb5447c874fe72d871e82"
    },
    "www/IL_17047_Edwards_County.zip": {
      "checksum": "2b607f4a1d77448782a86f6aaf51bc83"
    },
    "www/IL_17049_Effingham_County.zip": {
      "checksum": "376f7f009f76591f8c8eac24d45e4d72"
    },
    "www/IL_17051_Fayette_County.zip": {
      "checksum": "cf7b9a61f8b00188c45ddd58dee2c458"
    },
    "www/IL_17053_Ford_County.zip": {
      "checksum": "ad5b57d5653d6f27c6ec286202937f96"
    },
    "www/IL_17057_Fulton_County.zip": {
      "checksum": "e3307e4f701eead833439510535bc614"
    },
    "www/IL_17059_Gallatin_County.zip": {
      "checksum": "0fb140ea681584d04c9930dec79f5d44"
    },
    "www/IL_17063_Grundy_County.zip": {
      "checksum": "0ad9967a4783a12888c8694e658aa596"
    },
    "www/IL_17065_Hamilton_County.zip": {
      "checksum": "bf138b1918699abca0fea3acc6155594"
    },
    "www/IL_17067_Hancock_County.zip": {
      "checksum": "252b5e1428070eab21eeda494d69ad7f"
    },
    "www/IL_17069_Hardin_County.zip": {
      "checksum": "8334b5393947eec6ac89198046f9c7dc"
    },
    "www/IL_17071_Henderson_County.zip": {
      "checksum": "2c04c0fa0598282745ad01ac847d9361"
    },
    "www/IL_17073_Henry_County.zip": {
      "checksum": "e979cc3cb30c3f8668577b86012ea89c"
    },
    "www/IL_17075_Iroquois_County.zip": {
      "checksum": "833de4ae330e313819e4956b95188086"
    },
    "www/IL_17077_Jackson_County.zip": {
      "checksum": "f35adddb04ef78ff3a52d55a6b71fe0a"
    },
    "www/IL_17079_Jasper_County.zip": {
      "checksum": "4afcdffe2461340d994962dc8a040602"
    },
    "www/IL_17081_Jefferson_County.zip": {
      "checksum": "dfa408a1ae087e96cb258c3f7b9e1b91"
    },
    "www/IL_17083_Jersey_County.zip": {
      "checksum": "ba48e79bcd6d3368f22d496f1f3f0904"
    },
    "www/IL_17085_Jo_Daviess_County.zip": {
      "checksum": "a53c9849e8a9c36902581abba8b08002"
    },
    "www/IL_17087_Johnson_County.zip": {
      "checksum": "fc14544363a09ca917d2eff6704113a0"
    },
    "www/IL_17089_Kane_County.zip": {
      "checksum": "b48fbbaf68a57ddffc141a8396e23c17"
    },
    "www/IL_17091_Kankakee_County.zip": {
      "checksum": "4889855e2278ec1d362d0dd5a69901f5"
    },
    "www/IL_17093_Kendall_County.zip": {
      "checksum": "7fdb70fc41ece607244147375a0cb190"
    },
    "www/IL_17095_Knox_County.zip": {
      "checksum": "edbafdda0af703e9129eef591b777576"
    },
    "www/IL_17097_Lake_County.zip": {
      "checksum": "12e8c7827b5876d14c4c1dbe1fa13b3d"
    },
    "www/IL_17099_LaSalle_County.zip": {
      "checksum": "f540b9c09debd5549c5383a6e4a4bbab"
    },
    "www/IL_17101_Lawrence_County.zip": {
      "checksum": "91bb5cba0a7f588ca55b9661df3dabaa"
    },
    "www/IL_17103_Lee_County.zip": {
      "checksum": "84a01fb740e1e10585fdad762fab1404"
    },
    "www/IL_17105_Livingston_County.zip": {
      "checksum": "ada401e689889fde7882c35511773622"
    },
    "www/IL_17107_Logan_County.zip": {
      "checksum": "d7b692a83818275bf7f063527986f142"
    },
    "www/IL_17109_McDonough_County.zip": {
      "checksum": "19c210d70f1d586e1750bc9fed6f1c13"
    },
    "www/IL_17111_McHenry_County.zip": {
      "checksum": "0983447c68f9eb4018ff1aac617e4a3f"
    },
    "www/IL_17113_McLean_County.zip": {
      "checksum": "042d6069bd7a40e9b2b4a7e8885174fc"
    },
    "www/IL_17115_Macon_County.zip": {
      "checksum": "ab37ee83a2d90e0b95db39d6ac670fea"
    },
    "www/IL_17117_Macoupin_County.zip": {
      "checksum": "d2f5f98a1e12ac65546bfe003afd8457"
    },
    "www/IL_17119_Madison_County.zip": {
      "checksum": "6f7de0576dc8690b2d5e88df9d7a463c"
    },
    "www/IL_17121_Marion_County.zip": {
      "checksum": "8ef6eedac072bbb1f740069e6e6d72ef"
    },
    "www/IL_17123_Marshall_County.zip": {
      "checksum": "f7c48a095a719343da08024227bc3c11"
    },
    "www/IL_17125_Mason_County.zip": {
      "checksum": "e3e7bf0be7afa7dabf406d4fbc90abf0"
    },
    "www/IL_17127_Massac_County.zip": {
      "checksum": "937217c497df5bb58f988a03ecd9a2d9"
    },
    "www/IL_17129_Menard_County.zip": {
      "checksum": "1401ef66b4bcd324db8e183ab6db3c7a"
    },
    "www/IL_17131_Mercer_County.zip": {
      "checksum": "4ed68ab340bd5a343c30cdac1fc1c90b"
    },
    "www/IL_17133_Monroe_County.zip": {
      "checksum": "0a03d1176b642747998882f3626bb863"
    },
    "www/IL_17135_Montgomery_County.zip": {
      "checksum": "d6a77009a70193a5a8e77a04d637ce7e"
    },
    "www/IL_17137_Morgan_County.zip": {
      "checksum": "3296fd6aa884dabc9b1a69c2e084b89a"
    },
    "www/IL_17139_Moultrie_County.zip": {
      "checksum": "17c28bd1900913dec105c60dddd7a8b3"
    },
    "www/IL_17141_Ogle_County.zip": {
      "checksum": "24e998291ef79d771fc190097296b345"
    },
    "www/IL_17143_Peoria_County.zip": {
      "checksum": "3a354f728f0b32c36fa26a2a6365dcc4"
    },
    "www/IL_17145_Perry_County.zip": {
      "checksum": "4a16323b36a1535ad525b33b2993d939"
    },
    "www/IL_17147_Piatt_County.zip": {
      "checksum": "8ba2dc3936fe3b44146748a5c8e6457d"
    },
    "www/IL_17151_Pope_County.zip": {
      "checksum": "92fb2733b074ed55bfed4a2290d6f6ae"
    },
    "www/IL_17157_Randolph_County.zip": {
      "checksum": "64a09f5d833dd945757105a46e112ca9"
    },
    "www/IL_17161_Rock_Island_County.zip": {
      "checksum": "cdfe0b3b569c290a1be9beb2b3ebb21a"
    },
    "www/IL_17163_St._Clair_County.zip": {
      "checksum": "7df69f61293353373c426c6e578091a7"
    },
    "www/IL_17165_Saline_County.zip": {
      "checksum": "eba8322c70e619806dff7d3cd2825a24"
    },
    "www/IL_17167_Sangamon_County.zip": {
      "checksum": "dedc1258e4482ebd59bc3fa421746057"
    },
    "www/IL_17169_Schuyler_County.zip": {
      "checksum": "24dc78cdedf3e1bb8f38cc8626d7609e"
    },
    "www/IL_17171_Scott_County.zip": {
      "checksum": "35e44b1a738849eb505cbbbaeacd9e86"
    },
    "www/IL_17173_Shelby_County.zip": {
      "checksum": "137a90da8ecea9e973f55bb979a63ec4"
    },
    "www/IL_17175_Stark_County.zip": {
      "checksum": "d852763a6645c32847ce31909d77a794"
    },
    "www/IL_17177_Stephenson_County.zip": {
      "checksum": "05e978c2c82887c8ada207066bafe057"
    },
    "www/IL_17179_Tazewell_County.zip": {
      "checksum": "644cbe8240d79efa5adb08d1016b81a8"
    },
    "www/IL_17183_Vermilion_County.zip": {
      "checksum": "0cc56cee7d6f21986bc98bfbdedfeb97"
    },
    "www/IL_17185_Wabash_County.zip": {
      "checksum": "c529ae2986c2fe0ed508f2a54fa8a74e"
    },
    "www/IL_17187_Warren_County.zip": {
      "checksum": "f5aa20c821ba07b4a7f4e4751130efbd"
    },
    "www/IL_17189_Washington_County.zip": {
      "checksum": "c9f0836f6c662f75df3a59c56d4ca8da"
    },
    "www/IL_17191_Wayne_County.zip": {
      "checksum": "27e884f5187aa2780242976ed6e6c177"
    },
    "www/IL_17193_White_County.zip": {
      "checksum": "95d414dfc3f28f64b1d6a2bff628303a"
    },
    "www/IL_17195_Whiteside_County.zip": {
      "checksum": "5c55e73ee4b6cacdfa1ad8af989eede9"
    },
    "www/IL_17197_Will_County.zip": {
      "checksum": "e59eed60377eaef5da2a1fb41111f6f3"
    },
    "www/IL_17199_Williamson_County.zip": {
      "checksum": "0f6e4f0236c11877e57e3ae371b82f01"
    },
    "www/IL_17201_Winnebago_County.zip": {
      "checksum": "2f21510cc07bca7fc534a460b9699070"
    },
    "www/IL_17203_Woodford_County.zip": {
      "checksum": "5c5b60ef12c9adc7bdfa71f26300827b"
    },
    "www/IN_18001_Adams_County.zip": {
      "checksum": "557f89ba035ce6a3b14355f65d0bb01a"
    },
    "www/IN_18003_Allen_County.zip": {
      "checksum": "9ce07801476fa8ff9611c064cea3017a"
    },
    "www/IN_18005_Bartholomew_County.zip": {
      "checksum": "c6ab1afeb17f2fd96ded5b8ddffcc80a"
    },
    "www/IN_18007_Benton_County.zip": {
      "checksum": "f898f0babea337a7cef7900485f4fdf1"
    },
    "www/IN_18009_Blackford_County.zip": {
      "checksum": "db0f9b3f84a19e7fc57121fc4f1a87da"
    },
    "www/IN_18011_Boone_County.zip": {
      "checksum": "66b003f9e0fe5e6e124d149313f72f83"
    },
    "www/IN_18013_Brown_County.zip": {
      "checksum": "358aefa468b2168d8df22f651dc8932f"
    },
    "www/IN_18015_Carroll_County.zip": {
      "checksum": "44012915d6bcfcbaec49a63008d5b83d"
    },
    "www/IN_18017_Cass_County.zip": {
      "checksum": "e9a182ad9cb8533684ffcc2ed713ba6f"
    },
    "www/IN_18019_Clark_County.zip": {
      "checksum": "d6dfa8c41c6fd829a1e243d30eeb57d3"
    },
    "www/IN_18021_Clay_County.zip": {
      "checksum": "7582911881468e85914d6466ceb0a96f"
    },
    "www/IN_18023_Clinton_County.zip": {
      "checksum": "da40e68d8b1591d093fdd230a6974e7f"
    },
    "www/IN_18025_Crawford_County.zip": {
      "checksum": "92b931fc311950f6155b085b94be74c9"
    },
    "www/IN_18027_Daviess_County.zip": {
      "checksum": "5695cbdb628e9e5ac8d765f3025c75e1"
    },
    "www/IN_18029_Dearborn_County.zip": {
      "checksum": "794322136fb5abf6e9ef7be55abb0aaa"
    },
    "www/IN_18031_Decatur_County.zip": {
      "checksum": "78eb0e02d5a84ce5a5569aaefea39091"
    },
    "www/IN_18033_DeKalb_County.zip": {
      "checksum": "4e2f9781ecfdda91e8a639fa0cbc7694"
    },
    "www/IN_18035_Delaware_County.zip": {
      "checksum": "523ddda8de358ed595cc303a7fd0766d"
    },
    "www/IN_18037_Dubois_County.zip": {
      "checksum": "3289b0a4af4fd44982988d23c3ff292d"
    },
    "www/IN_18039_Elkhart_County.zip": {
      "checksum": "c5f57d8a134598521c8f29c50c65bf4f"
    },
    "www/IN_18041_Fayette_County.zip": {
      "checksum": "c8a8c0ed03566816dfc82cfa54d40360"
    },
    "www/IN_18043_Floyd_County.zip": {
      "checksum": "5797c37c977def1db231fbfa90d5f732"
    },
    "www/IN_18045_Fountain_County.zip": {
      "checksum": "f8980488541e60952f029d275105d89f"
    },
    "www/IN_18047_Franklin_County.zip": {
      "checksum": "e2fa9f3e210137dedf8f73cdce525b67"
    },
    "www/IN_18049_Fulton_County.zip": {
      "checksum": "f910d01d1b3b7476e2197d9876bdd338"
    },
    "www/IN_18051_Gibson_County.zip": {
      "checksum": "dc930710045da1b8b1c2728d6b81334a"
    },
    "www/IN_18053_Grant_County.zip": {
      "checksum": "bb80687958d20daf82aa3abbed01176e"
    },
    "www/IN_18055_Greene_County.zip": {
      "checksum": "699814d2a8f2e774f3229450fd2441c5"
    },
    "www/IN_18057_Hamilton_County.zip": {
      "checksum": "dce8fb0b8135fe4377747da0b028b4f4"
    },
    "www/IN_18059_Hancock_County.zip": {
      "checksum": "7db96ce6660f4fea31ca19dbb2355557"
    },
    "www/IN_18061_Harrison_County.zip": {
      "checksum": "6c037c44b2d4b651e5f517d5b16b78d6"
    },
    "www/IN_18063_Hendricks_County.zip": {
      "checksum": "26faf27b867897dd036825fa3b801b89"
    },
    "www/IN_18065_Henry_County.zip": {
      "checksum": "524caebcbe815b5be9494a9bd6a96ede"
    },
    "www/IN_18067_Howard_County.zip": {
      "checksum": "49edf4cdee3be149b1f71a1bb3fa0810"
    },
    "www/IN_18069_Huntington_County.zip": {
      "checksum": "f59ef2516ccb556644674da01bbd7ac7"
    },
    "www/IN_18071_Jackson_County.zip": {
      "checksum": "c18ba2466a00e89677f4888475d1bd2e"
    },
    "www/IN_18073_Jasper_County.zip": {
      "checksum": "4dd0363ab2bd805be6202421492c158f"
    },
    "www/IN_18075_Jay_County.zip": {
      "checksum": "a9b3f23241ef2bdcdf0ba226930982aa"
    },
    "www/IN_18077_Jefferson_County.zip": {
      "checksum": "4e03bea6c1d1f6dfce3f74734980ecf7"
    },
    "www/IN_18079_Jennings_County.zip": {
      "checksum": "3e7cad1dc1a79d580e519619f86ce9d1"
    },
    "www/IN_18081_Johnson_County.zip": {
      "checksum": "bad0df01d3686fbafbf1dfe2b51dd924"
    },
    "www/IN_18083_Knox_County.zip": {
      "checksum": "e24349cb2781e648ca2121bc4d50b485"
    },
    "www/IN_18085_Kosciusko_County.zip": {
      "checksum": "3bf1c14da2a0c06504eec557d0e16e89"
    },
    "www/IN_18087_LaGrange_County.zip": {
      "checksum": "d41faf4835f3314e812b3e52611686b1"
    },
    "www/IN_18089_Lake_County.zip": {
      "checksum": "4c4f6ed3cb7ec4ed41210861efd4bf0a"
    },
    "www/IN_18091_LaPorte_County.zip": {
      "checksum": "4afcebdb2dc233a24d7482bf299f1fc6"
    },
    "www/IN_18093_Lawrence_County.zip": {
      "checksum": "2d2c2af5eb654f6988d3c12ab4aae685"
    },
    "www/IN_18095_Madison_County.zip": {
      "checksum": "4db8321c6cc750640e182ce8e7f4da01"
    },
    "www/IN_18097_Marion_County.zip": {
      "checksum": "9014b71b4554fd69296738ae794aacb5"
    },
    "www/IN_18099_Marshall_County.zip": {
      "checksum": "085d30b7bee99640048cae78e86ff2f6"
    },
    "www/IN_18101_Martin_County.zip": {
      "checksum": "ba9526e5d0c46e44505079704540a7fc"
    },
    "www/IN_18103_Miami_County.zip": {
      "checksum": "893a267a4a8e86cfb594a6979a1583d6"
    },
    "www/IN_18105_Monroe_County.zip": {
      "checksum": "3726395d59e403b1ef9bdc1794164299"
    },
    "www/IN_18107_Montgomery_County.zip": {
      "checksum": "56ec4fb6c242147a7ba09eb006fe278e"
    },
    "www/IN_18109_Morgan_County.zip": {
      "checksum": "b83d4072224aeaf68293bd9db4d5043a"
    },
    "www/IN_18111_Newton_County.zip": {
      "checksum": "d11834b3b06eef16294e73c1dcbb836f"
    },
    "www/IN_18113_Noble_County.zip": {
      "checksum": "2c10c56b2ad65c22a1ca5dd24f164342"
    },
    "www/IN_18115_Ohio_County.zip": {
      "checksum": "2097772384e736216bbf8319c7c23470"
    },
    "www/IN_18117_Orange_County.zip": {
      "checksum": "7ffce34edb35b2ea5e1e8d62cd03da88"
    },
    "www/IN_18119_Owen_County.zip": {
      "checksum": "0f1221082286bc7242fbad7a988b407c"
    },
    "www/IN_18121_Parke_County.zip": {
      "checksum": "e01b2fd9dd9afe9bf68105c593bd340e"
    },
    "www/IN_18123_Perry_County.zip": {
      "checksum": "0de6432cf7397cabba39e01e328bcbde"
    },
    "www/IN_18125_Pike_County.zip": {
      "checksum": "5c98bb0903bd4bbd9afc42b3f56b4e5d"
    },
    "www/IN_18127_Porter_County.zip": {
      "checksum": "5003b136e01e9e6a86a8bfe3a05ad90f"
    },
    "www/IN_18129_Posey_County.zip": {
      "checksum": "ec60aac906750167261ec33652533e00"
    },
    "www/IN_18131_Pulaski_County.zip": {
      "checksum": "cc750c10c51f928e4370f9fb3717afc0"
    },
    "www/IN_18133_Putnam_County.zip": {
      "checksum": "c788922b3f170b018645157f0507fc7c"
    },
    "www/IN_18135_Randolph_County.zip": {
      "checksum": "a11870e7f39e7a0db9c999f18ec2ef84"
    },
    "www/IN_18137_Ripley_County.zip": {
      "checksum": "ee007261ec4592c324dc57d67aa74ecf"
    },
    "www/IN_18139_Rush_County.zip": {
      "checksum": "22219fc7838d6791c7d4183052b48655"
    },
    "www/IN_18141_St._Joseph_County.zip": {
      "checksum": "22e8f8ae47dd050697e64b7f7cf2fdc5"
    },
    "www/IN_18143_Scott_County.zip": {
      "checksum": "0414c24867ebbacd40049fef98a12758"
    },
    "www/IN_18145_Shelby_County.zip": {
      "checksum": "50603fd61f8c87486cd00cfc5e4ec3dc"
    },
    "www/IN_18147_Spencer_County.zip": {
      "checksum": "28fd7477780a481e2350256115744fad"
    },
    "www/IN_18149_Starke_County.zip": {
      "checksum": "d7296941034e467eb1757617b3f26de9"
    },
    "www/IN_18151_Steuben_County.zip": {
      "checksum": "52638927be269b938dda12ffabdcf3e6"
    },
    "www/IN_18153_Sullivan_County.zip": {
      "checksum": "8a5b65d00842b7f659e3b2a3c5b8196c"
    },
    "www/IN_18155_Switzerland_County.zip": {
      "checksum": "0045183bd5bbb2686e009073a8e02b33"
    },
    "www/IN_18157_Tippecanoe_County.zip": {
      "checksum": "66921c54e4e4ca12f0e3fb6f6ecfd5f2"
    },
    "www/IN_18159_Tipton_County.zip": {
      "checksum": "32d89902fc512f49233ac2c6b311ee08"
    },
    "www/IN_18161_Union_County.zip": {
      "checksum": "a1d49b3f24c5f17d7f0d474052e71fc6"
    },
    "www/IN_18163_Vanderburgh_County.zip": {
      "checksum": "cc37655d3bb2fbf59030bf4543f41be4"
    },
    "www/IN_18165_Vermillion_County.zip": {
      "checksum": "0c63f5595a7f794e67100465b65412cd"
    },
    "www/IN_18167_Vigo_County.zip": {
      "checksum": "9f8d21a19f195c570b2559677bccb2d4"
    },
    "www/IN_18169_Wabash_County.zip": {
      "checksum": "e93771590ee92a5d4240277b3f7fc1d1"
    },
    "www/IN_18171_Warren_County.zip": {
      "checksum": "c52defacb5fa9977fc29558c971ffc7d"
    },
    "www/IN_18173_Warrick_County.zip": {
      "checksum": "073937eacf59f7d31a304817e0e77cb8"
    },
    "www/IN_18175_Washington_County.zip": {
      "checksum": "6b1f2bf62c40c30778f6b567c0083e04"
    },
    "www/IN_18177_Wayne_County.zip": {
      "checksum": "37581567ae87b6b72885834a5ace0387"
    },
    "www/IN_18179_Wells_County.zip": {
      "checksum": "da58a375de76bfa3ee4d30f79e32984e"
    },
    "www/IN_18181_White_County.zip": {
      "checksum": "6c3e1782e2db663d32ac0b74afb5960d"
    },
    "www/IN_18183_Whitley_County.zip": {
      "checksum": "7eeb6714d9a9ae8e38ebe711f2302855"
    },
    "www/KS_20001_Allen_County.zip": {
      "checksum": "7ef23a880c23cbc9f1cf9536dfc1da7e"
    },
    "www/KS_20011_Bourbon_County.zip": {
      "checksum": "855f4bf31a42b27e3caf96923a74b97c"
    },
    "www/KS_20013_Brown_County.zip": {
      "checksum": "61c49869bd97264ec770b4de7be568ae"
    },
    "www/KS_20015_Butler_County.zip": {
      "checksum": "c83c6baacfcf7a6a19439cfc8a5b65a6"
    },
    "www/KS_20017_Chase_County.zip": {
      "checksum": "1acda09a8a5e5b1e35363fd0c08a449a"
    },
    "www/KS_20027_Clay_County.zip": {
      "checksum": "81cf325c3562ec205d9d818f30b8424c"
    },
    "www/KS_20029_Cloud_County.zip": {
      "checksum": "dfbe3b4f08fe663b3c47237aa21a4de2"
    },
    "www/KS_20033_Comanche_County.zip": {
      "checksum": "e49e6c661375ab8f95e81aa56903a134"
    },
    "www/KS_20037_Crawford_County.zip": {
      "checksum": "86844d0abc7153b5d930b79ac75896e1"
    },
    "www/KS_20041_Dickinson_County.zip": {
      "checksum": "d9cad22dda399857aa510e991dd3c1b6"
    },
    "www/KS_20043_Doniphan_County.zip": {
      "checksum": "59be476413ab50e43bd43b468f316426"
    },
    "www/KS_20045_Douglas_County.zip": {
      "checksum": "4a5128ae5fbbb7697143301621509fb3"
    },
    "www/KS_20049_Elk_County.zip": {
      "checksum": "f5b747f5b4093ff947af6a8689d66fcd"
    },
    "www/KS_20055_Finney_County.zip": {
      "checksum": "5c4a3288d201c5d071cedfc3d39450ed"
    },
    "www/KS_20057_Ford_County.zip": {
      "checksum": "72794200a95deac184d9956e187fa985"
    },
    "www/KS_20061_Geary_County.zip": {
      "checksum": "a45fc450ae70ae1952c699b7520a65d0"
    },
    "www/KS_20067_Grant_County.zip": {
      "checksum": "95429b439abc4c5d112f2f142af4729b"
    },
    "www/KS_20069_Gray_County.zip": {
      "checksum": "8aef9be1e86eb1f5cc5688c1a8e8e6e5"
    },
    "www/KS_20079_Harvey_County.zip": {
      "checksum": "e4f08b60d7aa5ad6208e7fef30d468f4"
    },
    "www/KS_20087_Jefferson_County.zip": {
      "checksum": "7ef535226d2574a172baf1d9cf4f9078"
    },
    "www/KS_20091_Johnson_County.zip": {
      "checksum": "e93f6ea526ebdff71291720f748a1366"
    },
    "www/KS_20095_Kingman_County.zip": {
      "checksum": "89853f7e8cbd3c0d8fd8b4de436edadf"
    },
    "www/KS_20097_Kiowa_County.zip": {
      "checksum": "59b43dae9a55d710f58a3e3cda0dd55f"
    },
    "www/KS_20099_Labette_County.zip": {
      "checksum": "db3e2120e45524d64e1d0a6c7308358f"
    },
    "www/KS_20103_Leavenworth_County.zip": {
      "checksum": "e17b0bb0ba4e610527806873865ea55c"
    },
    "www/KS_20107_Linn_County.zip": {
      "checksum": "2d94bf3e7e108df0c43d980c09764e26"
    },
    "www/KS_20111_Lyon_County.zip": {
      "checksum": "520a00f8afe8d1b4a89f8c9d5e0278ee"
    },
    "www/KS_20115_Marion_County.zip": {
      "checksum": "c88e75a097d9741f6f5e6e728202847f"
    },
    "www/KS_20121_Miami_County.zip": {
      "checksum": "330f258d0d61014087646b75a8217dc3"
    },
    "www/KS_20125_Montgomery_County.zip": {
      "checksum": "be06359098579468138b08606a8dad26"
    },
    "www/KS_20129_Morton_County.zip": {
      "checksum": "a9cdefd872e9ef1247bf1fe13e34d5f7"
    },
    "www/KS_20133_Neosho_County.zip": {
      "checksum": "f909c3d124dfe218dbead92b1d3c7edf"
    },
    "www/KS_20139_Osage_County.zip": {
      "checksum": "b733deb193328681c8459520f4eb2964"
    },
    "www/KS_20143_Ottawa_County.zip": {
      "checksum": "5794222bbad884aa66d7b079328cd716"
    },
    "www/KS_20145_Pawnee_County.zip": {
      "checksum": "6599e7b033aa3eadc7e7b6a29ba9e6e0"
    },
    "www/KS_20149_Pottawatomie_County.zip": {
      "checksum": "041dea4f12fad4a1b07797b24dac0d24"
    },
    "www/KS_20151_Pratt_County.zip": {
      "checksum": "a93876e375bee13e8c49a13b28903a0d"
    },
    "www/KS_20161_Riley_County.zip": {
      "checksum": "5084b4f7027ebdbf2b9bad5b1adf455d"
    },
    "www/KS_20169_Saline_County.zip": {
      "checksum": "b1bb516d869d8924ada2af4463b58db5"
    },
    "www/KS_20173_Sedgwick_County.zip": {
      "checksum": "99ab957ba9fece6a0b649bf9f0ce3f7b"
    },
    "www/KS_20177_Shawnee_County.zip": {
      "checksum": "ed8bebc355e7db7c9bac874245006170"
    },
    "www/KS_20179_Sheridan_County.zip": {
      "checksum": "b037a5c9d358fe5fdd7970e9364256fd"
    },
    "www/KS_20185_Stafford_County.zip": {
      "checksum": "c901af7b16c1b8c1be9321befc269650"
    },
    "www/KS_20191_Sumner_County.zip": {
      "checksum": "08cccb3d8ffd6ee5a7df87f05fe349df"
    },
    "www/KS_20195_Trego_County.zip": {
      "checksum": "17f2ad029f27ee97ccd977f048f9d072"
    },
    "www/KS_20197_Wabaunsee_County.zip": {
      "checksum": "cd90bea075e326642dc6d94db84335de"
    },
    "www/KS_20201_Washington_County.zip": {
      "checksum": "c753fd4f83869564820ced813a1ee2c3"
    },
    "www/KS_20209_Wyandotte_County.zip": {
      "checksum": "9770e6a360fdb5c916e05abb8d62cac4"
    },
    "www/KY_21001_Adair_County.zip": {
      "checksum": "e67188c917d87859ec5959f873dc6616"
    },
    "www/KY_21003_Allen_County.zip": {
      "checksum": "a463c508c8da12d2af70f72b488b99b9"
    },
    "www/KY_21007_Ballard_County.zip": {
      "checksum": "8e00bee8a2907b91a49a9be9b33fe2e1"
    },
    "www/KY_21009_Barren_County.zip": {
      "checksum": "47715bf431f5582b0120eac762d25887"
    },
    "www/KY_21011_Bath_County.zip": {
      "checksum": "f8fd1affb9655d8d769da39492c5e5a1"
    },
    "www/KY_21013_Bell_County.zip": {
      "checksum": "6c1e51f70729cd112e84309701dcddb6"
    },
    "www/KY_21015_Boone_County.zip": {
      "checksum": "01c8222b7eb377ff58ef267ecb825c0d"
    },
    "www/KY_21017_Bourbon_County.zip": {
      "checksum": "8328a289b5a36dd208e6a74ddd8e4de5"
    },
    "www/KY_21019_Boyd_County.zip": {
      "checksum": "b4815103ae115abe2cd0281f1a843c52"
    },
    "www/KY_21021_Boyle_County.zip": {
      "checksum": "022443c1fa6c3f2c9cb9148220f9c65f"
    },
    "www/KY_21023_Bracken_County.zip": {
      "checksum": "7c995e6faafcdc644b0c9fe40685fe8b"
    },
    "www/KY_21025_Breathitt_County.zip": {
      "checksum": "84c2d5a213d600ec8e4f7a88c2a35269"
    },
    "www/KY_21027_Breckinridge_County.zip": {
      "checksum": "13f7cf30da7d682681e9239f914a1cf7"
    },
    "www/KY_21029_Bullitt_County.zip": {
      "checksum": "095ce5130e5a753e462dcf89bef65d85"
    },
    "www/KY_21031_Butler_County.zip": {
      "checksum": "de108e758642dbfde8c123daf48df860"
    },
    "www/KY_21033_Caldwell_County.zip": {
      "checksum": "13c547f198ea41670eea265b1f18f414"
    },
    "www/KY_21035_Calloway_County.zip": {
      "checksum": "6208bcdccb1f24a1b87189acfc07f1c1"
    },
    "www/KY_21037_Campbell_County.zip": {
      "checksum": "817dd999ce8a59ab7466a2af1be4ef94"
    },
    "www/KY_21039_Carlisle_County.zip": {
      "checksum": "aa9f357d245ee118883998f84d646251"
    },
    "www/KY_21041_Carroll_County.zip": {
      "checksum": "7417690dd9e722eb017114a053ae6880"
    },
    "www/KY_21043_Carter_County.zip": {
      "checksum": "8871ab09ee671ec5897a50226e788c1f"
    },
    "www/KY_21045_Casey_County.zip": {
      "checksum": "87a4460b18f4fc5c798feb9dc88a98e2"
    },
    "www/KY_21047_Christian_County.zip": {
      "checksum": "f4db598b3f4310f689148b6e51a999fc"
    },
    "www/KY_21049_Clark_County.zip": {
      "checksum": "ad91c430bad1ff024d3ee8106339a88a"
    },
    "www/KY_21051_Clay_County.zip": {
      "checksum": "f950f6d0a749bc7a6f4d0aa28dadf1db"
    },
    "www/KY_21053_Clinton_County.zip": {
      "checksum": "421c3d93380b385db6877de6653de307"
    },
    "www/KY_21055_Crittenden_County.zip": {
      "checksum": "4b9fbdc792196b8f93bf5e68642f1035"
    },
    "www/KY_21057_Cumberland_County.zip": {
      "checksum": "fe94f7d268c046afb6cd598cd0f8593b"
    },
    "www/KY_21061_Edmonson_County.zip": {
      "checksum": "a34cc926d8dc54f472ccfa11b4a59567"
    },
    "www/KY_21063_Elliott_County.zip": {
      "checksum": "2b1d8d52810c84b03ae8aad69b074237"
    },
    "www/KY_21065_Estill_County.zip": {
      "checksum": "dd9991af3f56947457737ee77f0c95b7"
    },
    "www/KY_21069_Fleming_County.zip": {
      "checksum": "e1a1a3bd1b42ac32438d2f66d04f0de6"
    },
    "www/KY_21071_Floyd_County.zip": {
      "checksum": "a63c22afe3dad3126f7e9c414be8829a"
    },
    "www/KY_21073_Franklin_County.zip": {
      "checksum": "f41c33ba14ae9a75920576292bd10376"
    },
    "www/KY_21075_Fulton_County.zip": {
      "checksum": "5fe59179f65b83159ed1847f3d4e7dcd"
    },
    "www/KY_21077_Gallatin_County.zip": {
      "checksum": "4da96f9fa03c9d0e5a265cd74bd3db88"
    },
    "www/KY_21079_Garrard_County.zip": {
      "checksum": "d4966881eee3a90bf5141fe834c6ca51"
    },
    "www/KY_21081_Grant_County.zip": {
      "checksum": "aa8028a0a3b7120764b4a56fee22ed7c"
    },
    "www/KY_21083_Graves_County.zip": {
      "checksum": "29dfe2da585d3cbc1375a8dd698e6bde"
    },
    "www/KY_21085_Grayson_County.zip": {
      "checksum": "db2b6ddeaf4a03a6fd45e4bad558e148"
    },
    "www/KY_21087_Green_County.zip": {
      "checksum": "bfd9fd4a1cc08822b975ae5b777fd26c"
    },
    "www/KY_21089_Greenup_County.zip": {
      "checksum": "0b8228f56559b8ce197e757a8c19cc12"
    },
    "www/KY_21091_Hancock_County.zip": {
      "checksum": "f365a852a7dcd294da3c15be268383d7"
    },
    "www/KY_21093_Hardin_County.zip": {
      "checksum": "e56a3ad4172cfa2256b04fbd19ff7fc0"
    },
    "www/KY_21097_Harrison_County.zip": {
      "checksum": "00056bf0624e311b1ea4009eab8570c5"
    },
    "www/KY_21099_Hart_County.zip": {
      "checksum": "14bef0f992a10466fc9f5500758121c3"
    },
    "www/KY_21101_Henderson_County.zip": {
      "checksum": "19a1f6dbdb21974052c7f34563112faf"
    },
    "www/KY_21103_Henry_County.zip": {
      "checksum": "ba07472c04c93a51af49f24c11351be1"
    },
    "www/KY_21105_Hickman_County.zip": {
      "checksum": "1ad71b6b4f06f7eeb3c4664db93887a6"
    },
    "www/KY_21107_Hopkins_County.zip": {
      "checksum": "496a2c94a2534610e6b383c61c6edcf5"
    },
    "www/KY_21109_Jackson_County.zip": {
      "checksum": "c95c5cf836c72dee822a73b6e6a5834c"
    },
    "www/KY_21111_Jefferson_County.zip": {
      "checksum": "7835f4b4ac655685fda4956127c1b0c4"
    },
    "www/KY_21113_Jessamine_County.zip": {
      "checksum": "89cad42662f52b9429ebe8214f58f0c9"
    },
    "www/KY_21115_Johnson_County.zip": {
      "checksum": "1cad90f3fe4008bbb0123a0118e9e719"
    },
    "www/KY_21117_Kenton_County.zip": {
      "checksum": "7311b8853be8a945ca6c1e31b2913772"
    },
    "www/KY_21121_Knox_County.zip": {
      "checksum": "159fff4d6e4a9aa687a6ca5302f01831"
    },
    "www/KY_21123_Larue_County.zip": {
      "checksum": "cb0ce21e80db310e2dc5846ebbed344c"
    },
    "www/KY_21125_Laurel_County.zip": {
      "checksum": "80c47d76ea113a269ffd1a90f7e98e46"
    },
    "www/KY_21127_Lawrence_County.zip": {
      "checksum": "5cd1fdf61953d915ea9a11c290661625"
    },
    "www/KY_21129_Lee_County.zip": {
      "checksum": "3847dc0c1903f558b754cec97b6a8b92"
    },
    "www/KY_21131_Leslie_County.zip": {
      "checksum": "f6cb6655d90c75d79972a8054a1f9d61"
    },
    "www/KY_21133_Letcher_County.zip": {
      "checksum": "b4e82ef6dbceaf251770e773e2cf35ab"
    },
    "www/KY_21135_Lewis_County.zip": {
      "checksum": "8455d7feba5b15467063a3781c7ff903"
    },
    "www/KY_21137_Lincoln_County.zip": {
      "checksum": "650b4daf96d4bf4dfc255eb5227f36d9"
    },
    "www/KY_21139_Livingston_County.zip": {
      "checksum": "5a6c7921c2bc3f0a03e580e4379d4839"
    },
    "www/KY_21141_Logan_County.zip": {
      "checksum": "92b76498679b3b7cb3da932ddb1e0908"
    },
    "www/KY_21143_Lyon_County.zip": {
      "checksum": "cbf8e0f0f6bb2a0a322c8e287a57a8f0"
    },
    "www/KY_21145_McCracken_County.zip": {
      "checksum": "ab620b73d2fddb613162c9fe9011a612"
    },
    "www/KY_21147_McCreary_County.zip": {
      "checksum": "a364d05ce231be8deeadec8d8f2bf59a"
    },
    "www/KY_21149_McLean_County.zip": {
      "checksum": "8b79eca1e327a092d0d11ff82b014ce3"
    },
    "www/KY_21151_Madison_County.zip": {
      "checksum": "dace70b004229eae803681cc02f2a6de"
    },
    "www/KY_21153_Magoffin_County.zip": {
      "checksum": "2753d2c8838e4b5030fb82db0807f862"
    },
    "www/KY_21155_Marion_County.zip": {
      "checksum": "9d858c3a8cab072ce1e878aea4d56320"
    },
    "www/KY_21157_Marshall_County.zip": {
      "checksum": "e7f87dc64ebafc2a9d3090213e5998a5"
    },
    "www/KY_21159_Martin_County.zip": {
      "checksum": "c12bf778f3a8720b7612a80766ac40c3"
    },
    "www/KY_21161_Mason_County.zip": {
      "checksum": "6717565d483939efad728ea715a1e658"
    },
    "www/KY_21163_Meade_County.zip": {
      "checksum": "c2f75d9a91e6599dbcfce465330f7f5c"
    },
    "www/KY_21165_Menifee_County.zip": {
      "checksum": "c368dc4ab8619f2b452a388f328c89fd"
    },
    "www/KY_21167_Mercer_County.zip": {
      "checksum": "3c8de2e89613aa14ddcd5affe89680e4"
    },
    "www/KY_21169_Metcalfe_County.zip": {
      "checksum": "d8d8bbf1412e7597b09ef8d6fbf49125"
    },
    "www/KY_21171_Monroe_County.zip": {
      "checksum": "32ad3aeb4ffcc9845fb41d3531bc61c8"
    },
    "www/KY_21173_Montgomery_County.zip": {
      "checksum": "6a94a9fb09d54ae9e941df60ae925900"
    },
    "www/KY_21175_Morgan_County.zip": {
      "checksum": "d68dcc3e34c78c68a9d7caac6c20ae7b"
    },
    "www/KY_21177_Muhlenberg_County.zip": {
      "checksum": "4f3b2fbd620032645b9eed832d891886"
    },
    "www/KY_21179_Nelson_County.zip": {
      "checksum": "3dc1102e5c30897e61118fda69abc9ec"
    },
    "www/KY_21181_Nicholas_County.zip": {
      "checksum": "0c7047c06b635526e1747a26dafe9c01"
    },
    "www/KY_21183_Ohio_County.zip": {
      "checksum": "c7b6d6d1dd9e97bf98f5e29d22ac9fba"
    },
    "www/KY_21185_Oldham_County.zip": {
      "checksum": "84b52276a49a2cf2b9816ad5817b806e"
    },
    "www/KY_21187_Owen_County.zip": {
      "checksum": "aae58534ac5afd936f82a54c2d8c0ae3"
    },
    "www/KY_21189_Owsley_County.zip": {
      "checksum": "82c2b2f810dfde25c3e4b3df675bf02c"
    },
    "www/KY_21191_Pendleton_County.zip": {
      "checksum": "7a49cdbe83ce1dba54c9753c09346029"
    },
    "www/KY_21195_Pike_County.zip": {
      "checksum": "edbc61ee11f13d74d45764e4294a47fc"
    },
    "www/KY_21197_Powell_County.zip": {
      "checksum": "a5fcc8cd58812611b6547157eba1bb4a"
    },
    "www/KY_21199_Pulaski_County.zip": {
      "checksum": "1772d6978c785566beac1ceb3163dcad"
    },
    "www/KY_21201_Robertson_County.zip": {
      "checksum": "3f7e6b6c05b26c71d4599a3b15271589"
    },
    "www/KY_21203_Rockcastle_County.zip": {
      "checksum": "daed4ecbb2c3dd53dea5b04ecbd8c7b9"
    },
    "www/KY_21205_Rowan_County.zip": {
      "checksum": "e9085a6c2c7fd75f5c65ab9cec838679"
    },
    "www/KY_21207_Russell_County.zip": {
      "checksum": "f5846cb4aada037cf78090db57fdb3c2"
    },
    "www/KY_21209_Scott_County.zip": {
      "checksum": "6e80ccf7a3c00edffb0e2eaddbdfb98f"
    },
    "www/KY_21211_Shelby_County.zip": {
      "checksum": "1dc654ad8d9192620fcc7dca1ed39c81"
    },
    "www/KY_21213_Simpson_County.zip": {
      "checksum": "7f770041f69b6a4993fbe2bcf50cb67e"
    },
    "www/KY_21215_Spencer_County.zip": {
      "checksum": "257ba8c12139cc7ab24387260ebdb527"
    },
    "www/KY_21217_Taylor_County.zip": {
      "checksum": "d4a2b72af425f7cf82e79a743c7eb65d"
    },
    "www/KY_21219_Todd_County.zip": {
      "checksum": "fb25c306dba053147efe6854c933f509"
    },
    "www/KY_21221_Trigg_County.zip": {
      "checksum": "97cff88a70a82d95634faee09b311109"
    },
    "www/KY_21223_Trimble_County.zip": {
      "checksum": "7c5534b1d1b3126187b558d554d155b9"
    },
    "www/KY_21225_Union_County.zip": {
      "checksum": "b338b7bddf936853ef13220846552223"
    },
    "www/KY_21227_Warren_County.zip": {
      "checksum": "23cac1ce5ba9d92ff62214948e98d495"
    },
    "www/KY_21229_Washington_County.zip": {
      "checksum": "d5fd4acc0e3f2282e4ae7381235772b2"
    },
    "www/KY_21231_Wayne_County.zip": {
      "checksum": "c6e498e21770ed02141c266ef161a7ba"
    },
    "www/KY_21233_Webster_County.zip": {
      "checksum": "d9223254aa20e829d7b3382a539c3d30"
    },
    "www/KY_21235_Whitley_County.zip": {
      "checksum": "6d6da7ca765f1cfce5ea0278aad43c22"
    },
    "www/KY_21237_Wolfe_County.zip": {
      "checksum": "b0807762a9f52f9bebd4e8ac78ca6c15"
    },
    "www/LA_22003_Allen_Parish.zip": {
      "checksum": "d4bde57552973019595c52ccdd3d16b0"
    },
    "www/LA_22005_Ascension_Parish.zip": {
      "checksum": "625edd17a0b57428a572ea291e291735"
    },
    "www/LA_22007_Assumption_Parish.zip": {
      "checksum": "69761c7cdcaf1432543d5779381eaee0"
    },
    "www/LA_22009_Avoyelles_Parish.zip": {
      "checksum": "627e9307977d150d91b32f074768c551"
    },
    "www/LA_22011_Beauregard_Parish.zip": {
      "checksum": "d6083d39adc86bd754dfa05bbc14a020"
    },
    "www/LA_22013_Bienville_Parish.zip": {
      "checksum": "a854f6070dd317ceb8275654e112d16e"
    },
    "www/LA_22015_Bossier_Parish.zip": {
      "checksum": "57dc8fa09b78d3e65cc8140ae8cddae4"
    },
    "www/LA_22017_Caddo_Parish.zip": {
      "checksum": "3c3099312677b83d71ed8eb9295f8a9a"
    },
    "www/LA_22019_Calcasieu_Parish.zip": {
      "checksum": "0a6edbd3dc4e9a5304d34dfe48d76f88"
    },
    "www/LA_22021_Caldwell_Parish.zip": {
      "checksum": "0652942d7120e00ae462b7c3f0f64e06"
    },
    "www/LA_22027_Claiborne_Parish.zip": {
      "checksum": "0347b84448d3d4bcc2e23a246c188568"
    },
    "www/LA_22031_De_Soto_Parish.zip": {
      "checksum": "212ab1f2de47b0f418abdfa1bf3f0e84"
    },
    "www/LA_22033_East_Baton_Rouge_Parish.zip": {
      "checksum": "1e10333425375993ede44531fffd804f"
    },
    "www/LA_22037_East_Feliciana_Parish.zip": {
      "checksum": "2db87fb225d0ec9498ea9a48d2c61e71"
    },
    "www/LA_22045_Iberia_Parish.zip": {
      "checksum": "e245be175b6fd09fe6c2c55540fe6536"
    },
    "www/LA_22047_Iberville_Parish.zip": {
      "checksum": "377062081dc298732591440b02ec7dda"
    },
    "www/LA_22049_Jackson_Parish.zip": {
      "checksum": "c044ae07577bc6660162bead412e1df4"
    },
    "www/LA_22051_Jefferson_Parish.zip": {
      "checksum": "1e764bf42f3056d5a8ebbff208fe6c17"
    },
    "www/LA_22053_Jefferson_Davis_Parish.zip": {
      "checksum": "65e08696c3131e8d4105df105606449f"
    },
    "www/LA_22055_Lafayette_Parish.zip": {
      "checksum": "cac37c8071f99d949dfc8e2fbfc4f0c5"
    },
    "www/LA_22057_Lafourche_Parish.zip": {
      "checksum": "7761a41d10ee4bf8ef21853f63f10860"
    },
    "www/LA_22061_Lincoln_Parish.zip": {
      "checksum": "4b415818fc0b712b7d5a8c122df9fc8e"
    },
    "www/LA_22063_Livingston_Parish.zip": {
      "checksum": "31d6be9a7ae75d30eff93e8c32b8df9f"
    },
    "www/LA_22065_Madison_Parish.zip": {
      "checksum": "88eb531e37d85a824d2344b9aeb4279f"
    },
    "www/LA_22069_Natchitoches_Parish.zip": {
      "checksum": "a347d7fc85cd6400e89de1bd6c6596c1"
    },
    "www/LA_22071_Orleans_Parish.zip": {
      "checksum": "23667b404897f493e0b71002c1da1819"
    },
    "www/LA_22073_Ouachita_Parish.zip": {
      "checksum": "63788c853d4ade5f63060c38b676ec5b"
    },
    "www/LA_22075_Plaquemines_Parish.zip": {
      "checksum": "f4205527a06410ef0e3d2f30697e363b"
    },
    "www/LA_22079_Rapides_Parish.zip": {
      "checksum": "399a42b17ee0e5783168fc4b46989792"
    },
    "www/LA_22081_Red_River_Parish.zip": {
      "checksum": "ebe1226a9603788865018d4492c57282"
    },
    "www/LA_22085_Sabine_Parish.zip": {
      "checksum": "f11570a87a5f4e8944c41b2b9c8adc09"
    },
    "www/LA_22089_St._Charles_Parish.zip": {
      "checksum": "69293c79ce33ef98175e34baea370b68"
    },
    "www/LA_22091_St._Helena_Parish.zip": {
      "checksum": "9a59b40213de315f72fb5fbae1b06df9"
    },
    "www/LA_22095_St._John_the_Baptist_Parish.zip": {
      "checksum": "e95a1e53b0bbaaab07e77c733c1c1ff2"
    },
    "www/LA_22099_St._Martin_Parish.zip": {
      "checksum": "b7da05b7e0610d0ed8f8495b8a4f8915"
    },
    "www/LA_22101_St._Mary_Parish.zip": {
      "checksum": "d2ebe43385e9559ca2938d645d9f3b93"
    },
    "www/LA_22103_St._Tammany_Parish.zip": {
      "checksum": "dfa7a9e16118780f985db689d529e871"
    },
    "www/LA_22105_Tangipahoa_Parish.zip": {
      "checksum": "f7f1bae9c0a78d9199c3b07a35563481"
    },
    "www/LA_22109_Terrebonne_Parish.zip": {
      "checksum": "498e03459d6247f47becf63482d72bbc"
    },
    "www/LA_22111_Union_Parish.zip": {
      "checksum": "d7b43e7d8f587578fff06aaad9d19b08"
    },
    "www/LA_22113_Vermilion_Parish.zip": {
      "checksum": "35c8dcc5caf727f6740cce334404fd21"
    },
    "www/LA_22115_Vernon_Parish.zip": {
      "checksum": "354e1dfe288e674e5fd544ee9ad426f5"
    },
    "www/LA_22117_Washington_Parish.zip": {
      "checksum": "adb55f920905cbd1650e92e12ba499ca"
    },
    "www/LA_22119_Webster_Parish.zip": {
      "checksum": "4f9528693aae5615966fc310b6dcc93a"
    },
    "www/LA_22121_West_Baton_Rouge_Parish.zip": {
      "checksum": "4c4cac179b67fd2948656cac2b991426"
    },
    "www/LA_22125_West_Feliciana_Parish.zip": {
      "checksum": "1de1a170ac9f3d1cae2092a41f32bf90"
    },
    "www/MA_25001_Barnstable_County.zip": {
      "checksum": "6125be120428304cee47de8f9e025c44"
    },
    "www/MA_25003_Berkshire_County.zip": {
      "checksum": "73ceb77bdf1ec58bab298788f5dcfb14"
    },
    "www/MA_25005_Bristol_County.zip": {
      "checksum": "3cc0c4d91ee429b1fb6ee98642352c24"
    },
    "www/MA_25007_Dukes_County.zip": {
      "checksum": "c9215b1b1c02e9e1f06ec5b5f5197c1b"
    },
    "www/MA_25009_Essex_County.zip": {
      "checksum": "edc421996511ed388a5848a3e86d5d2a"
    },
    "www/MA_25011_Franklin_County.zip": {
      "checksum": "f7bed00457afc11b20a20ff93f782bfa"
    },
    "www/MA_25013_Hampden_County.zip": {
      "checksum": "6e111a90be605c08b6c0801cde0f355c"
    },
    "www/MA_25015_Hampshire_County.zip": {
      "checksum": "900d595b396aae25632f937aa17e1709"
    },
    "www/MA_25017_Middlesex_County.zip": {
      "checksum": "85063ddd8b1ba9bf2dae6d47e8f3b10b"
    },
    "www/MA_25019_Nantucket_County.zip": {
      "checksum": "97395361e174b55df9b4e4ca6d22957d"
    },
    "www/MA_25021_Norfolk_County.zip": {
      "checksum": "385c5885899095c1f856a9dfba6d0b6e"
    },
    "www/MA_25023_Plymouth_County.zip": {
      "checksum": "733eee782deb5e4de0318d24310cb733"
    },
    "www/MA_25025_Suffolk_County.zip": {
      "checksum": "080cef4e4c7c73017f653e5916207322"
    },
    "www/MA_25027_Worcester_County.zip": {
      "checksum": "80779de16629acf5f68497a5c2b3eddd"
    },
    "www/MD_24001_Allegany_County.zip": {
      "checksum": "b4f4c7c3516f211b7718cc77ee6dd997"
    },
    "www/MD_24003_Anne_Arundel_County.zip": {
      "checksum": "ee269f5e7df9c8f52e987a68cb3b1e84"
    },
    "www/MD_24005_Baltimore_County.zip": {
      "checksum": "f249c2c67971201be53dd3831bdabd83"
    },
    "www/MD_24009_Calvert_County.zip": {
      "checksum": "152a0440fc57b3aaa8e2b561ffc222ed"
    },
    "www/MD_24011_Caroline_County.zip": {
      "checksum": "2b21d5fe0bacb66fd55d43a9d5edf2ab"
    },
    "www/MD_24013_Carroll_County.zip": {
      "checksum": "0e7d3817feaee445d49f2dbd89f27704"
    },
    "www/MD_24015_Cecil_County.zip": {
      "checksum": "dd2ee17f750e4644851d14781d65d778"
    },
    "www/MD_24017_Charles_County.zip": {
      "checksum": "0db1f1b46b372d7024d18c7854ced2aa"
    },
    "www/MD_24019_Dorchester_County.zip": {
      "checksum": "f36946d2ae131c69e7d093f5f315d71a"
    },
    "www/MD_24021_Frederick_County.zip": {
      "checksum": "df3b1fcdb2e75d7d607c323cb3a00634"
    },
    "www/MD_24023_Garrett_County.zip": {
      "checksum": "bde61aa4b142606f83ac39ea6a278ce2"
    },
    "www/MD_24025_Harford_County.zip": {
      "checksum": "c5f3d3e987b31c70dec87b5a477bc538"
    },
    "www/MD_24027_Howard_County.zip": {
      "checksum": "235012580cfed5b909cde22dbe63e72d"
    },
    "www/MD_24029_Kent_County.zip": {
      "checksum": "aba9bf24649466ed1de99a338c22b77e"
    },
    "www/MD_24031_Montgomery_County.zip": {
      "checksum": "c67d0fa81527bcdd5f6ebc914be8e6a7"
    },
    "www/MD_24033_Prince_George's_County.zip": {
      "checksum": "af34e1cdfcc0d90855a276bebaadd248"
    },
    "www/MD_24035_Queen_Anne's_County.zip": {
      "checksum": "b66eef7e5f160a6fffae2e77c73a608a"
    },
    "www/MD_24037_St._Mary's_County.zip": {
      "checksum": "aba953502454ea06e85f938a338ebd51"
    },
    "www/MD_24039_Somerset_County.zip": {
      "checksum": "0150657de6b2876874854faf60e90795"
    },
    "www/MD_24041_Talbot_County.zip": {
      "checksum": "13bbfe075fdcb58ba92c97e596375f3e"
    },
    "www/MD_24043_Washington_County.zip": {
      "checksum": "9b00e12dcbed02ceebee0fcb1453043b"
    },
    "www/MD_24045_Wicomico_County.zip": {
      "checksum": "3f2e18963567ded922905a7ecd515a2d"
    },
    "www/MD_24047_Worcester_County.zip": {
      "checksum": "44b4bd9e55faf2ee3f565f64b377c5e7"
    },
    "www/MD_24510_Baltimore_city.zip": {
      "checksum": "723855c52300a848e93e4cfaf143035d"
    },
    "www/ME_23001_Androscoggin_County.zip": {
      "checksum": "926977325c169df023f71e55b76a4e74"
    },
    "www/ME_23003_Aroostook_County.zip": {
      "checksum": "0ac4b5a842bd7dffd94d93885d4f8ab8"
    },
    "www/ME_23005_Cumberland_County.zip": {
      "checksum": "0763aea662449ac11557931b4a3658a7"
    },
    "www/ME_23007_Franklin_County.zip": {
      "checksum": "5cc1878c8f19ec111bcece3d0d220297"
    },
    "www/ME_23009_Hancock_County.zip": {
      "checksum": "2b0ac85b0cd10179ea6d6d253cf09827"
    },
    "www/ME_23011_Kennebec_County.zip": {
      "checksum": "e5e62162f066cb4f992183cc90d00d32"
    },
    "www/ME_23013_Knox_County.zip": {
      "checksum": "0d2b7edcb247949ca9588e0775b70f59"
    },
    "www/ME_23015_Lincoln_County.zip": {
      "checksum": "197a9b67a79a97a7d0c1471431517f60"
    },
    "www/ME_23017_Oxford_County.zip": {
      "checksum": "d3c58d3e554845fa02531f93054d5ea0"
    },
    "www/ME_23019_Penobscot_County.zip": {
      "checksum": "e5e0ea43650bd05894ebb5efe79f3c26"
    },
    "www/ME_23021_Piscataquis_County.zip": {
      "checksum": "b61d4d278dd59bd814b04ce4560b76ca"
    },
    "www/ME_23023_Sagadahoc_County.zip": {
      "checksum": "79298e71fec83cd9ed20fafd492d70b4"
    },
    "www/ME_23025_Somerset_County.zip": {
      "checksum": "5d32f4bd8cbec39b2783a931c1243a6c"
    },
    "www/ME_23027_Waldo_County.zip": {
      "checksum": "79a98163974e82c086373c09eafb2be2"
    },
    "www/ME_23029_Washington_County.zip": {
      "checksum": "e875147696b08d0ffb1954213d96efc0"
    },
    "www/ME_23031_York_County.zip": {
      "checksum": "1b46bf3ccd2b9f129cd16ba80b3c8222"
    },
    "www/MI_26001_Alcona_County.zip": {
      "checksum": "cafd3e6630b6714a3d81ccd63ea45bbc"
    },
    "www/MI_26003_Alger_County.zip": {
      "checksum": "d8311e07841c28808039ba844836d001"
    },
    "www/MI_26005_Allegan_County.zip": {
      "checksum": "0413e1889ab723c25e156049cb0c6178"
    },
    "www/MI_26007_Alpena_County.zip": {
      "checksum": "79e8938ee21c695e4128788e0efb1e78"
    },
    "www/MI_26009_Antrim_County.zip": {
      "checksum": "7c3f53c2ed1da5778bfa54d61399d07f"
    },
    "www/MI_26011_Arenac_County.zip": {
      "checksum": "c9d04746c1db2599e819687e12420997"
    },
    "www/MI_26013_Baraga_County.zip": {
      "checksum": "23c9dc284940dfee9a4763c843fb7ced"
    },
    "www/MI_26015_Barry_County.zip": {
      "checksum": "1113cc3a94f3207edad5bac39d169362"
    },
    "www/MI_26017_Bay_County.zip": {
      "checksum": "e8a996da30213b05a8e99520e7fe50c5"
    },
    "www/MI_26019_Benzie_County.zip": {
      "checksum": "fbdc312554475a33d74e82fa286d5700"
    },
    "www/MI_26021_Berrien_County.zip": {
      "checksum": "0829c53003e6d1e0ed888671b73f6686"
    },
    "www/MI_26023_Branch_County.zip": {
      "checksum": "9cbf05f1ca3d4f5df1c7cd37adb0a69c"
    },
    "www/MI_26025_Calhoun_County.zip": {
      "checksum": "61703d101fb367631141640a9622b4a8"
    },
    "www/MI_26027_Cass_County.zip": {
      "checksum": "1b645a4fa1f759e3a3216c36257ef6dd"
    },
    "www/MI_26029_Charlevoix_County.zip": {
      "checksum": "d8380cd1a64fa06e766c90a04a4087a7"
    },
    "www/MI_26031_Cheboygan_County.zip": {
      "checksum": "cb9bcdf2d081db10bfca13ab89e73e58"
    },
    "www/MI_26033_Chippewa_County.zip": {
      "checksum": "40290dc3caba96b4b7e9a23dd08d9408"
    },
    "www/MI_26035_Clare_County.zip": {
      "checksum": "a75c137fa22d22246ce5b2a3ecb3c291"
    },
    "www/MI_26037_Clinton_County.zip": {
      "checksum": "0e89f9fadf1be13ffacf411789c9378c"
    },
    "www/MI_26039_Crawford_County.zip": {
      "checksum": "ab4554ad386dffe11284e9a6fcb8dfcf"
    },
    "www/MI_26041_Delta_County.zip": {
      "checksum": "846ef328a3356de75fd929e5258c0f8c"
    },
    "www/MI_26043_Dickinson_County.zip": {
      "checksum": "fa5769dbb1d24b22ae4860f46eb657d2"
    },
    "www/MI_26045_Eaton_County.zip": {
      "checksum": "e3642ad15459f6f8baa848d31b1d09bd"
    },
    "www/MI_26047_Emmet_County.zip": {
      "checksum": "e91e9a445fc8a59589f1729443d79c5d"
    },
    "www/MI_26049_Genesee_County.zip": {
      "checksum": "e59cb97c4b54081e6998dd5638833895"
    },
    "www/MI_26051_Gladwin_County.zip": {
      "checksum": "692e193da85392b81245a1ba952b05cd"
    },
    "www/MI_26055_Grand_Traverse_County.zip": {
      "checksum": "9b895c49156a04285f6b2b2deac78f34"
    },
    "www/MI_26057_Gratiot_County.zip": {
      "checksum": "83c78b9b29e4777f125b1957bad902ad"
    },
    "www/MI_26059_Hillsdale_County.zip": {
      "checksum": "ab4e7fd1ef101ab31d5ef4573b0cec36"
    },
    "www/MI_26061_Houghton_County.zip": {
      "checksum": "4f9e4ef2ec1944e8659898c504ad2ec0"
    },
    "www/MI_26065_Ingham_County.zip": {
      "checksum": "3d0733f23b3578f49321a1d7f4d2d265"
    },
    "www/MI_26067_Ionia_County.zip": {
      "checksum": "d97bfe3cdd3c8828b26da5cbccb483c7"
    },
    "www/MI_26069_Iosco_County.zip": {
      "checksum": "e32cf65e278b3153b60fd29a5feb5278"
    },
    "www/MI_26071_Iron_County.zip": {
      "checksum": "cdef5738a87dca887630224f3cd455a9"
    },
    "www/MI_26073_Isabella_County.zip": {
      "checksum": "ce2dbaddd62310ada7af9f100f79649e"
    },
    "www/MI_26075_Jackson_County.zip": {
      "checksum": "a3e63106a147be14f1b342b2b50ac0ef"
    },
    "www/MI_26077_Kalamazoo_County.zip": {
      "checksum": "b03ca9e937629956d23ea8db77ce303d"
    },
    "www/MI_26079_Kalkaska_County.zip": {
      "checksum": "026f363a41efd62fa2b7e2cb57880471"
    },
    "www/MI_26081_Kent_County.zip": {
      "checksum": "485da7f6766aaf25ecbf291efc732fc3"
    },
    "www/MI_26083_Keweenaw_County.zip": {
      "checksum": "49d392df1310aa3959aa8c897bf13738"
    },
    "www/MI_26085_Lake_County.zip": {
      "checksum": "99a2e513e46cad56932c515a55d0e8fc"
    },
    "www/MI_26087_Lapeer_County.zip": {
      "checksum": "4ba09080dc4a8c66e6f13437c288a466"
    },
    "www/MI_26089_Leelanau_County.zip": {
      "checksum": "1fe4767f35102ebadc0a362801b5fa69"
    },
    "www/MI_26091_Lenawee_County.zip": {
      "checksum": "59b52e3a5f915e3dcd1bbce5914e8294"
    },
    "www/MI_26093_Livingston_County.zip": {
      "checksum": "607c40196a85708f5c77666f7fd08936"
    },
    "www/MI_26095_Luce_County.zip": {
      "checksum": "2cae8bbbd761f92327b567ebddf4cf98"
    },
    "www/MI_26097_Mackinac_County.zip": {
      "checksum": "3143abd8ad9f1d2e6b0477e8055a511c"
    },
    "www/MI_26099_Macomb_County.zip": {
      "checksum": "d6fc1cf2d72a1aca819d687f82910bde"
    },
    "www/MI_26101_Manistee_County.zip": {
      "checksum": "3daf9b1683132e18ef6e4fc1d4e0d7b3"
    },
    "www/MI_26103_Marquette_County.zip": {
      "checksum": "18846abf4b6bb90f60b1b96bf8da1922"
    },
    "www/MI_26105_Mason_County.zip": {
      "checksum": "665e55969d2aa605638decfe11122daf"
    },
    "www/MI_26107_Mecosta_County.zip": {
      "checksum": "a3f162ec030281be8db754666ed007ae"
    },
    "www/MI_26109_Menominee_County.zip": {
      "checksum": "76f4ea4bccfcc746e8d310ecfbc3cfa8"
    },
    "www/MI_26111_Midland_County.zip": {
      "checksum": "4811b2dfa942d06ef980e88220cea3dc"
    },
    "www/MI_26113_Missaukee_County.zip": {
      "checksum": "a6983b3a6cb077d60b5881c59c2b0a6b"
    },
    "www/MI_26115_Monroe_County.zip": {
      "checksum": "18afcb7e481ef1e0c797f33f4d688a54"
    },
    "www/MI_26117_Montcalm_County.zip": {
      "checksum": "93f6dcc0a7cb0951939b3d92c60dce86"
    },
    "www/MI_26119_Montmorency_County.zip": {
      "checksum": "39c568c5f6d02d48d89e4c812b539462"
    },
    "www/MI_26121_Muskegon_County.zip": {
      "checksum": "d98c0f08a3f7f6204d732e45e6b14e95"
    },
    "www/MI_26123_Newaygo_County.zip": {
      "checksum": "e509e32f21f602741f67640cf6a84b9a"
    },
    "www/MI_26125_Oakland_County.zip": {
      "checksum": "2f226d36fb46834954e18802cecea16d"
    },
    "www/MI_26127_Oceana_County.zip": {
      "checksum": "913bec6d7c57a65609b2ee6de452da2b"
    },
    "www/MI_26129_Ogemaw_County.zip": {
      "checksum": "c1cae661fba6b807b112d4aef9a7a375"
    },
    "www/MI_26131_Ontonagon_County.zip": {
      "checksum": "e5eb6879c8cdafddba1b0dac29f0014f"
    },
    "www/MI_26133_Osceola_County.zip": {
      "checksum": "49767008bde767a3f88dd82b5a9259b4"
    },
    "www/MI_26135_Oscoda_County.zip": {
      "checksum": "033ef34cf60d8dbf8526cd7f2457702a"
    },
    "www/MI_26137_Otsego_County.zip": {
      "checksum": "42e8accee1ca35a7e6fff418d51d7860"
    },
    "www/MI_26139_Ottawa_County.zip": {
      "checksum": "80c741ae23a84f97da28bc8395fab928"
    },
    "www/MI_26141_Presque_Isle_County.zip": {
      "checksum": "158d09272ec18100be84256f8a726ae5"
    },
    "www/MI_26143_Roscommon_County.zip": {
      "checksum": "46afcd6f979e29f5df9bdbeb4a5afa8c"
    },
    "www/MI_26145_Saginaw_County.zip": {
      "checksum": "5020e182e209c95b895c44fdb4ed0e80"
    },
    "www/MI_26147_St._Clair_County.zip": {
      "checksum": "4cb155d605e956cdf21e12dc06e1f04a"
    },
    "www/MI_26149_St._Joseph_County.zip": {
      "checksum": "56505167ee503cc50ed8e9e5193f0f20"
    },
    "www/MI_26151_Sanilac_County.zip": {
      "checksum": "bd12ea3ceff63c19272611f50249c365"
    },
    "www/MI_26155_Shiawassee_County.zip": {
      "checksum": "6a4a2d241037a2df690706eb35cc0a53"
    },
    "www/MI_26157_Tuscola_County.zip": {
      "checksum": "b45186b1b7ec2d96d5e0e10a96c64c94"
    },
    "www/MI_26159_Van_Buren_County.zip": {
      "checksum": "eec11768d534b6fb22cb9aa8e0ae8199"
    },
    "www/MI_26161_Washtenaw_County.zip": {
      "checksum": "3d73fd67a511cd7710ff622bfeb80c9a"
    },
    "www/MI_26163_Wayne_County.zip": {
      "checksum": "22345299769bb8f10438182b5b9e6e26"
    },
    "www/MI_26165_Wexford_County.zip": {
      "checksum": "dfb46d2d0339449582b30bc6b6c8a5df"
    },
    "www/MN_27001_Aitkin_County.zip": {
      "checksum": "405446286032fe41851a883e9db92377"
    },
    "www/MN_27003_Anoka_County.zip": {
      "checksum": "402abb631c11b2cd9cd0816ee24410f1"
    },
    "www/MN_27005_Becker_County.zip": {
      "checksum": "1a2dadd861349427fd3d3b4a06609cf0"
    },
    "www/MN_27007_Beltrami_County.zip": {
      "checksum": "265190d297184dbcf6fab676e7d412c4"
    },
    "www/MN_27009_Benton_County.zip": {
      "checksum": "f10b286fe6c725261c379ee662442ab1"
    },
    "www/MN_27011_Big_Stone_County.zip": {
      "checksum": "ce265c7b4fe3a1b7f00071125d3282ff"
    },
    "www/MN_27013_Blue_Earth_County.zip": {
      "checksum": "f8ed0d3ae5bf42399ce3b8a4b338cb09"
    },
    "www/MN_27015_Brown_County.zip": {
      "checksum": "8f56eeaf9fef8ee9971e9b0679c9ac38"
    },
    "www/MN_27017_Carlton_County.zip": {
      "checksum": "3c58bb9b72623cf935695984e1f686a2"
    },
    "www/MN_27019_Carver_County.zip": {
      "checksum": "d5d74f2b80fd33cc28bd47240d5bba1b"
    },
    "www/MN_27021_Cass_County.zip": {
      "checksum": "2c04f75a67536d11cd1b0daca679322b"
    },
    "www/MN_27023_Chippewa_County.zip": {
      "checksum": "75a3a53615c7912fe45f04f47b409626"
    },
    "www/MN_27025_Chisago_County.zip": {
      "checksum": "39b4926fdbfe3993a24c6cd8b189b82a"
    },
    "www/MN_27027_Clay_County.zip": {
      "checksum": "0b4ca7ddc666f69a3479e09b2a455137"
    },
    "www/MN_27029_Clearwater_County.zip": {
      "checksum": "85cc06013315dcc5c4fa28918834c9e9"
    },
    "www/MN_27031_Cook_County.zip": {
      "checksum": "535e6c2581f69bf333dd15298da824a9"
    },
    "www/MN_27033_Cottonwood_County.zip": {
      "checksum": "f8097e578f54a4dd120d6c1bee066bbb"
    },
    "www/MN_27035_Crow_Wing_County.zip": {
      "checksum": "d744d29a92b2879a9e77327dbee8092f"
    },
    "www/MN_27037_Dakota_County.zip": {
      "checksum": "a524b9327d42d38255621397592bbcf2"
    },
    "www/MN_27039_Dodge_County.zip": {
      "checksum": "9d36db2f8cb7fa11844cc3e4721d64d1"
    },
    "www/MN_27041_Douglas_County.zip": {
      "checksum": "3e46445c45f360475e7fda4061487e0b"
    },
    "www/MN_27043_Faribault_County.zip": {
      "checksum": "4ebfb2f8c0021c494e568cb38575295c"
    },
    "www/MN_27045_Fillmore_County.zip": {
      "checksum": "5c1bd20b4263ca6fde92e3328abae00d"
    },
    "www/MN_27047_Freeborn_County.zip": {
      "checksum": "363e935a859be76ba0d52e58ad73f0df"
    },
    "www/MN_27049_Goodhue_County.zip": {
      "checksum": "328c94399ce6cef24044ae2be16e9bbd"
    },
    "www/MN_27051_Grant_County.zip": {
      "checksum": "eb2f4af34d23e3ea6fe0e528f8b67507"
    },
    "www/MN_27053_Hennepin_County.zip": {
      "checksum": "d0113241e60116ccda728bedef1583a3"
    },
    "www/MN_27055_Houston_County.zip": {
      "checksum": "ca2564893fb16ba45ec1eeeb9d7da20b"
    },
    "www/MN_27057_Hubbard_County.zip": {
      "checksum": "be2e30944fac139e1e6ec8926e5b760f"
    },
    "www/MN_27059_Isanti_County.zip": {
      "checksum": "962f3a8e6c23f2c3fa2943d14cd76274"
    },
    "www/MN_27061_Itasca_County.zip": {
      "checksum": "3840f40075358c2c83251d63c5686bdb"
    },
    "www/MN_27063_Jackson_County.zip": {
      "checksum": "ac303e2297e5abcf82d9d75d7a8d88a8"
    },
    "www/MN_27065_Kanabec_County.zip": {
      "checksum": "b1cc40794f67d05cea65206129331866"
    },
    "www/MN_27067_Kandiyohi_County.zip": {
      "checksum": "27dd1736c805393f7b136c7381322659"
    },
    "www/MN_27069_Kittson_County.zip": {
      "checksum": "5aef0fea30d425ee0cf5797a572bbcb3"
    },
    "www/MN_27071_Koochiching_County.zip": {
      "checksum": "c30ab0c9e8fbaff635c584e0ce79349f"
    },
    "www/MN_27073_Lac_qui_Parle_County.zip": {
      "checksum": "aa318ca7852b4bc897fa10922069135d"
    },
    "www/MN_27075_Lake_County.zip": {
      "checksum": "608c805465ac5143b4488e25191a189b"
    },
    "www/MN_27077_Lake_of_the_Woods_County.zip": {
      "checksum": "f5ffbd4a70885ab2ca26e5d9acd43160"
    },
    "www/MN_27079_Le_Sueur_County.zip": {
      "checksum": "f88a1d8cfc86b1775acbd3d7a392d460"
    },
    "www/MN_27081_Lincoln_County.zip": {
      "checksum": "2e0415c9d2835286342b808bd7953593"
    },
    "www/MN_27083_Lyon_County.zip": {
      "checksum": "82163fe03c0415852f9f937c94f0d917"
    },
    "www/MN_27085_McLeod_County.zip": {
      "checksum": "9625e8e8cb358f506d66abaa809cf691"
    },
    "www/MN_27087_Mahnomen_County.zip": {
      "checksum": "b4fc738a798c6ec5aa65cdaa550f5c38"
    },
    "www/MN_27089_Marshall_County.zip": {
      "checksum": "eca47eef3fd31378e9de18e1ac13ccdf"
    },
    "www/MN_27091_Martin_County.zip": {
      "checksum": "345e77348847b922acb4d41860e569e5"
    },
    "www/MN_27093_Meeker_County.zip": {
      "checksum": "39c0846ff9dbc7d8fe98799186eab3ac"
    },
    "www/MN_27095_Mille_Lacs_County.zip": {
      "checksum": "dfb26c039f7ed3a1757b4c5451bbfb35"
    },
    "www/MN_27097_Morrison_County.zip": {
      "checksum": "712c72c7366923cca97052e76195ce42"
    },
    "www/MN_27099_Mower_County.zip": {
      "checksum": "bdb447d61c185ba0ebba687fe08faabf"
    },
    "www/MN_27101_Murray_County.zip": {
      "checksum": "a1417dc037d768119a14e5ff72cc991a"
    },
    "www/MN_27103_Nicollet_County.zip": {
      "checksum": "a24e0d02af76e5ddb4e44020064570bc"
    },
    "www/MN_27105_Nobles_County.zip": {
      "checksum": "22442951055db485d94e461782753ba1"
    },
    "www/MN_27107_Norman_County.zip": {
      "checksum": "86cc3aec9dcedd9ad9a71d6dc1547205"
    },
    "www/MN_27109_Olmsted_County.zip": {
      "checksum": "de93160aa166cd51cf4c652456491bd9"
    },
    "www/MN_27111_Otter_Tail_County.zip": {
      "checksum": "ca20f93069bd2def6e2ccf470b10bda8"
    },
    "www/MN_27113_Pennington_County.zip": {
      "checksum": "737d5a0b70a46d018dd470fab981be47"
    },
    "www/MN_27115_Pine_County.zip": {
      "checksum": "339eabbe84ca88b410059e6c63cb7b8b"
    },
    "www/MN_27117_Pipestone_County.zip": {
      "checksum": "ce52fef9185a09d08c4a23aca728851e"
    },
    "www/MN_27119_Polk_County.zip": {
      "checksum": "de7109500eb4d45c2ee14071e761061c"
    },
    "www/MN_27121_Pope_County.zip": {
      "checksum": "6371d19e64c9e845d9201b3dd30130fb"
    },
    "www/MN_27123_Ramsey_County.zip": {
      "checksum": "1696d768738e3522e9208557d7309c3f"
    },
    "www/MN_27125_Red_Lake_County.zip": {
      "checksum": "5b1bf269a3d5ac7c39d19c656d9cf95f"
    },
    "www/MN_27127_Redwood_County.zip": {
      "checksum": "610d86f918ee3e7733d800cc3be6f63e"
    },
    "www/MN_27129_Renville_County.zip": {
      "checksum": "97cbcf985132732bfc02afe131639016"
    },
    "www/MN_27131_Rice_County.zip": {
      "checksum": "21e8b2efbdddae7b43e0a29e02e856b2"
    },
    "www/MN_27133_Rock_County.zip": {
      "checksum": "599d8d4938f973287ea976d174c483c0"
    },
    "www/MN_27135_Roseau_County.zip": {
      "checksum": "7a51eac293cf93a9a5359bd2e098700f"
    },
    "www/MN_27137_St._Louis_County.zip": {
      "checksum": "df1b46706431bbcfd9de3afdbfef0a38"
    },
    "www/MN_27139_Scott_County.zip": {
      "checksum": "61986669219c89e89094979b2624c275"
    },
    "www/MN_27141_Sherburne_County.zip": {
      "checksum": "92b05c847b75363c76592ba3def8dd09"
    },
    "www/MN_27143_Sibley_County.zip": {
      "checksum": "b8fc5f8cbfd01485abaed90bd7080958"
    },
    "www/MN_27145_Stearns_County.zip": {
      "checksum": "a352524b282b399981c32ce3067b9218"
    },
    "www/MN_27147_Steele_County.zip": {
      "checksum": "b80fb86313d289c38accf36c2403aea6"
    },
    "www/MN_27149_Stevens_County.zip": {
      "checksum": "a7d8e758e334f841933ae5902ce36fdd"
    },
    "www/MN_27151_Swift_County.zip": {
      "checksum": "ec7f838d20fa461e2925fb32fea3deb3"
    },
    "www/MN_27153_Todd_County.zip": {
      "checksum": "b110cde71fa4cae10e42f23aed2df2c2"
    },
    "www/MN_27155_Traverse_County.zip": {
      "checksum": "d6b196cf6761498f71eb874f48a5d2d8"
    },
    "www/MN_27157_Wabasha_County.zip": {
      "checksum": "9af95b05413500342fe01c6d2a2e564f"
    },
    "www/MN_27159_Wadena_County.zip": {
      "checksum": "d14543f943158eb2ec1b391761a6e7db"
    },
    "www/MN_27161_Waseca_County.zip": {
      "checksum": "6eb8eeaac5c8bd3f6dcdcdbd517ea524"
    },
    "www/MN_27163_Washington_County.zip": {
      "checksum": "3cc01da549496f56360ac99d4c0d7263"
    },
    "www/MN_27165_Watonwan_County.zip": {
      "checksum": "3bdc743b157b443c6474818b76f515f4"
    },
    "www/MN_27167_Wilkin_County.zip": {
      "checksum": "779412a094aaa295022073269a600b63"
    },
    "www/MN_27169_Winona_County.zip": {
      "checksum": "cf73293da915785a7e7cadf58ed0684f"
    },
    "www/MN_27171_Wright_County.zip": {
      "checksum": "7b40be9cc12e860ce8b78b7ad1395705"
    },
    "www/MN_27173_Yellow_Medicine_County.zip": {
      "checksum": "8d973af05c230dabd2a90c563a59e78c"
    },
    "www/MO_29001_Adair_County.zip": {
      "checksum": "332fd9dab5065da8958806bae6fb6c3d"
    },
    "www/MO_29003_Andrew_County.zip": {
      "checksum": "cd8cf439fe224e1c7574551b9a8c9351"
    },
    "www/MO_29005_Atchison_County.zip": {
      "checksum": "7dc8532cb2217c50a270ad55d5a63e3a"
    },
    "www/MO_29007_Audrain_County.zip": {
      "checksum": "3a2bd57a0cb8389f31ae5d2d146f72cd"
    },
    "www/MO_29009_Barry_County.zip": {
      "checksum": "2d2adcd889c63a683515a616cc1b5680"
    },
    "www/MO_29011_Barton_County.zip": {
      "checksum": "b183b46100ce86c306ceea33b054e1d3"
    },
    "www/MO_29013_Bates_County.zip": {
      "checksum": "8de5d15710b83f200130407e12006597"
    },
    "www/MO_29015_Benton_County.zip": {
      "checksum": "11a593e70cc2f491d84e35e91f32cb48"
    },
    "www/MO_29017_Bollinger_County.zip": {
      "checksum": "10b422b5c8d9403776ed70dde300f141"
    },
    "www/MO_29019_Boone_County.zip": {
      "checksum": "260e18f445e0c29bf74e655ba1df6e17"
    },
    "www/MO_29021_Buchanan_County.zip": {
      "checksum": "6c63993a34fb73794056110457d794c6"
    },
    "www/MO_29023_Butler_County.zip": {
      "checksum": "69e9ecaaf5696c71cfa28e9755184185"
    },
    "www/MO_29025_Caldwell_County.zip": {
      "checksum": "e1571ba62146bcdb7b6d3cc2e3d5f4a2"
    },
    "www/MO_29027_Callaway_County.zip": {
      "checksum": "6c40180880902ccbb69875b2aed13365"
    },
    "www/MO_29029_Camden_County.zip": {
      "checksum": "237a059966d9bc49d31edb44f517cd95"
    },
    "www/MO_29031_Cape_Girardeau_County.zip": {
      "checksum": "e2f7b6d6672b29e4902da577c65c8c14"
    },
    "www/MO_29035_Carter_County.zip": {
      "checksum": "a4a4a5f90534294d1a9b814f3c082fc3"
    },
    "www/MO_29037_Cass_County.zip": {
      "checksum": "0aa03ce28991c71649470b2ec56bedf2"
    },
    "www/MO_29039_Cedar_County.zip": {
      "checksum": "a2e89c824a5aff1aa805bf35368bef6f"
    },
    "www/MO_29041_Chariton_County.zip": {
      "checksum": "4da69ce588e94beb29740e44202d0bef"
    },
    "www/MO_29043_Christian_County.zip": {
      "checksum": "be55f0de96042fe5d75221c1032b5188"
    },
    "www/MO_29045_Clark_County.zip": {
      "checksum": "e74edb5a8519cdba559bbf69b670a85d"
    },
    "www/MO_29047_Clay_County.zip": {
      "checksum": "210a4e2782e98a61ee2a6c2f254287d7"
    },
    "www/MO_29049_Clinton_County.zip": {
      "checksum": "10f76a7577cf56c926d0f58d0aa0ee7b"
    },
    "www/MO_29051_Cole_County.zip": {
      "checksum": "df9432f688cf181b0a59f55f9cd7a624"
    },
    "www/MO_29053_Cooper_County.zip": {
      "checksum": "112afa62fa186e7ab84eca81bd55b1db"
    },
    "www/MO_29055_Crawford_County.zip": {
      "checksum": "c5c32ba71c1bd1404eb2bcc1ba711b5d"
    },
    "www/MO_29059_Dallas_County.zip": {
      "checksum": "8e4c52d68f25fb77da7f569c5f4c0c1d"
    },
    "www/MO_29063_DeKalb_County.zip": {
      "checksum": "197fc287e16c7e76a11cbb12ba7f1f40"
    },
    "www/MO_29065_Dent_County.zip": {
      "checksum": "678bcfdcccf1f29a7e927df4da996e86"
    },
    "www/MO_29067_Douglas_County.zip": {
      "checksum": "9e01eb47f4389371314c1443f63617cf"
    },
    "www/MO_29069_Dunklin_County.zip": {
      "checksum": "d7e80562272979bf397efe95dfa099cf"
    },
    "www/MO_29071_Franklin_County.zip": {
      "checksum": "5d8edbca0b52e010c307560ba793e61c"
    },
    "www/MO_29073_Gasconade_County.zip": {
      "checksum": "4e62930f8493a882d680138b3055b433"
    },
    "www/MO_29075_Gentry_County.zip": {
      "checksum": "3d8fe1ebd38835aa6b29400a026a4b3f"
    },
    "www/MO_29077_Greene_County.zip": {
      "checksum": "18aade8dd64253a2d5d0220352b577c4"
    },
    "www/MO_29079_Grundy_County.zip": {
      "checksum": "9a959bd3d3faec54d8a0771f8c7bd8fc"
    },
    "www/MO_29081_Harrison_County.zip": {
      "checksum": "6fcff4f7c9b2af3bfe4a548c94959a56"
    },
    "www/MO_29083_Henry_County.zip": {
      "checksum": "5da93be398d5116253867bd0bd34489d"
    },
    "www/MO_29087_Holt_County.zip": {
      "checksum": "c6e5a36700cddc30994c632cbcfbbc19"
    },
    "www/MO_29091_Howell_County.zip": {
      "checksum": "d26dfdbf48df9b9f6902913a5df87ae5"
    },
    "www/MO_29095_Jackson_County.zip": {
      "checksum": "ee2ee5e07956072cc234d53ab218be2c"
    },
    "www/MO_29097_Jasper_County.zip": {
      "checksum": "905519cb12df0c2a6e335e57527a5981"
    },
    "www/MO_29099_Jefferson_County.zip": {
      "checksum": "9ead1f9bec50aa890a5199aa5b92b1f4"
    },
    "www/MO_29101_Johnson_County.zip": {
      "checksum": "4a97fceb9f5132a26a725d749a069602"
    },
    "www/MO_29105_Laclede_County.zip": {
      "checksum": "129df3776cb704df2cc1844d02f00a51"
    },
    "www/MO_29107_Lafayette_County.zip": {
      "checksum": "72857c698ac6a575f5f4aec795345897"
    },
    "www/MO_29109_Lawrence_County.zip": {
      "checksum": "c2e2736c0bee195cf6564a541d68398f"
    },
    "www/MO_29111_Lewis_County.zip": {
      "checksum": "a74c4aa01081ef49485f4fb5c13d52af"
    },
    "www/MO_29113_Lincoln_County.zip": {
      "checksum": "953c6b8acf0aee5d8bdc39f6043debe3"
    },
    "www/MO_29115_Linn_County.zip": {
      "checksum": "ddac5920854d39c1df88ef37d83f792f"
    },
    "www/MO_29117_Livingston_County.zip": {
      "checksum": "077acf133dc7e9e2338c18e808ae6ce9"
    },
    "www/MO_29119_McDonald_County.zip": {
      "checksum": "49b9bb8b22c433c0a67557052db3486e"
    },
    "www/MO_29121_Macon_County.zip": {
      "checksum": "71ea21dd536adcfeaec6e70c6ffa698b"
    },
    "www/MO_29123_Madison_County.zip": {
      "checksum": "857496aa807dace3096e3d6ee6d2419d"
    },
    "www/MO_29125_Maries_County.zip": {
      "checksum": "24172c288b6ccfba616607a3352fd2f8"
    },
    "www/MO_29127_Marion_County.zip": {
      "checksum": "e1fa0f428dec3c70e924e8d2481f3e5c"
    },
    "www/MO_29131_Miller_County.zip": {
      "checksum": "e0e3aba562b0bd3d9ddb211b0e6cb792"
    },
    "www/MO_29133_Mississippi_County.zip": {
      "checksum": "1497bc1019aa961365748da3704870bd"
    },
    "www/MO_29135_Moniteau_County.zip": {
      "checksum": "7697ce703abd5517b2ddeb48ac1760e0"
    },
    "www/MO_29141_Morgan_County.zip": {
      "checksum": "53ff8d4049b8dd4dc66c114fdcf80176"
    },
    "www/MO_29143_New_Madrid_County.zip": {
      "checksum": "a64cfc34263438cad0bf34a2ae90bf12"
    },
    "www/MO_29145_Newton_County.zip": {
      "checksum": "02d5eb6f59489919bc76833268319656"
    },
    "www/MO_29153_Ozark_County.zip": {
      "checksum": "bd37d519008738ff087b2191f85871e7"
    },
    "www/MO_29155_Pemiscot_County.zip": {
      "checksum": "406bde3177e30a010a19e285f08207e8"
    },
    "www/MO_29157_Perry_County.zip": {
      "checksum": "7027c96862022c95bffce5d9fd138fac"
    },
    "www/MO_29159_Pettis_County.zip": {
      "checksum": "d8a0a683cb3da8eb8b26728dbcb8850d"
    },
    "www/MO_29161_Phelps_County.zip": {
      "checksum": "7d980735f995666d02faeea9e6d71c85"
    },
    "www/MO_29163_Pike_County.zip": {
      "checksum": "a8fb7deb6e41a45b0f3e41292c909778"
    },
    "www/MO_29165_Platte_County.zip": {
      "checksum": "e893affd68a5e6b4d25edec6b0bca9b6"
    },
    "www/MO_29167_Polk_County.zip": {
      "checksum": "986acf5b1c5017ea565510ae320f785d"
    },
    "www/MO_29169_Pulaski_County.zip": {
      "checksum": "7f40014147b2012fb98cb45a2493f0bd"
    },
    "www/MO_29171_Putnam_County.zip": {
      "checksum": "dbbab0b3a310a220831f3336de766068"
    },
    "www/MO_29173_Ralls_County.zip": {
      "checksum": "c551eff15089d8249b03e12f8f5a1d86"
    },
    "www/MO_29175_Randolph_County.zip": {
      "checksum": "0bde80c3143b7bb6aad27480e492703f"
    },
    "www/MO_29177_Ray_County.zip": {
      "checksum": "88da17d1c105dbc057a3d53deadd0792"
    },
    "www/MO_29179_Reynolds_County.zip": {
      "checksum": "47c354155666689857a8a90f10aa72a2"
    },
    "www/MO_29181_Ripley_County.zip": {
      "checksum": "42a7b40dfc2ba72c9dadf6197fbae37f"
    },
    "www/MO_29183_St._Charles_County.zip": {
      "checksum": "b53f9bb19d8c8badb54275414a3086f8"
    },
    "www/MO_29185_St._Clair_County.zip": {
      "checksum": "ddd59e1d89fa26d5383033d41b514926"
    },
    "www/MO_29186_Ste._Genevieve_County.zip": {
      "checksum": "1b51cb32b5e97397752a7eb2f783eb5b"
    },
    "www/MO_29187_St._Francois_County.zip": {
      "checksum": "5d5a70a760232905756d042c8b66a955"
    },
    "www/MO_29189_St._Louis_County.zip": {
      "checksum": "9332ed7d956f5b312e8a5ad86a49398d"
    },
    "www/MO_29195_Saline_County.zip": {
      "checksum": "c6c9c6731969aac2499323a2dbc4eaeb"
    },
    "www/MO_29201_Scott_County.zip": {
      "checksum": "00f5210ea04c5c85540f47ac678021b7"
    },
    "www/MO_29203_Shannon_County.zip": {
      "checksum": "da5fea6a7cb0485016d0fb4ab3071edb"
    },
    "www/MO_29205_Shelby_County.zip": {
      "checksum": "092b65d68542c8b29083f44db886aca9"
    },
    "www/MO_29207_Stoddard_County.zip": {
      "checksum": "895831b2178789b42acbad5a8e00ba50"
    },
    "www/MO_29209_Stone_County.zip": {
      "checksum": "0bc8c631c5f0debae340ab222db6bed0"
    },
    "www/MO_29211_Sullivan_County.zip": {
      "checksum": "b7c24275a5374b8e2dd54a8dae6ac287"
    },
    "www/MO_29213_Taney_County.zip": {
      "checksum": "d83f3da3487bd3dbd573e0ff8f9678d9"
    },
    "www/MO_29217_Vernon_County.zip": {
      "checksum": "7574219ca8b8c4cf95e41ecb0235ec4f"
    },
    "www/MO_29219_Warren_County.zip": {
      "checksum": "1be168e2c919f7d1d15adb9bcd97f3b8"
    },
    "www/MO_29221_Washington_County.zip": {
      "checksum": "5d6692d4ecb50e98e5c3bd8e413346e8"
    },
    "www/MO_29223_Wayne_County.zip": {
      "checksum": "2ee3924867cfe25f48ffea86b8a93de8"
    },
    "www/MO_29225_Webster_County.zip": {
      "checksum": "63260d370a547ff96a13072f054da09a"
    },
    "www/MO_29229_Wright_County.zip": {
      "checksum": "b45c2b0798def78e38f1dc0b87e845db"
    },
    "www/MO_29510_St._Louis_city.zip": {
      "checksum": "d22896a11a4d877f39e2bfb5eb14493a"
    },
    "www/MS_28001_Adams_County.zip": {
      "checksum": "b6dc4b291b5f0e4cec51655caebebe16"
    },
    "www/MS_28005_Amite_County.zip": {
      "checksum": "b04d43b1ed00981f1fa56ea35b3f2267"
    },
    "www/MS_28009_Benton_County.zip": {
      "checksum": "b7f1077dbae779076bebc09adcb0a025"
    },
    "www/MS_28011_Bolivar_County.zip": {
      "checksum": "69f04bd6e2152d697e856210a9864004"
    },
    "www/MS_28015_Carroll_County.zip": {
      "checksum": "0af5ee9322a223d3d2e6bb6fe060a9a8"
    },
    "www/MS_28017_Chickasaw_County.zip": {
      "checksum": "2cad37a3565ca8e297652a29182927cd"
    },
    "www/MS_28019_Choctaw_County.zip": {
      "checksum": "1486859f59f2cd933ea30ecc37ff9da2"
    },
    "www/MS_28021_Claiborne_County.zip": {
      "checksum": "ae6ac8b470043d16790e518c20e7856b"
    },
    "www/MS_28023_Clarke_County.zip": {
      "checksum": "a680162f053a96a1fa17a7bf27caf934"
    },
    "www/MS_28025_Clay_County.zip": {
      "checksum": "ddd6824d4d8bee26e7a4161f9553fb04"
    },
    "www/MS_28027_Coahoma_County.zip": {
      "checksum": "db3b0f5e6b01fe3381408a6494adbb70"
    },
    "www/MS_28029_Copiah_County.zip": {
      "checksum": "9966678cf1e5a357b95d01f00c471804"
    },
    "www/MS_28033_DeSoto_County.zip": {
      "checksum": "2abcb173fed9df901bc8cad8914bf670"
    },
    "www/MS_28035_Forrest_County.zip": {
      "checksum": "e42415affa418986b89b38a47f06838a"
    },
    "www/MS_28037_Franklin_County.zip": {
      "checksum": "96bb6922703e7af1b21e984d1024a7e6"
    },
    "www/MS_28041_Greene_County.zip": {
      "checksum": "0539fb9491794eb9ca8a7f5ba095f080"
    },
    "www/MS_28043_Grenada_County.zip": {
      "checksum": "cf7eac35e90f25da82fdde5c9c1cbae4"
    },
    "www/MS_28047_Harrison_County.zip": {
      "checksum": "14f28e882540a025037969fd6eee5063"
    },
    "www/MS_28049_Hinds_County.zip": {
      "checksum": "7d0cf5153c572ff896dd5ab1b7f61c4a"
    },
    "www/MS_28051_Holmes_County.zip": {
      "checksum": "1ac6ec8668f405ff993ecdad002faaac"
    },
    "www/MS_28053_Humphreys_County.zip": {
      "checksum": "da8bd5abd6b3edeeb95c078e0e486a04"
    },
    "www/MS_28061_Jasper_County.zip": {
      "checksum": "037425b5baf2a630101cf959d82cd31f"
    },
    "www/MS_28063_Jefferson_County.zip": {
      "checksum": "638b8d46601786fd8ec1276c3bee218c"
    },
    "www/MS_28065_Jefferson_Davis_County.zip": {
      "checksum": "24ab32ab3583b71b3506a5147bc2cbb4"
    },
    "www/MS_28067_Jones_County.zip": {
      "checksum": "d11a5f24f0209badfd31e891ef3bf84e"
    },
    "www/MS_28071_Lafayette_County.zip": {
      "checksum": "d301dd1a19c16c1ac420f9c518766cbd"
    },
    "www/MS_28073_Lamar_County.zip": {
      "checksum": "b1d3b07e67be9b460576cf7292783252"
    },
    "www/MS_28077_Lawrence_County.zip": {
      "checksum": "416107b205a54618cfa6bcd37f655cc5"
    },
    "www/MS_28079_Leake_County.zip": {
      "checksum": "56292ebf75219304f6abf531fb6a4313"
    },
    "www/MS_28081_Lee_County.zip": {
      "checksum": "e1c89ae03e05b784f7ff14087598fec3"
    },
    "www/MS_28083_Leflore_County.zip": {
      "checksum": "717ea41f3545dd83c808c0ae3c639b4d"
    },
    "www/MS_28085_Lincoln_County.zip": {
      "checksum": "f6bdd102f923dfc3fd0296130d7ccfda"
    },
    "www/MS_28087_Lowndes_County.zip": {
      "checksum": "2477658943cfcb03334249a2a529d73a"
    },
    "www/MS_28089_Madison_County.zip": {
      "checksum": "cfb6814c9e936ecec7c1efe8c2388ca0"
    },
    "www/MS_28093_Marshall_County.zip": {
      "checksum": "bc858a9491bff727ff19a7d2512c3392"
    },
    "www/MS_28095_Monroe_County.zip": {
      "checksum": "ab63218d1516db7267a0dc9dd68d1680"
    },
    "www/MS_28099_Neshoba_County.zip": {
      "checksum": "ee767833a49470f52071c2fea01d8ffe"
    },
    "www/MS_28107_Panola_County.zip": {
      "checksum": "4da42c7599cd91b07714cc39d47ac666"
    },
    "www/MS_28111_Perry_County.zip": {
      "checksum": "3125e1dfa9100df3850ecbaa0a89a054"
    },
    "www/MS_28113_Pike_County.zip": {
      "checksum": "9caf924b43c4e1108d5cbf485d869446"
    },
    "www/MS_28115_Pontotoc_County.zip": {
      "checksum": "ba0ee13009644ced0e8d9e51b5f27beb"
    },
    "www/MS_28121_Rankin_County.zip": {
      "checksum": "fa8bd50bdf69154a09e96695cc2aab81"
    },
    "www/MS_28123_Scott_County.zip": {
      "checksum": "6e2ec4e1f167f97870c6a51e35432442"
    },
    "www/MS_28125_Sharkey_County.zip": {
      "checksum": "96dc508ffa85c72b18fc37e02abe7a15"
    },
    "www/MS_28127_Simpson_County.zip": {
      "checksum": "76ac282b75e33e15d39a30c46a5fa603"
    },
    "www/MS_28131_Stone_County.zip": {
      "checksum": "4cc1a5a2014a6c3be0f9402167c040d1"
    },
    "www/MS_28133_Sunflower_County.zip": {
      "checksum": "07603893247a942925320bbbb6effff6"
    },
    "www/MS_28137_Tate_County.zip": {
      "checksum": "6e3397a800dd9f91598fa7f3b9d1819b"
    },
    "www/MS_28139_Tippah_County.zip": {
      "checksum": "939e54622eff64ee8a587e7836d5f70e"
    },
    "www/MS_28141_Tishomingo_County.zip": {
      "checksum": "61e8d21b01d1217ead0ac9c65dc154f7"
    },
    "www/MS_28143_Tunica_County.zip": {
      "checksum": "ad28f55b2312a97cd413ada469a44960"
    },
    "www/MS_28147_Walthall_County.zip": {
      "checksum": "13fbcf6e2b4a74f286b0d6f9963cfb23"
    },
    "www/MS_28151_Washington_County.zip": {
      "checksum": "109651e0dc446cbea2125bd8ec57bc3a"
    },
    "www/MS_28153_Wayne_County.zip": {
      "checksum": "fb527dff6ff243ebcea239a38bd576f2"
    },
    "www/MS_28155_Webster_County.zip": {
      "checksum": "7a6679d36ffdbf455d8be09092f01eff"
    },
    "www/MS_28157_Wilkinson_County.zip": {
      "checksum": "c31ccde07355aeda2dabbb8ecdd28184"
    },
    "www/MS_28159_Winston_County.zip": {
      "checksum": "33b84b39b63bcbeafa90638230d7c3c5"
    },
    "www/MS_28161_Yalobusha_County.zip": {
      "checksum": "3a52a5988b5f0142037979cb27613512"
    },
    "www/MS_28163_Yazoo_County.zip": {
      "checksum": "61aaba70dc0cf34b43bef548e19bca1b"
    },
    "www/MT_30001_Beaverhead_County.zip": {
      "checksum": "9e85b1f9644f19866e2822be0d12b743"
    },
    "www/MT_30005_Blaine_County.zip": {
      "checksum": "bbb6cf75d29927a66f9826787575412a"
    },
    "www/MT_30007_Broadwater_County.zip": {
      "checksum": "58db450845dd66425fc19ac073c335ab"
    },
    "www/MT_30009_Carbon_County.zip": {
      "checksum": "7e0a4b69a13f5d10cdb972ba14a835bd"
    },
    "www/MT_30013_Cascade_County.zip": {
      "checksum": "9f16b87eda76e3d3d4b25d69665e7a2d"
    },
    "www/MT_30015_Chouteau_County.zip": {
      "checksum": "01e32dfff6a18ec8bec442c5c24e68ad"
    },
    "www/MT_30021_Dawson_County.zip": {
      "checksum": "0eec5517f98b7060c7b08c64e12adbe8"
    },
    "www/MT_30023_Deer_Lodge_County.zip": {
      "checksum": "92abf874aead96a15843b76525dc4169"
    },
    "www/MT_30025_Fallon_County.zip": {
      "checksum": "b9048441e847d7345b126eec1c2c59df"
    },
    "www/MT_30027_Fergus_County.zip": {
      "checksum": "42021b34301fdd07688d14599f3c6522"
    },
    "www/MT_30029_Flathead_County.zip": {
      "checksum": "9daa005004d16e1f847c6f155d82916b"
    },
    "www/MT_30031_Gallatin_County.zip": {
      "checksum": "23d22ae8c3f9c1356cdc032b261eac7e"
    },
    "www/MT_30035_Glacier_County.zip": {
      "checksum": "9c3510de987de72dd279e8804c6391bc"
    },
    "www/MT_30039_Granite_County.zip": {
      "checksum": "42722266294503df7fc4cff1ec45fd13"
    },
    "www/MT_30043_Jefferson_County.zip": {
      "checksum": "738d6b636f78d78ba91cb10fe4c25b1e"
    },
    "www/MT_30045_Judith_Basin_County.zip": {
      "checksum": "46b2fbdee73a420623f9be53b29bd644"
    },
    "www/MT_30047_Lake_County.zip": {
      "checksum": "01701087057bd1a71be125d7eb17d7fd"
    },
    "www/MT_30049_Lewis_and_Clark_County.zip": {
      "checksum": "7ca1d094b8c246736ff38618ad969ba4"
    },
    "www/MT_30051_Liberty_County.zip": {
      "checksum": "6e25c909f247a550e349a085f4c595b4"
    },
    "www/MT_30053_Lincoln_County.zip": {
      "checksum": "a2956a2293f0f3dfd8b23951314a3d7d"
    },
    "www/MT_30055_McCone_County.zip": {
      "checksum": "ce21be2e5fb32a3ffa172f9ea73f8d3f"
    },
    "www/MT_30057_Madison_County.zip": {
      "checksum": "ed3ce634827d88b59cb34f7ed5765184"
    },
    "www/MT_30059_Meagher_County.zip": {
      "checksum": "12957e3536505503a1fd842132328a51"
    },
    "www/MT_30061_Mineral_County.zip": {
      "checksum": "71d4237f0383ca83cb999ae47e6ce37c"
    },
    "www/MT_30063_Missoula_County.zip": {
      "checksum": "1f94790664ace65e304d0c7876afbf32"
    },
    "www/MT_30067_Park_County.zip": {
      "checksum": "75f451e261173e36c78c6625e72c2315"
    },
    "www/MT_30069_Petroleum_County.zip": {
      "checksum": "66ac9c85bd4eb08899175045895eaba9"
    },
    "www/MT_30073_Pondera_County.zip": {
      "checksum": "f7fd5d5ec06c74bffc10dbea86c53fd7"
    },
    "www/MT_30075_Powder_River_County.zip": {
      "checksum": "6156b77f439c4604dd01f18e1f68fc17"
    },
    "www/MT_30079_Prairie_County.zip": {
      "checksum": "6776748b611e6afe6bdc18c63dc5b9af"
    },
    "www/MT_30081_Ravalli_County.zip": {
      "checksum": "cde3887da56417228d68b61887b934b1"
    },
    "www/MT_30083_Richland_County.zip": {
      "checksum": "e7e1da43161f2d9fb053ee27389b59f5"
    },
    "www/MT_30085_Roosevelt_County.zip": {
      "checksum": "61d4b413c954db90e522b1fbb2fe1e9d"
    },
    "www/MT_30087_Rosebud_County.zip": {
      "checksum": "de4c78f4650e9985bf3982b27dfe48f3"
    },
    "www/MT_30089_Sanders_County.zip": {
      "checksum": "3305beb912cd2dbb52e4822328d11da6"
    },
    "www/MT_30091_Sheridan_County.zip": {
      "checksum": "b9153e96f3a4b3d807901827457ec212"
    },
    "www/MT_30093_Silver_Bow_County.zip": {
      "checksum": "f629b2b9eaf84191481e9b00272bda7b"
    },
    "www/MT_30095_Stillwater_County.zip": {
      "checksum": "2fd3d302b5ad94612878e5fc066e1cbc"
    },
    "www/MT_30097_Sweet_Grass_County.zip": {
      "checksum": "77f407c9a0778df9f2de914855ed6051"
    },
    "www/MT_30101_Toole_County.zip": {
      "checksum": "a6dd0db457aa3068510dba2242bd73ec"
    },
    "www/MT_30105_Valley_County.zip": {
      "checksum": "17567c802c6948953986b417d893cd7c"
    },
    "www/MT_30111_Yellowstone_County.zip": {
      "checksum": "ba3e0ccf22782763d4e03c208ade3d2f"
    },
    "www/NA_02232_NA.zip": {
      "checksum": "b08ee8e026359a195f27a117d1c2394f"
    },
    "www/NA_02280_NA.zip": {
      "checksum": "8e2263b941dce83ba2337de6f37a8683"
    },
    "www/NA_12025_NA.zip": {
      "checksum": "4e30b84b35e610e275a5818e24fa60d9"
    },
    "www/NA_51515_NA.zip": {
      "checksum": "f9f1c86cd8434e9a6af1a687e93ea649"
    },
    "www/NC_37001_Alamance_County.zip": {
      "checksum": "70abb750c4c12d7928a37baa0daedeb0"
    },
    "www/NC_37003_Alexander_County.zip": {
      "checksum": "3a0b63ba4f13afdb0afed5b24fb759e2"
    },
    "www/NC_37005_Alleghany_County.zip": {
      "checksum": "fbc2dd87826d099c14bd9b382c0d257a"
    },
    "www/NC_37007_Anson_County.zip": {
      "checksum": "b1f6fc38b4c1193e43eb59985b642746"
    },
    "www/NC_37009_Ashe_County.zip": {
      "checksum": "72619a0619bedd335c35ef616c4cd588"
    },
    "www/NC_37011_Avery_County.zip": {
      "checksum": "8a6f563c7430f733d0bbfc28d4b2d196"
    },
    "www/NC_37013_Beaufort_County.zip": {
      "checksum": "9d5bd4a8cced851881e049b6f66a453b"
    },
    "www/NC_37015_Bertie_County.zip": {
      "checksum": "12bc04ea1a71df56d8fc652695a56a44"
    },
    "www/NC_37017_Bladen_County.zip": {
      "checksum": "ec4027654d2207057499672e17f2cd49"
    },
    "www/NC_37019_Brunswick_County.zip": {
      "checksum": "aeb36e7d9de08e7150d1fb58e434a7c1"
    },
    "www/NC_37021_Buncombe_County.zip": {
      "checksum": "372d4e6aa25f93192556abb8e0469157"
    },
    "www/NC_37023_Burke_County.zip": {
      "checksum": "9b61a02e5f6ba5e8a2e79b5c59a7cc06"
    },
    "www/NC_37025_Cabarrus_County.zip": {
      "checksum": "8cbc26407d46a041f9677618b6ca7481"
    },
    "www/NC_37027_Caldwell_County.zip": {
      "checksum": "99f30d002d213472f1a1c6f317366305"
    },
    "www/NC_37029_Camden_County.zip": {
      "checksum": "d7dbdbbaa70ef761a9f5f06450ad995d"
    },
    "www/NC_37031_Carteret_County.zip": {
      "checksum": "eea380d498283414825b9202c1fb6aee"
    },
    "www/NC_37033_Caswell_County.zip": {
      "checksum": "b1cd6df712024e386ef27c4ec5802646"
    },
    "www/NC_37035_Catawba_County.zip": {
      "checksum": "10601e0e7b8153de5b938990394fed36"
    },
    "www/NC_37037_Chatham_County.zip": {
      "checksum": "909082a65ebd05eeb4d0d7ebdc3c86e0"
    },
    "www/NC_37039_Cherokee_County.zip": {
      "checksum": "5b33b09426d79650b6c2408ccabdf516"
    },
    "www/NC_37041_Chowan_County.zip": {
      "checksum": "32874d58d41907cdd7255274a6d42d0b"
    },
    "www/NC_37043_Clay_County.zip": {
      "checksum": "7654f424ea0c0d18d289fd15c50519c0"
    },
    "www/NC_37045_Cleveland_County.zip": {
      "checksum": "04d7f3c89adc68cbd0269fa0c7bbd969"
    },
    "www/NC_37047_Columbus_County.zip": {
      "checksum": "437f55ddd888dab9764aa8e86046b926"
    },
    "www/NC_37049_Craven_County.zip": {
      "checksum": "f8256881b535a1f16fdc2d8db6cb71cb"
    },
    "www/NC_37051_Cumberland_County.zip": {
      "checksum": "0f445484354f08328d216d2447c3cebd"
    },
    "www/NC_37053_Currituck_County.zip": {
      "checksum": "683acf00e6e08054f5527dc01abe5772"
    },
    "www/NC_37055_Dare_County.zip": {
      "checksum": "3326165c3eb3e8208666b0d86e8803df"
    },
    "www/NC_37057_Davidson_County.zip": {
      "checksum": "21cbc0f5ac2b2a4615ac269e5031b925"
    },
    "www/NC_37059_Davie_County.zip": {
      "checksum": "02b67b578c4517c3c7ad296c37ae564b"
    },
    "www/NC_37061_Duplin_County.zip": {
      "checksum": "200018e24c2bf4038d0f20bda39bc4ed"
    },
    "www/NC_37063_Durham_County.zip": {
      "checksum": "e89ad74619632f8c3bd33a4c51034a3c"
    },
    "www/NC_37065_Edgecombe_County.zip": {
      "checksum": "f29df20a6728c28474f6b2b06f435fda"
    },
    "www/NC_37067_Forsyth_County.zip": {
      "checksum": "2b373a8794754eda732958fb9038a0e6"
    },
    "www/NC_37069_Franklin_County.zip": {
      "checksum": "d8e49f555b3e131b968e3a97dda2eab9"
    },
    "www/NC_37071_Gaston_County.zip": {
      "checksum": "7d43dd9ac7aa8f1225b2cc5c027dc1d1"
    },
    "www/NC_37073_Gates_County.zip": {
      "checksum": "41cf62ec058cacce548b5b1b765d3d33"
    },
    "www/NC_37075_Graham_County.zip": {
      "checksum": "2256b01455650ebcb62aebd449a39a75"
    },
    "www/NC_37077_Granville_County.zip": {
      "checksum": "0154e1bf84f5f6482a0706e5c1d2d495"
    },
    "www/NC_37081_Guilford_County.zip": {
      "checksum": "6964f08d92ac6985170dbd8a2aab1565"
    },
    "www/NC_37083_Halifax_County.zip": {
      "checksum": "446c00c4b461dfdfa6239781a9a55e6b"
    },
    "www/NC_37085_Harnett_County.zip": {
      "checksum": "8327fc12bfcdc8378332d52b4d75f9bf"
    },
    "www/NC_37087_Haywood_County.zip": {
      "checksum": "6793700776fd1f077e8c8e3a3a776764"
    },
    "www/NC_37089_Henderson_County.zip": {
      "checksum": "686066776e7a3f41a6abed14cc66f8ad"
    },
    "www/NC_37091_Hertford_County.zip": {
      "checksum": "6c0bde9c03e081faf3e04285c8c22f57"
    },
    "www/NC_37093_Hoke_County.zip": {
      "checksum": "02ec60f8e7a6a257cf5cbddb85969d9f"
    },
    "www/NC_37095_Hyde_County.zip": {
      "checksum": "7c8c832a06837e36bbd97fe2743a452c"
    },
    "www/NC_37097_Iredell_County.zip": {
      "checksum": "3c5ce7b5db92a16cae3e0840df0252eb"
    },
    "www/NC_37099_Jackson_County.zip": {
      "checksum": "6f55661cd9ddad45e73c67fd83348df2"
    },
    "www/NC_37101_Johnston_County.zip": {
      "checksum": "88486615dcf4bfeb271b6a85fdb5144a"
    },
    "www/NC_37103_Jones_County.zip": {
      "checksum": "68e9a4ac03c7207ef9909233ef048cc5"
    },
    "www/NC_37105_Lee_County.zip": {
      "checksum": "b15569bcc49d6b51cffd567325ddd632"
    },
    "www/NC_37107_Lenoir_County.zip": {
      "checksum": "9a1f590358a6dd2f76a26d04a12bf04f"
    },
    "www/NC_37109_Lincoln_County.zip": {
      "checksum": "c082750cb6d9cf5ccb59b06871b57f69"
    },
    "www/NC_37111_McDowell_County.zip": {
      "checksum": "7a7ea3abcc05f917a018267c894bf197"
    },
    "www/NC_37113_Macon_County.zip": {
      "checksum": "cbda5aaf90ac39c841ac579cdd1d5af1"
    },
    "www/NC_37115_Madison_County.zip": {
      "checksum": "fa288759286b39d76da2361dea1bc05f"
    },
    "www/NC_37117_Martin_County.zip": {
      "checksum": "f7b19064746736ff67ea1f3ef21770d9"
    },
    "www/NC_37119_Mecklenburg_County.zip": {
      "checksum": "815c863498c7231a3bea74c478ea0f40"
    },
    "www/NC_37121_Mitchell_County.zip": {
      "checksum": "893bed295679ff26e1d4407e608f94db"
    },
    "www/NC_37123_Montgomery_County.zip": {
      "checksum": "969c8e84459d321c037f4e15a959ec88"
    },
    "www/NC_37125_Moore_County.zip": {
      "checksum": "c745cb221b823d889b35b54376393ccd"
    },
    "www/NC_37127_Nash_County.zip": {
      "checksum": "5ef25296e39204a4e51ebadf9f81c2ca"
    },
    "www/NC_37129_New_Hanover_County.zip": {
      "checksum": "5698ccd2e3b8c558431fd9416a28b734"
    },
    "www/NC_37131_Northampton_County.zip": {
      "checksum": "e4ec49e9e4ba5a941191ba8b0ca6bfef"
    },
    "www/NC_37133_Onslow_County.zip": {
      "checksum": "1bbf639a830a1713f1b007a9ee9fa2ba"
    },
    "www/NC_37135_Orange_County.zip": {
      "checksum": "28495046eba494f9fcead2b7b4f8d984"
    },
    "www/NC_37137_Pamlico_County.zip": {
      "checksum": "cec78827aad01593338f1ea3cd42a264"
    },
    "www/NC_37139_Pasquotank_County.zip": {
      "checksum": "b853d50b3ed9a2bec770f6f7904ff5c8"
    },
    "www/NC_37141_Pender_County.zip": {
      "checksum": "8e844d9a2c8a329f9fa5c1854b1b9fd7"
    },
    "www/NC_37143_Perquimans_County.zip": {
      "checksum": "5950880bb782c26657f2a751caef8572"
    },
    "www/NC_37145_Person_County.zip": {
      "checksum": "1d70d6a4d144f2512df7893d40858e2b"
    },
    "www/NC_37147_Pitt_County.zip": {
      "checksum": "ef5e512879fb610ebab82a24907e0cd1"
    },
    "www/NC_37149_Polk_County.zip": {
      "checksum": "e0cf8eadd65d38ac125868e86b074d08"
    },
    "www/NC_37151_Randolph_County.zip": {
      "checksum": "a8d1491dd3e20a986c2591dcde17295c"
    },
    "www/NC_37153_Richmond_County.zip": {
      "checksum": "4b5f56b4ea822b4713f6c459d93750a2"
    },
    "www/NC_37155_Robeson_County.zip": {
      "checksum": "a0cffd2799654530c1382ecf4847bd88"
    },
    "www/NC_37157_Rockingham_County.zip": {
      "checksum": "aaeabecc0f7e2a3428a9e55c1ee85556"
    },
    "www/NC_37159_Rowan_County.zip": {
      "checksum": "9e0ca4ec7d40f4d317a736197ae30ade"
    },
    "www/NC_37161_Rutherford_County.zip": {
      "checksum": "37f6fc31806b6d12b1fb35334e8cb449"
    },
    "www/NC_37163_Sampson_County.zip": {
      "checksum": "8b510e5492747816c00df838c0a5138a"
    },
    "www/NC_37165_Scotland_County.zip": {
      "checksum": "eb7fcc5c903b8afc01ffc97c4b228d2d"
    },
    "www/NC_37167_Stanly_County.zip": {
      "checksum": "24db713dde1494110273a55eafa3430e"
    },
    "www/NC_37169_Stokes_County.zip": {
      "checksum": "89a734a71ae9197232a2ccea83f07a4b"
    },
    "www/NC_37171_Surry_County.zip": {
      "checksum": "bc53f0eefe52b69bf36a25c8b2ea5d30"
    },
    "www/NC_37173_Swain_County.zip": {
      "checksum": "cad4d1777a4430220a051a393ca88324"
    },
    "www/NC_37175_Transylvania_County.zip": {
      "checksum": "d04b8685bf3064382f1b026b10dfca63"
    },
    "www/NC_37177_Tyrrell_County.zip": {
      "checksum": "574a17e02e517cd59cec55ff6a5d57cd"
    },
    "www/NC_37179_Union_County.zip": {
      "checksum": "53c169643470453258761113d0914629"
    },
    "www/NC_37181_Vance_County.zip": {
      "checksum": "b19c6caeee4d0e864e33c30169a60883"
    },
    "www/NC_37183_Wake_County.zip": {
      "checksum": "4e930c3699eafb5a6e657cc15cf84c95"
    },
    "www/NC_37185_Warren_County.zip": {
      "checksum": "e3182da1b283342a4e666a613ee8a93f"
    },
    "www/NC_37187_Washington_County.zip": {
      "checksum": "2d344f0ec7e29c215f2960097a1574a9"
    },
    "www/NC_37189_Watauga_County.zip": {
      "checksum": "9d659bbbe1323dde7294843e38380eae"
    },
    "www/NC_37191_Wayne_County.zip": {
      "checksum": "e12d3acff19b209b1d5d57192f111ac9"
    },
    "www/NC_37193_Wilkes_County.zip": {
      "checksum": "632c0b307cbd715ffc1aa0d36c1b3c00"
    },
    "www/NC_37195_Wilson_County.zip": {
      "checksum": "0541e9287fc16d4bb489e66298487de1"
    },
    "www/NC_37197_Yadkin_County.zip": {
      "checksum": "3b59bda6f07d7384edbb455036d59cf3"
    },
    "www/NC_37199_Yancey_County.zip": {
      "checksum": "321878ad40d7fbc32f4746bb7231bb03"
    },
    "www/ND_38001_Adams_County.zip": {
      "checksum": "8324be85e7fd2b926cb4bd8ab801fd96"
    },
    "www/ND_38003_Barnes_County.zip": {
      "checksum": "05bfd7daf9dbe7c8c80e70bdd63bbe7e"
    },
    "www/ND_38005_Benson_County.zip": {
      "checksum": "a36a6835e22a57e800aa85ee50f98417"
    },
    "www/ND_38007_Billings_County.zip": {
      "checksum": "eb2ae502d35eff4b7943d90dec6f25b9"
    },
    "www/ND_38009_Bottineau_County.zip": {
      "checksum": "41edc183b4d6a97e9b8ac558a12ea881"
    },
    "www/ND_38011_Bowman_County.zip": {
      "checksum": "c9d749657457322ebf9301168fe53684"
    },
    "www/ND_38013_Burke_County.zip": {
      "checksum": "4284554fb7d6528d0e394515fe4ccc8a"
    },
    "www/ND_38015_Burleigh_County.zip": {
      "checksum": "3c361ed54c053441bbe07f8da6494eeb"
    },
    "www/ND_38017_Cass_County.zip": {
      "checksum": "0b5621d035505e36ca9de5141adfb5ab"
    },
    "www/ND_38019_Cavalier_County.zip": {
      "checksum": "d0251adebfcfe530bc1a35b5222cd989"
    },
    "www/ND_38021_Dickey_County.zip": {
      "checksum": "c1823d35b729f88d88c3c692f1c4b593"
    },
    "www/ND_38023_Divide_County.zip": {
      "checksum": "c78c7e80d19543ae8c97a8e765df7d86"
    },
    "www/ND_38025_Dunn_County.zip": {
      "checksum": "70a19d55f0af82226f12424c72211bf2"
    },
    "www/ND_38027_Eddy_County.zip": {
      "checksum": "4fc6697cc2da60eeb4c2f5366f560fae"
    },
    "www/ND_38029_Emmons_County.zip": {
      "checksum": "3a97bff4d280411fd08c6dc366336670"
    },
    "www/ND_38031_Foster_County.zip": {
      "checksum": "d18ecc60e3ac1a6b60efdbe3baf544e8"
    },
    "www/ND_38033_Golden_Valley_County.zip": {
      "checksum": "21abaa12daf05b5f54719699da52ac8c"
    },
    "www/ND_38035_Grand_Forks_County.zip": {
      "checksum": "ea427e06ffc3108c65176555534948b3"
    },
    "www/ND_38037_Grant_County.zip": {
      "checksum": "d35566ebb2ba8abcc947535be42b8136"
    },
    "www/ND_38039_Griggs_County.zip": {
      "checksum": "7534ced1cd4f7090468a3bf8e829184d"
    },
    "www/ND_38041_Hettinger_County.zip": {
      "checksum": "d7cd1a45a7438054d5796315eb78a905"
    },
    "www/ND_38043_Kidder_County.zip": {
      "checksum": "c32a6c15041cd1fa724160894add1316"
    },
    "www/ND_38045_LaMoure_County.zip": {
      "checksum": "5b15d9ece7495fedceb8613cb3b9dead"
    },
    "www/ND_38047_Logan_County.zip": {
      "checksum": "98516159b1478400e154a5a3a7977aaa"
    },
    "www/ND_38049_McHenry_County.zip": {
      "checksum": "4c050171d423ee8432cc82a333032e36"
    },
    "www/ND_38051_McIntosh_County.zip": {
      "checksum": "56a1fc497da9826e125b8979ef92ee18"
    },
    "www/ND_38053_McKenzie_County.zip": {
      "checksum": "920fe16d789f2e0bdabc2f6049e36af5"
    },
    "www/ND_38055_McLean_County.zip": {
      "checksum": "772fc169f6ee4b24660827e6a5fc6ee6"
    },
    "www/ND_38057_Mercer_County.zip": {
      "checksum": "99bff67f9bc9fdd0c5e3db261654b05b"
    },
    "www/ND_38059_Morton_County.zip": {
      "checksum": "d2980760f437c82ad45a0a4f8e24d5ef"
    },
    "www/ND_38061_Mountrail_County.zip": {
      "checksum": "b48f040e8ab65ace77a86d9bcc9b04c5"
    },
    "www/ND_38063_Nelson_County.zip": {
      "checksum": "f8f6cd47196333010d6561dcba920b2d"
    },
    "www/ND_38065_Oliver_County.zip": {
      "checksum": "a3f731f3940b078821377acc0e8c9e44"
    },
    "www/ND_38067_Pembina_County.zip": {
      "checksum": "c3f231f819befea8462b8b8bb2e38214"
    },
    "www/ND_38069_Pierce_County.zip": {
      "checksum": "038c88e82aeffb90513094c4f276174b"
    },
    "www/ND_38071_Ramsey_County.zip": {
      "checksum": "ccf17f49eb4c45337179579eb1144c97"
    },
    "www/ND_38073_Ransom_County.zip": {
      "checksum": "cd7ccee83fa1055581b1e37d881a487b"
    },
    "www/ND_38075_Renville_County.zip": {
      "checksum": "66724a604181268e0688d1d7d03ac385"
    },
    "www/ND_38077_Richland_County.zip": {
      "checksum": "5c4c82c3c39cfdefef61f670e6fe696e"
    },
    "www/ND_38079_Rolette_County.zip": {
      "checksum": "d9e643302c34cd8f89636ce6e97801a9"
    },
    "www/ND_38081_Sargent_County.zip": {
      "checksum": "76943076545b17e5818b63653eb896f1"
    },
    "www/ND_38083_Sheridan_County.zip": {
      "checksum": "12a6d182a1d1ef9a18c349e65bb6b994"
    },
    "www/ND_38087_Slope_County.zip": {
      "checksum": "f411c0265451c83bfdf206f7c3882013"
    },
    "www/ND_38089_Stark_County.zip": {
      "checksum": "b22395b0e3f4e91d8ad366417895e29c"
    },
    "www/ND_38091_Steele_County.zip": {
      "checksum": "8a6749b191e1fe521eeee2d446664909"
    },
    "www/ND_38093_Stutsman_County.zip": {
      "checksum": "e12a30c60f248f34b98aec60d5eb607f"
    },
    "www/ND_38095_Towner_County.zip": {
      "checksum": "5d1952ec72738d369c85ec2583ba58b8"
    },
    "www/ND_38097_Traill_County.zip": {
      "checksum": "a82d90180f5c785f8016a5d3b4dcc549"
    },
    "www/ND_38099_Walsh_County.zip": {
      "checksum": "958794d4bdd6bb7a60b9fb1fd3fca3ec"
    },
    "www/ND_38101_Ward_County.zip": {
      "checksum": "0ed33c78a9425a8915e0bc3b747a550c"
    },
    "www/ND_38103_Wells_County.zip": {
      "checksum": "60918bc6b3a48f25cd73c5d1189fb9e2"
    },
    "www/ND_38105_Williams_County.zip": {
      "checksum": "9ec0abcba7975ceda9fb15f01282b9cc"
    },
    "www/NE_31001_Adams_County.zip": {
      "checksum": "9bcab62fa7695a6689e5dc9542d4b1f6"
    },
    "www/NE_31003_Antelope_County.zip": {
      "checksum": "8639830b6d72c2dabedeba9e4ec3544d"
    },
    "www/NE_31005_Arthur_County.zip": {
      "checksum": "028651c8cc90e8b167995ab69034a85b"
    },
    "www/NE_31007_Banner_County.zip": {
      "checksum": "59a9f381b793a8865e21f21e3a6b5d66"
    },
    "www/NE_31009_Blaine_County.zip": {
      "checksum": "7076c2366f0be618f9bf732f3039e608"
    },
    "www/NE_31011_Boone_County.zip": {
      "checksum": "780f7994b90b4e5e59b5401fa9764970"
    },
    "www/NE_31013_Box_Butte_County.zip": {
      "checksum": "01c2e79e9282687644cb9a7f379f6d49"
    },
    "www/NE_31015_Boyd_County.zip": {
      "checksum": "1d7e69aa388fe513fdd87aa75d7ac440"
    },
    "www/NE_31017_Brown_County.zip": {
      "checksum": "745807a9f0a2197b41c473341ee06515"
    },
    "www/NE_31019_Buffalo_County.zip": {
      "checksum": "8805fdce00654150551c54d67cf4a8c5"
    },
    "www/NE_31021_Burt_County.zip": {
      "checksum": "067cc71fc1de14413744e593e0b5e889"
    },
    "www/NE_31023_Butler_County.zip": {
      "checksum": "4da63b1a72dfa7d35c725a2bf7fe5c72"
    },
    "www/NE_31025_Cass_County.zip": {
      "checksum": "37f574a817d38551932d27984fc30dae"
    },
    "www/NE_31027_Cedar_County.zip": {
      "checksum": "ad94162c2ac3ec57a110cb4037d178ae"
    },
    "www/NE_31029_Chase_County.zip": {
      "checksum": "c4f84a6254dd04909470fa498665c999"
    },
    "www/NE_31031_Cherry_County.zip": {
      "checksum": "e83594706b53bcbc19807c6cd4657f79"
    },
    "www/NE_31033_Cheyenne_County.zip": {
      "checksum": "ae4ffb649813526fb6e441bbb774546b"
    },
    "www/NE_31035_Clay_County.zip": {
      "checksum": "4d5d6d1d2987b9ed6dba47da77765c2f"
    },
    "www/NE_31037_Colfax_County.zip": {
      "checksum": "57c47097a336d93794a39e053ea436ea"
    },
    "www/NE_31039_Cuming_County.zip": {
      "checksum": "9ba5f8bc14275652f3da77443f95ef22"
    },
    "www/NE_31041_Custer_County.zip": {
      "checksum": "00733026b280a6103490fe4e35962ffb"
    },
    "www/NE_31043_Dakota_County.zip": {
      "checksum": "1bbc6a50b4b0cf8f3ee32e222a3a620d"
    },
    "www/NE_31045_Dawes_County.zip": {
      "checksum": "4355fb8fb643c9ba16005552cf2afc18"
    },
    "www/NE_31047_Dawson_County.zip": {
      "checksum": "8fdbf577e9bdec3a51accc4c7231880d"
    },
    "www/NE_31049_Deuel_County.zip": {
      "checksum": "44ba03a19a8ed32131acd8deed284fcb"
    },
    "www/NE_31051_Dixon_County.zip": {
      "checksum": "5bac6b536b0d9af9035654502445ee44"
    },
    "www/NE_31053_Dodge_County.zip": {
      "checksum": "0764e8489334ef9527ec2d8c66b6e1a1"
    },
    "www/NE_31055_Douglas_County.zip": {
      "checksum": "61db3fad60a34587406b60fae724decf"
    },
    "www/NE_31057_Dundy_County.zip": {
      "checksum": "e6bbb08ca9e1d014853d6cc3c2d47366"
    },
    "www/NE_31059_Fillmore_County.zip": {
      "checksum": "8bf20b23154a9b66b0951da9f5f752c1"
    },
    "www/NE_31061_Franklin_County.zip": {
      "checksum": "71a6dfc023082f0f953b45ec643c7650"
    },
    "www/NE_31063_Frontier_County.zip": {
      "checksum": "981b8f1bb3db63c68bf557a0c3600f19"
    },
    "www/NE_31065_Furnas_County.zip": {
      "checksum": "64a0c49be776b224406b218c3a6a483f"
    },
    "www/NE_31067_Gage_County.zip": {
      "checksum": "a4079a5efe80e1e4da63ab29384494f5"
    },
    "www/NE_31069_Garden_County.zip": {
      "checksum": "3cf9635ceab99b970eb70b6efc4fa9b2"
    },
    "www/NE_31071_Garfield_County.zip": {
      "checksum": "9b20825b66cb82ae0faac71ed810a56d"
    },
    "www/NE_31073_Gosper_County.zip": {
      "checksum": "05f009482acb45adcc6481c63afd4074"
    },
    "www/NE_31077_Greeley_County.zip": {
      "checksum": "d7fb3bc007e6f58fdec9a26de6fc9190"
    },
    "www/NE_31079_Hall_County.zip": {
      "checksum": "00f674ab3b9e7382f060148988710286"
    },
    "www/NE_31081_Hamilton_County.zip": {
      "checksum": "5c93bedab0cf0788fe33db6c9139fc15"
    },
    "www/NE_31083_Harlan_County.zip": {
      "checksum": "83eabe5ec5efb3e7278a13b4ec40c3c2"
    },
    "www/NE_31085_Hayes_County.zip": {
      "checksum": "0a1ac1a5467cb722b4fc3b5542d6dd0f"
    },
    "www/NE_31087_Hitchcock_County.zip": {
      "checksum": "9400deba169fdf3a37cc00699b49ae1f"
    },
    "www/NE_31089_Holt_County.zip": {
      "checksum": "03256b4099c155d934251b4f247da059"
    },
    "www/NE_31091_Hooker_County.zip": {
      "checksum": "8fabe58e909742c3eee8fa5a8ef76a54"
    },
    "www/NE_31093_Howard_County.zip": {
      "checksum": "6f993601d298573592c835375114521e"
    },
    "www/NE_31095_Jefferson_County.zip": {
      "checksum": "7e8c64c68e281a6e5be7de4a6c6f7b6b"
    },
    "www/NE_31097_Johnson_County.zip": {
      "checksum": "ddd0402c40169a69ade33cec1c964e85"
    },
    "www/NE_31099_Kearney_County.zip": {
      "checksum": "582d8af3dc54c3a356430524a9e71be9"
    },
    "www/NE_31101_Keith_County.zip": {
      "checksum": "72224a9e73ced3f8158ddcce597b328d"
    },
    "www/NE_31103_Keya_Paha_County.zip": {
      "checksum": "a26d683352b5259d6ec6dd0ac4b2639d"
    },
    "www/NE_31105_Kimball_County.zip": {
      "checksum": "129a551d79706f1652ee198aedee2141"
    },
    "www/NE_31107_Knox_County.zip": {
      "checksum": "15fc25e6ccfb905ee172fd370bbc09e0"
    },
    "www/NE_31109_Lancaster_County.zip": {
      "checksum": "e47730f6955400b270a15cd5c2d90be4"
    },
    "www/NE_31111_Lincoln_County.zip": {
      "checksum": "4e9b72943b256343497997fe6829c31a"
    },
    "www/NE_31113_Logan_County.zip": {
      "checksum": "c6185600a6b3002c4261c388c5344b0d"
    },
    "www/NE_31117_McPherson_County.zip": {
      "checksum": "68fdeb0fe3cfab2bb8f2b8ef2c8c852f"
    },
    "www/NE_31119_Madison_County.zip": {
      "checksum": "eb8ef7dcd0b719e5763d0ab1434559cb"
    },
    "www/NE_31121_Merrick_County.zip": {
      "checksum": "2625a6ba83acc5cd76db8f9177f9e15d"
    },
    "www/NE_31123_Morrill_County.zip": {
      "checksum": "c3b7f723083963954dbd6cfa72d54013"
    },
    "www/NE_31125_Nance_County.zip": {
      "checksum": "2ec6f9525eef6d3227ac6e25b0b01053"
    },
    "www/NE_31127_Nemaha_County.zip": {
      "checksum": "fdeb59eadde7869308ab5d6db19937d3"
    },
    "www/NE_31129_Nuckolls_County.zip": {
      "checksum": "b1bfc9feb58b81e1e36be478a8dc544e"
    },
    "www/NE_31131_Otoe_County.zip": {
      "checksum": "9516833d3dc19c9d1d05a3b244fe54bb"
    },
    "www/NE_31133_Pawnee_County.zip": {
      "checksum": "3082f8a462da2f01b706476dde4cdaac"
    },
    "www/NE_31135_Perkins_County.zip": {
      "checksum": "9b27170cdf8ed919c677083f053ee576"
    },
    "www/NE_31137_Phelps_County.zip": {
      "checksum": "13f93980e168bbf2c5086be70b15f4bc"
    },
    "www/NE_31139_Pierce_County.zip": {
      "checksum": "a587fa1e499ad629a1c83c76b6eb0b51"
    },
    "www/NE_31141_Platte_County.zip": {
      "checksum": "79719610f0bb476afe2991dfa50c8f84"
    },
    "www/NE_31143_Polk_County.zip": {
      "checksum": "3ef6bb3c721e44b23f4c0f41cbe7078a"
    },
    "www/NE_31145_Red_Willow_County.zip": {
      "checksum": "0656b8ec2e0eafe1f53d8450f527209d"
    },
    "www/NE_31147_Richardson_County.zip": {
      "checksum": "c0941b4e8fc11af5adf1ae75b069dda5"
    },
    "www/NE_31149_Rock_County.zip": {
      "checksum": "79304198568d8e9d9814ffa2af472979"
    },
    "www/NE_31151_Saline_County.zip": {
      "checksum": "96b03b30d26de1453069c8f7e0615133"
    },
    "www/NE_31153_Sarpy_County.zip": {
      "checksum": "e988add50f0f0dcd56089790f11b6ac3"
    },
    "www/NE_31155_Saunders_County.zip": {
      "checksum": "334e4d16d35bed85391eeec771e794d3"
    },
    "www/NE_31157_Scotts_Bluff_County.zip": {
      "checksum": "719425ddef945aee7cccf86a7e86e408"
    },
    "www/NE_31159_Seward_County.zip": {
      "checksum": "7a84b912ae59e878d23b10e6f39f3fed"
    },
    "www/NE_31161_Sheridan_County.zip": {
      "checksum": "fe4bf398a42adeb21492a16b5b625c07"
    },
    "www/NE_31163_Sherman_County.zip": {
      "checksum": "6a632cedde7e956b05f4ecd0eb247a4d"
    },
    "www/NE_31165_Sioux_County.zip": {
      "checksum": "d5eb1a6cc03998a9db4cc09c6ac809ec"
    },
    "www/NE_31167_Stanton_County.zip": {
      "checksum": "8edf8f8e53d8bca63486b3428a8aa232"
    },
    "www/NE_31169_Thayer_County.zip": {
      "checksum": "1da2bb26e391f2bf90ca656140a13985"
    },
    "www/NE_31171_Thomas_County.zip": {
      "checksum": "0695566b805d340d4d31180032d4ef8e"
    },
    "www/NE_31173_Thurston_County.zip": {
      "checksum": "b620ec77ef519dd2b65fdc5bb2e8f7cb"
    },
    "www/NE_31175_Valley_County.zip": {
      "checksum": "6a7a72ed738d24db0dc2f342b3b4576a"
    },
    "www/NE_31177_Washington_County.zip": {
      "checksum": "8ad435a64b7b57b6904317260bdbde5e"
    },
    "www/NE_31179_Wayne_County.zip": {
      "checksum": "1a70e1494907b1e5d33e5cf87acb9319"
    },
    "www/NE_31181_Webster_County.zip": {
      "checksum": "8836aa4e69a651780e7fac3ff613994c"
    },
    "www/NE_31183_Wheeler_County.zip": {
      "checksum": "ee9a24e80c964a9c74ac28496189bfa2"
    },
    "www/NE_31185_York_County.zip": {
      "checksum": "947c99e2041c21e967791b4b9a0cdcd8"
    },
    "www/NH_33001_Belknap_County.zip": {
      "checksum": "1e94466d06992100f2355b1efba75662"
    },
    "www/NH_33003_Carroll_County.zip": {
      "checksum": "070015fbcccec47301758d3b2813198d"
    },
    "www/NH_33005_Cheshire_County.zip": {
      "checksum": "2f14b6a1f7955dd8a12859310be0767e"
    },
    "www/NH_33007_Coos_County.zip": {
      "checksum": "1eb2245fb82bc34fea32b467aee15da0"
    },
    "www/NH_33009_Grafton_County.zip": {
      "checksum": "3f4bbe26386b31fc53b265704f273567"
    },
    "www/NH_33011_Hillsborough_County.zip": {
      "checksum": "c890f63146df0ff894a2fa0401069655"
    },
    "www/NH_33013_Merrimack_County.zip": {
      "checksum": "b84ea9ff886ea6b07121e49c0e147d49"
    },
    "www/NH_33015_Rockingham_County.zip": {
      "checksum": "91bc5e8ed6a588a947311d9ba0ba0b44"
    },
    "www/NH_33017_Strafford_County.zip": {
      "checksum": "23bf16d3240703d22c9ac5d15e6af1c7"
    },
    "www/NH_33019_Sullivan_County.zip": {
      "checksum": "735070fe21b23181657fdd9f436b749f"
    },
    "www/NJ_34001_Atlantic_County.zip": {
      "checksum": "5864496e03a501f6d54b8dcbb1af41b7"
    },
    "www/NJ_34003_Bergen_County.zip": {
      "checksum": "f2e40e4d60423db2422fab2b86da5d00"
    },
    "www/NJ_34005_Burlington_County.zip": {
      "checksum": "699bc3bd8b54c4128a189c6f79dca033"
    },
    "www/NJ_34007_Camden_County.zip": {
      "checksum": "49a058bd2be4847604cfd1083317d1df"
    },
    "www/NJ_34009_Cape_May_County.zip": {
      "checksum": "22543b9f58fe570c40d66ed4a8621454"
    },
    "www/NJ_34011_Cumberland_County.zip": {
      "checksum": "5a1843531d03067e3952b9d3db218212"
    },
    "www/NJ_34013_Essex_County.zip": {
      "checksum": "5476bd98b4a0af97d2a095c626b5550d"
    },
    "www/NJ_34015_Gloucester_County.zip": {
      "checksum": "994451035e6015075c978d9a1c901310"
    },
    "www/NJ_34017_Hudson_County.zip": {
      "checksum": "f07eaeee159531e2d531107352d62c5b"
    },
    "www/NJ_34019_Hunterdon_County.zip": {
      "checksum": "49cd0693e73640d67b3a1c0b91c2174d"
    },
    "www/NJ_34021_Mercer_County.zip": {
      "checksum": "4edec9ba794c7d88481744c673fbc4c4"
    },
    "www/NJ_34023_Middlesex_County.zip": {
      "checksum": "49f5d861ae9dd13bec4bda8b58dcfd13"
    },
    "www/NJ_34025_Monmouth_County.zip": {
      "checksum": "1d049ef9a3d22ed2964a01843250c110"
    },
    "www/NJ_34027_Morris_County.zip": {
      "checksum": "8ebda27009dc83aad282ba2f1ca16a9c"
    },
    "www/NJ_34029_Ocean_County.zip": {
      "checksum": "7f295d7318e8b818dde071d279d2198d"
    },
    "www/NJ_34031_Passaic_County.zip": {
      "checksum": "8b2b590ffb7a1f90eb7644c6052d24b7"
    },
    "www/NJ_34033_Salem_County.zip": {
      "checksum": "0b090424bc5330cdf58d3e54d51cdf20"
    },
    "www/NJ_34035_Somerset_County.zip": {
      "checksum": "da5940cc0f0113389b2fa1379a6f6a57"
    },
    "www/NJ_34037_Sussex_County.zip": {
      "checksum": "3c4f69318e15f6d7298a9fa56e64b289"
    },
    "www/NJ_34039_Union_County.zip": {
      "checksum": "92e28fd5f58cdc5c686889187dd15b6a"
    },
    "www/NJ_34041_Warren_County.zip": {
      "checksum": "d999c8432476eae6b8f2111943f10ea4"
    },
    "www/NM_35001_Bernalillo_County.zip": {
      "checksum": "04e6dcd931ed041b748f4ddaf104e399"
    },
    "www/NM_35003_Catron_County.zip": {
      "checksum": "deaa8102d0f4cb837588c0eeae9926fa"
    },
    "www/NM_35005_Chaves_County.zip": {
      "checksum": "1f7361ad9797c9d1dc5c831647776b4a"
    },
    "www/NM_35006_Cibola_County.zip": {
      "checksum": "06e10b52690bff43ddd17fe8936ab72c"
    },
    "www/NM_35007_Colfax_County.zip": {
      "checksum": "0d721fcbc84aac1bad320d675e2bb14e"
    },
    "www/NM_35009_Curry_County.zip": {
      "checksum": "2de1e9a544683446003e0e5d270d9c67"
    },
    "www/NM_35013_Doña_Ana_County.zip": {
      "checksum": "aa21a8374c799df16e122f909eb94b51"
    },
    "www/NM_35015_Eddy_County.zip": {
      "checksum": "506903f599ee25904eed93fd920e6d5c"
    },
    "www/NM_35019_Guadalupe_County.zip": {
      "checksum": "ba52e1908944a4917e81955b977189cd"
    },
    "www/NM_35021_Harding_County.zip": {
      "checksum": "c6a41b460dec4ddabeb7416997495e79"
    },
    "www/NM_35027_Lincoln_County.zip": {
      "checksum": "c8b0f5a014a8461291beb38942c46fe8"
    },
    "www/NM_35028_Los_Alamos_County.zip": {
      "checksum": "beb7b10adba3fc53b8a378b9b4797994"
    },
    "www/NM_35029_Luna_County.zip": {
      "checksum": "7f8c88edb6e1d0922ab0692a524e6d6c"
    },
    "www/NM_35033_Mora_County.zip": {
      "checksum": "32ba3969eb2b84a3557db83c4b484aeb"
    },
    "www/NM_35035_Otero_County.zip": {
      "checksum": "d5010f0f15a9fd9ccf0e7d5c110c96c2"
    },
    "www/NM_35037_Quay_County.zip": {
      "checksum": "4d9567215d927dd50bd9dfcaf8e1d551"
    },
    "www/NM_35039_Rio_Arriba_County.zip": {
      "checksum": "2584675d7d8dcc0981db0608df0e7626"
    },
    "www/NM_35041_Roosevelt_County.zip": {
      "checksum": "5df11eb4f645b1cd50724c06818cfcdb"
    },
    "www/NM_35043_Sandoval_County.zip": {
      "checksum": "3c38d77873784294e8fbe953e4445476"
    },
    "www/NM_35047_San_Miguel_County.zip": {
      "checksum": "b9aae962ed53c66106e4c9d27bef1e3a"
    },
    "www/NM_35049_Santa_Fe_County.zip": {
      "checksum": "4204876a05c50da48f734e01c12b19ac"
    },
    "www/NM_35051_Sierra_County.zip": {
      "checksum": "cfe381e53b05c2896e6db5f3504c0e2d"
    },
    "www/NM_35053_Socorro_County.zip": {
      "checksum": "dada96ce6ac073593d00fa4182b8559b"
    },
    "www/NM_35057_Torrance_County.zip": {
      "checksum": "495a8ce799edb1e90bdea45b86c3d918"
    },
    "www/NM_35061_Valencia_County.zip": {
      "checksum": "1467673a4b1e15378fb97a1ed3ddde7e"
    },
    "www/NV_32001_Churchill_County.zip": {
      "checksum": "c0bef28b9a2dd4305d152d0b2e0f46e7"
    },
    "www/NV_32003_Clark_County.zip": {
      "checksum": "29c7c06c96501417f4d1da5b98da9fbb"
    },
    "www/NV_32005_Douglas_County.zip": {
      "checksum": "f7e961813cd7d50ec41745892f4734ee"
    },
    "www/NV_32007_Elko_County.zip": {
      "checksum": "b3fb3cf61e99f974dd15865208960c82"
    },
    "www/NV_32011_Eureka_County.zip": {
      "checksum": "46e21c6956e3c086b6917b8de1464400"
    },
    "www/NV_32013_Humboldt_County.zip": {
      "checksum": "fd84dc580ced7afffe3a29021cdc92a9"
    },
    "www/NV_32015_Lander_County.zip": {
      "checksum": "22e80e7076724661b770f8594609aa57"
    },
    "www/NV_32017_Lincoln_County.zip": {
      "checksum": "efa0e76763937b89117b386bbe6f1f28"
    },
    "www/NV_32019_Lyon_County.zip": {
      "checksum": "fb094f11bab85fda4734ec1582fe8aff"
    },
    "www/NV_32021_Mineral_County.zip": {
      "checksum": "06bb39d1072a06591b464bb480c6b7cf"
    },
    "www/NV_32023_Nye_County.zip": {
      "checksum": "024d72d9d4e6e0ce9268d5d3577c66b5"
    },
    "www/NV_32027_Pershing_County.zip": {
      "checksum": "58443de790ad2cc9fa93d632ef8bac62"
    },
    "www/NV_32029_Storey_County.zip": {
      "checksum": "477898a7ece949c121b1b291fb8d7767"
    },
    "www/NV_32031_Washoe_County.zip": {
      "checksum": "4854d6f835a9af88e6e3990bdd7a394a"
    },
    "www/NV_32033_White_Pine_County.zip": {
      "checksum": "010a15a02b721786b2acb6e26c1a5d8c"
    },
    "www/NV_32510_Carson_City.zip": {
      "checksum": "2a2deb74121bee7fbda302c6c68e1de3"
    },
    "www/NY_36001_Albany_County.zip": {
      "checksum": "e4e942dafd9e78e094642ca9841dfc9c"
    },
    "www/NY_36003_Allegany_County.zip": {
      "checksum": "ae49dc18d24cdae654ede547474c045b"
    },
    "www/NY_36005_Bronx_County.zip": {
      "checksum": "b57cea2f702b86fcaeb544b661eb6853"
    },
    "www/NY_36007_Broome_County.zip": {
      "checksum": "85e82c46ce4d47f503002a654c711ff4"
    },
    "www/NY_36009_Cattaraugus_County.zip": {
      "checksum": "dfd98b4bd4da2e941abfbc80d5ae60d9"
    },
    "www/NY_36011_Cayuga_County.zip": {
      "checksum": "69c4ac54e63de53dd9b1bc24d919560b"
    },
    "www/NY_36013_Chautauqua_County.zip": {
      "checksum": "7c1efc892abefd3672b18e5a0889079a"
    },
    "www/NY_36015_Chemung_County.zip": {
      "checksum": "5cdae4e56bb6b32fa821021fe807ffb0"
    },
    "www/NY_36017_Chenango_County.zip": {
      "checksum": "9cce10df2703c1efd599b9c07a174097"
    },
    "www/NY_36019_Clinton_County.zip": {
      "checksum": "ad53b01f5dc1d1aa37cf711c38b4ea43"
    },
    "www/NY_36021_Columbia_County.zip": {
      "checksum": "505402a27d4098cf7fa143c6b2282dce"
    },
    "www/NY_36023_Cortland_County.zip": {
      "checksum": "ecf5abd553e2bc7f857c125c5f1303e2"
    },
    "www/NY_36025_Delaware_County.zip": {
      "checksum": "b8a0de05e7243515e4ada0a0ae46feb8"
    },
    "www/NY_36027_Dutchess_County.zip": {
      "checksum": "65de069d1fc0c109535b66afcdd6c35e"
    },
    "www/NY_36029_Erie_County.zip": {
      "checksum": "e0c3cc745564d1de7f5578d9cc9f4b00"
    },
    "www/NY_36031_Essex_County.zip": {
      "checksum": "24185ba5b7f33d997232cc96079aebd5"
    },
    "www/NY_36033_Franklin_County.zip": {
      "checksum": "9a0f32ce4bb51bc4701598af004c2315"
    },
    "www/NY_36035_Fulton_County.zip": {
      "checksum": "7b773ba62683eeac353a2c2643a70abd"
    },
    "www/NY_36037_Genesee_County.zip": {
      "checksum": "dfd7f522d04123a788ce3ad910d135b2"
    },
    "www/NY_36039_Greene_County.zip": {
      "checksum": "a0f4494d5da9aaf104ee1bfc5bdc44f4"
    },
    "www/NY_36041_Hamilton_County.zip": {
      "checksum": "03158ebb161b7fcfbbc5592ed5627b3c"
    },
    "www/NY_36043_Herkimer_County.zip": {
      "checksum": "caceca9710510392b775ff1159ee9ebc"
    },
    "www/NY_36045_Jefferson_County.zip": {
      "checksum": "62fb46b53ba95d612fb8347f187b8a5c"
    },
    "www/NY_36047_Kings_County.zip": {
      "checksum": "595cca4eea0934f1c47d868d0048d84c"
    },
    "www/NY_36049_Lewis_County.zip": {
      "checksum": "a62b5eb895936ab4f2910e11572ed586"
    },
    "www/NY_36051_Livingston_County.zip": {
      "checksum": "c60363a93ee41b4dfd0d08b6e3ff6885"
    },
    "www/NY_36053_Madison_County.zip": {
      "checksum": "d0dfefbada3b2804379322c6bfd0e42a"
    },
    "www/NY_36055_Monroe_County.zip": {
      "checksum": "5288398f0a214e8354e5a80eb8a37e2f"
    },
    "www/NY_36057_Montgomery_County.zip": {
      "checksum": "f266b51866128a7d03254dfcc7175608"
    },
    "www/NY_36059_Nassau_County.zip": {
      "checksum": "f1f1e46c1d05a624732a4417d5709710"
    },
    "www/NY_36061_New_York_County.zip": {
      "checksum": "79336bf7a0e1a372ffaf260c0542f440"
    },
    "www/NY_36063_Niagara_County.zip": {
      "checksum": "b9a7be31a7442100a6660a28a2061096"
    },
    "www/NY_36065_Oneida_County.zip": {
      "checksum": "37f026aa68aebd3f9eee54ba378f7029"
    },
    "www/NY_36067_Onondaga_County.zip": {
      "checksum": "4ab005d329de26d966ed06845de5a473"
    },
    "www/NY_36069_Ontario_County.zip": {
      "checksum": "b98e04ae544a25c6d82b183e5b38e709"
    },
    "www/NY_36071_Orange_County.zip": {
      "checksum": "2f7e011c0f36f825c4d64685be45aea2"
    },
    "www/NY_36073_Orleans_County.zip": {
      "checksum": "f58283a8ca049177c1a674162da01c8c"
    },
    "www/NY_36075_Oswego_County.zip": {
      "checksum": "722943c8439ea6a0217c57c226a03bb5"
    },
    "www/NY_36077_Otsego_County.zip": {
      "checksum": "d187ce7b3161e92df205be0bc97caa74"
    },
    "www/NY_36079_Putnam_County.zip": {
      "checksum": "17ece61fbbecd71dba7ba9cef25fcee8"
    },
    "www/NY_36081_Queens_County.zip": {
      "checksum": "d85a12686be46dc9ff8c617df18595ee"
    },
    "www/NY_36083_Rensselaer_County.zip": {
      "checksum": "fd0e86930b4f746a5f7dd6c65fbd7b26"
    },
    "www/NY_36085_Richmond_County.zip": {
      "checksum": "8124a050fb169c40998d1ffa41f66a44"
    },
    "www/NY_36087_Rockland_County.zip": {
      "checksum": "a5880f67fdac833e6cac048d8370c09e"
    },
    "www/NY_36089_St._Lawrence_County.zip": {
      "checksum": "8849d625062c6e63163f50ed76446154"
    },
    "www/NY_36091_Saratoga_County.zip": {
      "checksum": "486d2b3c850706b19c3746216bb9e103"
    },
    "www/NY_36093_Schenectady_County.zip": {
      "checksum": "215b3781d7675c8be6f5f2d19c993aaa"
    },
    "www/NY_36095_Schoharie_County.zip": {
      "checksum": "916387e81d8e58a75466d5a17b3d3410"
    },
    "www/NY_36097_Schuyler_County.zip": {
      "checksum": "f3bca6d98d8e1c8c6d6498301701f02c"
    },
    "www/NY_36099_Seneca_County.zip": {
      "checksum": "7c08c68549949b35ef9fa717db3e86b8"
    },
    "www/NY_36101_Steuben_County.zip": {
      "checksum": "82036b98c1e2e0967342d386a4505ca6"
    },
    "www/NY_36103_Suffolk_County.zip": {
      "checksum": "2fa05b89ea48cc6e36d9016dcf42b092"
    },
    "www/NY_36105_Sullivan_County.zip": {
      "checksum": "4863683db23b5b3d9466397960289df7"
    },
    "www/NY_36107_Tioga_County.zip": {
      "checksum": "8d10de5c56ec4ebae698a4ccb18d23f9"
    },
    "www/NY_36109_Tompkins_County.zip": {
      "checksum": "1ca09468f6590063b2375ee286948e9d"
    },
    "www/NY_36111_Ulster_County.zip": {
      "checksum": "c9c62600833c491247d71dfe4388b0ff"
    },
    "www/NY_36113_Warren_County.zip": {
      "checksum": "318a1454bc0744e28bd9c32ff3607c27"
    },
    "www/NY_36115_Washington_County.zip": {
      "checksum": "48c5c7da6393b4b431f278bf37e85838"
    },
    "www/NY_36117_Wayne_County.zip": {
      "checksum": "4ee7cb22a80e4cde8b59d4242c946daa"
    },
    "www/NY_36119_Westchester_County.zip": {
      "checksum": "5ea9f17eda55bb14645bbece3b32af48"
    },
    "www/NY_36121_Wyoming_County.zip": {
      "checksum": "ca40c4c03cfbbc8a217e1be534155691"
    },
    "www/NY_36123_Yates_County.zip": {
      "checksum": "72017a095bc44778a1cabcc560816025"
    },
    "www/OH_39001_Adams_County.zip": {
      "checksum": "1e06ecf3a13ce78dc63f43e99fb1d478"
    },
    "www/OH_39003_Allen_County.zip": {
      "checksum": "5be49f4f4eadc648db3567a6f9e88138"
    },
    "www/OH_39005_Ashland_County.zip": {
      "checksum": "62446c75f4653d1afec7e2ae7b879b5d"
    },
    "www/OH_39007_Ashtabula_County.zip": {
      "checksum": "40b2bc60fd3a2312316e04e85311a368"
    },
    "www/OH_39009_Athens_County.zip": {
      "checksum": "c13d3bc6060bb7f1c6a4081c39535206"
    },
    "www/OH_39011_Auglaize_County.zip": {
      "checksum": "f74e367fdac439275938ae82cae1fd30"
    },
    "www/OH_39013_Belmont_County.zip": {
      "checksum": "861e1601043e754add811777b52f29e5"
    },
    "www/OH_39015_Brown_County.zip": {
      "checksum": "2486dcb07cdb8519386276d1e22b3803"
    },
    "www/OH_39017_Butler_County.zip": {
      "checksum": "4c42cbb7d0291268e059a0979cf77a6f"
    },
    "www/OH_39019_Carroll_County.zip": {
      "checksum": "81ccf3ea975e298ff92241dfb25df958"
    },
    "www/OH_39021_Champaign_County.zip": {
      "checksum": "9c6b810aa13eb2c4402835aef9b951c0"
    },
    "www/OH_39023_Clark_County.zip": {
      "checksum": "ae90cd97a8dd89cddf61de61f319466d"
    },
    "www/OH_39025_Clermont_County.zip": {
      "checksum": "973d6eaeeabdd1f1cec315b1b9eb8ba0"
    },
    "www/OH_39027_Clinton_County.zip": {
      "checksum": "f8494c307366fcfc3d48b3a8e8940cec"
    },
    "www/OH_39029_Columbiana_County.zip": {
      "checksum": "3aa75c0d4be2959277bf14a9906f0dfc"
    },
    "www/OH_39031_Coshocton_County.zip": {
      "checksum": "cb48e11321073e8aa52c2f4f6ddc3e98"
    },
    "www/OH_39033_Crawford_County.zip": {
      "checksum": "d128c989f4b2b2bb698205dfbfcd820a"
    },
    "www/OH_39035_Cuyahoga_County.zip": {
      "checksum": "ddbc227b32ec781c3bbcd5a4973264de"
    },
    "www/OH_39037_Darke_County.zip": {
      "checksum": "3d905f4b6e61456da5cf0d309258f299"
    },
    "www/OH_39039_Defiance_County.zip": {
      "checksum": "5a32fa1678e971f830f5e5c7284f119d"
    },
    "www/OH_39041_Delaware_County.zip": {
      "checksum": "05067c3bf12f08b73532ec2a2d24d855"
    },
    "www/OH_39043_Erie_County.zip": {
      "checksum": "69378f81280d5c54107a55c10c031ce5"
    },
    "www/OH_39045_Fairfield_County.zip": {
      "checksum": "c8154ca6e95ec111ca69101d30c8d41c"
    },
    "www/OH_39047_Fayette_County.zip": {
      "checksum": "d868a8bb37adb9b43aad13cdfee40e1c"
    },
    "www/OH_39049_Franklin_County.zip": {
      "checksum": "54cef062c8975646256a6c5e46c3518c"
    },
    "www/OH_39051_Fulton_County.zip": {
      "checksum": "0c608616a4dce0b123df186a9a4797ea"
    },
    "www/OH_39053_Gallia_County.zip": {
      "checksum": "de717134d7c79d08cbf4180faf511f6d"
    },
    "www/OH_39055_Geauga_County.zip": {
      "checksum": "258cc16e6145770469b7086b2c0c6ee1"
    },
    "www/OH_39057_Greene_County.zip": {
      "checksum": "c8f008a4cae54e28decde9ceaac59195"
    },
    "www/OH_39059_Guernsey_County.zip": {
      "checksum": "a83e3ed91e4d86583e4291019395a118"
    },
    "www/OH_39061_Hamilton_County.zip": {
      "checksum": "3a064cec6efbfb54812dd92e7c35fbf8"
    },
    "www/OH_39063_Hancock_County.zip": {
      "checksum": "293e14b098ee543568e686ab6d4e2d93"
    },
    "www/OH_39065_Hardin_County.zip": {
      "checksum": "b314c1dc39359ff30286672c38178ab4"
    },
    "www/OH_39067_Harrison_County.zip": {
      "checksum": "d449b68766e8a2fbd446fb845e438f06"
    },
    "www/OH_39069_Henry_County.zip": {
      "checksum": "03452b5dfc08203abe5edbe22256d3d7"
    },
    "www/OH_39071_Highland_County.zip": {
      "checksum": "9af3d97ba65304bacc38dd20ddd68aa5"
    },
    "www/OH_39073_Hocking_County.zip": {
      "checksum": "7d430d40aa5e3fe9de4617fe3bcd2067"
    },
    "www/OH_39075_Holmes_County.zip": {
      "checksum": "244ade373d5c75df7e3fcecb7d5d5c95"
    },
    "www/OH_39077_Huron_County.zip": {
      "checksum": "089fdff031b9cd5d3ffc7cdf535b9367"
    },
    "www/OH_39079_Jackson_County.zip": {
      "checksum": "81ef4ecd994f4a4b717a390be5bd01d0"
    },
    "www/OH_39081_Jefferson_County.zip": {
      "checksum": "23020ae4efabb7e353e23c622b2806d0"
    },
    "www/OH_39083_Knox_County.zip": {
      "checksum": "a73a8651c06e59988ee2e3c269ccd9c0"
    },
    "www/OH_39085_Lake_County.zip": {
      "checksum": "b96508de70e029a3d05cb7705d02f67a"
    },
    "www/OH_39087_Lawrence_County.zip": {
      "checksum": "1da54b141b2187922fa621924660db11"
    },
    "www/OH_39089_Licking_County.zip": {
      "checksum": "53dc23fce826b2b7b9ebc89b5446c976"
    },
    "www/OH_39091_Logan_County.zip": {
      "checksum": "4564c2eb387633bd469314d5671152af"
    },
    "www/OH_39093_Lorain_County.zip": {
      "checksum": "6fd5a6774ca7df80013ec7055628eebd"
    },
    "www/OH_39095_Lucas_County.zip": {
      "checksum": "da72dd73fd9d3c44dca71bc022fb036a"
    },
    "www/OH_39097_Madison_County.zip": {
      "checksum": "31913e53f762b06f95b5ace9a733dacc"
    },
    "www/OH_39099_Mahoning_County.zip": {
      "checksum": "7af5d3ab0f1e7db667f7858fad67afdd"
    },
    "www/OH_39101_Marion_County.zip": {
      "checksum": "5dab75611397e27f8862f7acdeeb041b"
    },
    "www/OH_39103_Medina_County.zip": {
      "checksum": "88bdd39d4a941f5a1c907c22fca29f31"
    },
    "www/OH_39105_Meigs_County.zip": {
      "checksum": "a8476aa108045d1ef33863a63adf583a"
    },
    "www/OH_39107_Mercer_County.zip": {
      "checksum": "2dfc82826efde0f0d375ffcd71ca597e"
    },
    "www/OH_39109_Miami_County.zip": {
      "checksum": "2d2e71248b4f7c699cd0977d2388424f"
    },
    "www/OH_39111_Monroe_County.zip": {
      "checksum": "f6af89664d69e39dd63e6d53bc43da68"
    },
    "www/OH_39113_Montgomery_County.zip": {
      "checksum": "bce08f93f537f3da10524a427a241da4"
    },
    "www/OH_39115_Morgan_County.zip": {
      "checksum": "6036446b9c23b67badf57f5eee99f513"
    },
    "www/OH_39117_Morrow_County.zip": {
      "checksum": "3324613df3141409d9a13211f75be686"
    },
    "www/OH_39119_Muskingum_County.zip": {
      "checksum": "33072656af0f0591cc7476850d10e556"
    },
    "www/OH_39121_Noble_County.zip": {
      "checksum": "68a6f2bdd352fe607fc20b309d2fec99"
    },
    "www/OH_39123_Ottawa_County.zip": {
      "checksum": "ee92602a1580e3ad82277ef735ebc47d"
    },
    "www/OH_39125_Paulding_County.zip": {
      "checksum": "ef796213d3a4974d40100589726a217c"
    },
    "www/OH_39127_Perry_County.zip": {
      "checksum": "ec07dc3d124f0a21b8b699ea373a7b92"
    },
    "www/OH_39129_Pickaway_County.zip": {
      "checksum": "98c55fa494dfc03748edd352fe9ebb1f"
    },
    "www/OH_39131_Pike_County.zip": {
      "checksum": "d8d3b7793406a81dac1cfee09fdf33a2"
    },
    "www/OH_39133_Portage_County.zip": {
      "checksum": "fa45daa41b6c99c33bed910e3034fa73"
    },
    "www/OH_39135_Preble_County.zip": {
      "checksum": "a33a38e20e366a74124d371211fff112"
    },
    "www/OH_39137_Putnam_County.zip": {
      "checksum": "245b41a29515bc77cba24a1a9bc0c55a"
    },
    "www/OH_39139_Richland_County.zip": {
      "checksum": "7ad06360d7c81560e71bac5ca9289ed2"
    },
    "www/OH_39141_Ross_County.zip": {
      "checksum": "6d8d6f5bfe5ccb5315ed1fdb38884d53"
    },
    "www/OH_39143_Sandusky_County.zip": {
      "checksum": "2e602f9fea8bd61ac1d5cb01a8e8cb4e"
    },
    "www/OH_39145_Scioto_County.zip": {
      "checksum": "42469b38bc5a6343569e574e89e72856"
    },
    "www/OH_39147_Seneca_County.zip": {
      "checksum": "e73ec0ea542bc8b2f62061caa82de42f"
    },
    "www/OH_39149_Shelby_County.zip": {
      "checksum": "335d96a00586598acc0dbe0f84c5c77a"
    },
    "www/OH_39151_Stark_County.zip": {
      "checksum": "5791397f05841443fccff69b5b01ccfe"
    },
    "www/OH_39153_Summit_County.zip": {
      "checksum": "1ca6b9e72ab224125cd9858831a083fa"
    },
    "www/OH_39155_Trumbull_County.zip": {
      "checksum": "326162226e648d4ba742507946a819d3"
    },
    "www/OH_39157_Tuscarawas_County.zip": {
      "checksum": "8bf2220b835b79475eb12402d40d4c1e"
    },
    "www/OH_39159_Union_County.zip": {
      "checksum": "3024d26bc78ce54051783189aa9b4725"
    },
    "www/OH_39161_Van_Wert_County.zip": {
      "checksum": "35560b7c0b0064edc348df387a40e401"
    },
    "www/OH_39163_Vinton_County.zip": {
      "checksum": "6f1d18ea430d04612c721121947e3032"
    },
    "www/OH_39165_Warren_County.zip": {
      "checksum": "65de7a9ae9a00c82bcf9bf86b84661f0"
    },
    "www/OH_39167_Washington_County.zip": {
      "checksum": "67bcf8ea79478f53c91170113c357b8a"
    },
    "www/OH_39169_Wayne_County.zip": {
      "checksum": "aafb5c3ca38c87228133746771eac09f"
    },
    "www/OH_39171_Williams_County.zip": {
      "checksum": "d8a3a6b4743c99612669af7f046d1d25"
    },
    "www/OH_39173_Wood_County.zip": {
      "checksum": "611ddacdf34db4c9f2e671808247545b"
    },
    "www/OH_39175_Wyandot_County.zip": {
      "checksum": "4ecb98281b27afa11609942eff3a6aa5"
    },
    "www/OK_40001_Adair_County.zip": {
      "checksum": "e1e182f33e0991e173656156259fa9c5"
    },
    "www/OK_40003_Alfalfa_County.zip": {
      "checksum": "d2db1110cbe527e7541ce218250ef763"
    },
    "www/OK_40005_Atoka_County.zip": {
      "checksum": "e91a69a14fdeeee2e4424ca0148e2f35"
    },
    "www/OK_40007_Beaver_County.zip": {
      "checksum": "2561f7576b819363c03701c7a45e5cbc"
    },
    "www/OK_40009_Beckham_County.zip": {
      "checksum": "597b4b78f873796a9406f56115c52c14"
    },
    "www/OK_40011_Blaine_County.zip": {
      "checksum": "2bc0ad7605af9952f7c5b6ab7da2027b"
    },
    "www/OK_40013_Bryan_County.zip": {
      "checksum": "d607321d90976abc7cf59a68d9bf4038"
    },
    "www/OK_40015_Caddo_County.zip": {
      "checksum": "bf7199ec8fed12c0ee11005ea3fe72e8"
    },
    "www/OK_40017_Canadian_County.zip": {
      "checksum": "dcffc130cd97f273f756c8cd870957b7"
    },
    "www/OK_40019_Carter_County.zip": {
      "checksum": "d60b2ba80fe144a910f6580324de1787"
    },
    "www/OK_40021_Cherokee_County.zip": {
      "checksum": "ce064154d2e7eeea0dea7fb545e1debc"
    },
    "www/OK_40023_Choctaw_County.zip": {
      "checksum": "c718981d62f733f4e3efc52a1098c131"
    },
    "www/OK_40025_Cimarron_County.zip": {
      "checksum": "f66b1208e46493b49b76916578f5661e"
    },
    "www/OK_40027_Cleveland_County.zip": {
      "checksum": "e4890e5b912d9d59cd941a0d50cba2fb"
    },
    "www/OK_40029_Coal_County.zip": {
      "checksum": "5ac209f08fb0d79ebd2f71d01549f36c"
    },
    "www/OK_40031_Comanche_County.zip": {
      "checksum": "e1b28b8c68f3481fc816e6629f469d26"
    },
    "www/OK_40033_Cotton_County.zip": {
      "checksum": "d9c5ce8805f78c5561272a754604803c"
    },
    "www/OK_40035_Craig_County.zip": {
      "checksum": "0a2842556b8c9ec84539ffcedcc1c357"
    },
    "www/OK_40037_Creek_County.zip": {
      "checksum": "16b53ff5a6bf781760130838447a9785"
    },
    "www/OK_40039_Custer_County.zip": {
      "checksum": "9e5fe10d8d35ead980dd7d99e3476373"
    },
    "www/OK_40041_Delaware_County.zip": {
      "checksum": "88ed83df4835b618a26c5f52a27a0fcf"
    },
    "www/OK_40043_Dewey_County.zip": {
      "checksum": "5b7b51c1a1e1b726c262a23408b7ebaa"
    },
    "www/OK_40045_Ellis_County.zip": {
      "checksum": "0978dee750a25a986e4fb991cabdd5ed"
    },
    "www/OK_40047_Garfield_County.zip": {
      "checksum": "7b985cb3f0c519e450b43f8d0b9a0314"
    },
    "www/OK_40049_Garvin_County.zip": {
      "checksum": "1e7c19387bb84c6e315bf7520948a259"
    },
    "www/OK_40051_Grady_County.zip": {
      "checksum": "c839ce307bd24a534c93b94cc4543406"
    },
    "www/OK_40053_Grant_County.zip": {
      "checksum": "f0e5b8494d7501f3e242c130f3541010"
    },
    "www/OK_40055_Greer_County.zip": {
      "checksum": "9e3f44f858524f3cbd0502cc0b268e9a"
    },
    "www/OK_40057_Harmon_County.zip": {
      "checksum": "a838bc833a5b27421b3df07489ce57c6"
    },
    "www/OK_40059_Harper_County.zip": {
      "checksum": "1078a3914f1f6d778d0986491a1a8e18"
    },
    "www/OK_40061_Haskell_County.zip": {
      "checksum": "1673f26528e43bd9ac6ac5642ac920fe"
    },
    "www/OK_40063_Hughes_County.zip": {
      "checksum": "66cb8add9d0e4b0a143579a749bd0c09"
    },
    "www/OK_40065_Jackson_County.zip": {
      "checksum": "45bed6bf92de46a9914be3b95265f9d0"
    },
    "www/OK_40067_Jefferson_County.zip": {
      "checksum": "8ce547565e50bdd9924b2c837040d985"
    },
    "www/OK_40069_Johnston_County.zip": {
      "checksum": "9703ffddda627798465988c1cbda8e0f"
    },
    "www/OK_40071_Kay_County.zip": {
      "checksum": "9b624e253ca6b0aff72a652e602b778b"
    },
    "www/OK_40073_Kingfisher_County.zip": {
      "checksum": "ec31a31bde1e62921b8004b765c4a995"
    },
    "www/OK_40075_Kiowa_County.zip": {
      "checksum": "77a14875efbd0524c3eac7476a7ca6c1"
    },
    "www/OK_40077_Latimer_County.zip": {
      "checksum": "49b28892095647f9c7a3057dc9026e46"
    },
    "www/OK_40079_Le_Flore_County.zip": {
      "checksum": "e8758eba9362814f8e1912167180b1dd"
    },
    "www/OK_40081_Lincoln_County.zip": {
      "checksum": "93cf7462a25ec7166ef049bf894c6cb4"
    },
    "www/OK_40083_Logan_County.zip": {
      "checksum": "37c10382c5dd289316850b46644baad1"
    },
    "www/OK_40085_Love_County.zip": {
      "checksum": "7d18dc85b7134044e290e54fedea48a2"
    },
    "www/OK_40087_McClain_County.zip": {
      "checksum": "10c62b5f87eb2f83245b39217d89358b"
    },
    "www/OK_40089_McCurtain_County.zip": {
      "checksum": "6fa4fa7b767212680b452d1e59257caf"
    },
    "www/OK_40091_McIntosh_County.zip": {
      "checksum": "bf6e56a84a2e733732a42330ebe8068f"
    },
    "www/OK_40093_Major_County.zip": {
      "checksum": "213c567ae537a99b8682d1bf1ff0855e"
    },
    "www/OK_40095_Marshall_County.zip": {
      "checksum": "5b95c46e73ba57f4941d7827a4d7c49b"
    },
    "www/OK_40097_Mayes_County.zip": {
      "checksum": "eca626d031f1e49af730a3dea9aea0b0"
    },
    "www/OK_40099_Murray_County.zip": {
      "checksum": "0e28fdd229fc3c9ae22ff50ecf704ef3"
    },
    "www/OK_40101_Muskogee_County.zip": {
      "checksum": "b48647f7f7cc3e65648f9c8f82a470e0"
    },
    "www/OK_40103_Noble_County.zip": {
      "checksum": "0caa64f7d096f7f78d82ace7afce3769"
    },
    "www/OK_40105_Nowata_County.zip": {
      "checksum": "47c3f9937361e16034bea2e8dd9e7bd0"
    },
    "www/OK_40107_Okfuskee_County.zip": {
      "checksum": "344da8cb467de3de1bdc1f24498e108a"
    },
    "www/OK_40109_Oklahoma_County.zip": {
      "checksum": "204cb2dee1644d6249f961b71e6ac3bb"
    },
    "www/OK_40111_Okmulgee_County.zip": {
      "checksum": "25f3b147b855158e4ab074a01464f594"
    },
    "www/OK_40113_Osage_County.zip": {
      "checksum": "8f9e38714b58dd34bc8f43e35d3a6880"
    },
    "www/OK_40115_Ottawa_County.zip": {
      "checksum": "ba34c4b55fb40aeaa8b52c43d3c77ae9"
    },
    "www/OK_40117_Pawnee_County.zip": {
      "checksum": "8fa9cf3d70dc21cfdc3e8fe92586957e"
    },
    "www/OK_40119_Payne_County.zip": {
      "checksum": "2d0855fa645d829a77d7bc640ac4f3a1"
    },
    "www/OK_40121_Pittsburg_County.zip": {
      "checksum": "91ec9716a62b802fe94ef9b08ba9c355"
    },
    "www/OK_40123_Pontotoc_County.zip": {
      "checksum": "0118d8fe50059656bcb6605909e9dde9"
    },
    "www/OK_40125_Pottawatomie_County.zip": {
      "checksum": "8d061102e658b9d76dfe6082c175e465"
    },
    "www/OK_40127_Pushmataha_County.zip": {
      "checksum": "b5c91dd8467f2f0e81b70d80883f7361"
    },
    "www/OK_40129_Roger_Mills_County.zip": {
      "checksum": "0e68d7edd1fe6dc26bed2ff6ca9feaac"
    },
    "www/OK_40131_Rogers_County.zip": {
      "checksum": "de23a236e4ed77401883c64cd973ee67"
    },
    "www/OK_40133_Seminole_County.zip": {
      "checksum": "c5883050df95e54967e67f07283c10e4"
    },
    "www/OK_40135_Sequoyah_County.zip": {
      "checksum": "cad7439fa6021a5e6ed53ff6bf20d14e"
    },
    "www/OK_40137_Stephens_County.zip": {
      "checksum": "abe3c9cf6f369833810edfaf754c563c"
    },
    "www/OK_40139_Texas_County.zip": {
      "checksum": "39a8208dcc899477757292887b358b98"
    },
    "www/OK_40141_Tillman_County.zip": {
      "checksum": "bfd057ce1cedcd0bc5b22db13ae74cdb"
    },
    "www/OK_40143_Tulsa_County.zip": {
      "checksum": "be4f703306706f1696938e0bf7c7cd97"
    },
    "www/OK_40145_Wagoner_County.zip": {
      "checksum": "eb56d9fa185308c194f3ccc0d730491c"
    },
    "www/OK_40147_Washington_County.zip": {
      "checksum": "9f286bd25f9af5ea9f6914a5344c5226"
    },
    "www/OK_40149_Washita_County.zip": {
      "checksum": "422de0ac685cbfd30941aa8e31eff599"
    },
    "www/OK_40151_Woods_County.zip": {
      "checksum": "2eefd1a4f5e71000e4f4c2ca14d622ec"
    },
    "www/OK_40153_Woodward_County.zip": {
      "checksum": "e8adbf9c6882bd1d7b07e99e82db7ed9"
    },
    "www/OR_41001_Baker_County.zip": {
      "checksum": "793b3b94759f3f63cd07d57c9437ea3c"
    },
    "www/OR_41003_Benton_County.zip": {
      "checksum": "4f207aaf6b9002f158fa902da191a0ff"
    },
    "www/OR_41005_Clackamas_County.zip": {
      "checksum": "07f3452b0c3baf0a911e5de829ba0a76"
    },
    "www/OR_41007_Clatsop_County.zip": {
      "checksum": "2f404c1ec8c3843202db3c26df897da8"
    },
    "www/OR_41009_Columbia_County.zip": {
      "checksum": "2019bccbcdd36c6caf3c7a011cb6224b"
    },
    "www/OR_41011_Coos_County.zip": {
      "checksum": "d1a2c488619203a0f36e466972490e43"
    },
    "www/OR_41013_Crook_County.zip": {
      "checksum": "27a5bccbc1030b9b3879380ae5725c64"
    },
    "www/OR_41015_Curry_County.zip": {
      "checksum": "65d6109dd5339cb5d460968916102490"
    },
    "www/OR_41017_Deschutes_County.zip": {
      "checksum": "a2e3b1e2895259196daa735347e083df"
    },
    "www/OR_41019_Douglas_County.zip": {
      "checksum": "73c003ad631667e1834423ce5c20f36a"
    },
    "www/OR_41021_Gilliam_County.zip": {
      "checksum": "008a4443c3e6755bf8d3da00ce1aef5e"
    },
    "www/OR_41023_Grant_County.zip": {
      "checksum": "0a6a31532876911ec24fc2e4fa7bdf8e"
    },
    "www/OR_41025_Harney_County.zip": {
      "checksum": "01aa3b3b2eb80d3f958049a3d75fae29"
    },
    "www/OR_41027_Hood_River_County.zip": {
      "checksum": "4940f0d1e1c26e551e616e8d972eccde"
    },
    "www/OR_41029_Jackson_County.zip": {
      "checksum": "12f106a2e9a727dcbc81188aabc1be25"
    },
    "www/OR_41031_Jefferson_County.zip": {
      "checksum": "d18714b2844e8dbfb471efc6dba0968a"
    },
    "www/OR_41033_Josephine_County.zip": {
      "checksum": "9ef9e4ca8423f725959de83c1a61796f"
    },
    "www/OR_41035_Klamath_County.zip": {
      "checksum": "50b325bbe76d667203699aa69ec26dae"
    },
    "www/OR_41037_Lake_County.zip": {
      "checksum": "eba6dd4928e5d100eef83f39f7ce2a0f"
    },
    "www/OR_41039_Lane_County.zip": {
      "checksum": "460c3a55c62c7813f461a42e7955eb9a"
    },
    "www/OR_41041_Lincoln_County.zip": {
      "checksum": "05b1e5086d1186453fec6a4ae5cdea08"
    },
    "www/OR_41043_Linn_County.zip": {
      "checksum": "2fb0e801485b6f5e7578e448f7614655"
    },
    "www/OR_41045_Malheur_County.zip": {
      "checksum": "e27dfb1853a3fddfb6aa34589e67037b"
    },
    "www/OR_41047_Marion_County.zip": {
      "checksum": "62c42c14f37519eda1e8e06ab426d513"
    },
    "www/OR_41049_Morrow_County.zip": {
      "checksum": "bdbac7317458cbefa8111479a4ba64db"
    },
    "www/OR_41051_Multnomah_County.zip": {
      "checksum": "cdc1f21d1fecceddbe510a9a6cc978ee"
    },
    "www/OR_41053_Polk_County.zip": {
      "checksum": "741560697be7d4e3dc61a4ad2bc3677e"
    },
    "www/OR_41055_Sherman_County.zip": {
      "checksum": "53f5b4384fd5aa5a2fb84e1da75b7111"
    },
    "www/OR_41057_Tillamook_County.zip": {
      "checksum": "60dd9b71498db3130f3f34029ba8e314"
    },
    "www/OR_41059_Umatilla_County.zip": {
      "checksum": "3eb4cf433fcaab570a00ab79229943a5"
    },
    "www/OR_41061_Union_County.zip": {
      "checksum": "1eae5276116859dd40e2e357d7a49c1c"
    },
    "www/OR_41063_Wallowa_County.zip": {
      "checksum": "bd9bb90270226e75fc3512384a847a16"
    },
    "www/OR_41065_Wasco_County.zip": {
      "checksum": "d27d534a4ce707970c33a5fbf7464111"
    },
    "www/OR_41067_Washington_County.zip": {
      "checksum": "56a97c9c03ac8ff44de64d843fadc473"
    },
    "www/OR_41069_Wheeler_County.zip": {
      "checksum": "0b797fa88e10549240ebe6d3ae8de428"
    },
    "www/OR_41071_Yamhill_County.zip": {
      "checksum": "0222937c7729e4971834f7e28a549f5a"
    },
    "www/PA_42001_Adams_County.zip": {
      "checksum": "0c9061bdcaff3ccaae0950b029cf9dd3"
    },
    "www/PA_42003_Allegheny_County.zip": {
      "checksum": "c8790f3efee9c583ae88882d283f94d6"
    },
    "www/PA_42005_Armstrong_County.zip": {
      "checksum": "eaa2e97db8c9cd5dea12af6c8a0a3176"
    },
    "www/PA_42007_Beaver_County.zip": {
      "checksum": "c35a192aa7815c486294cb16aba7e8a2"
    },
    "www/PA_42009_Bedford_County.zip": {
      "checksum": "0f10ac1b20e87b47c947ce829fd9b244"
    },
    "www/PA_42011_Berks_County.zip": {
      "checksum": "b0ef328fd69ec953ec23ca567565ae35"
    },
    "www/PA_42013_Blair_County.zip": {
      "checksum": "b649e1701aefd619baf31e3bd77fe803"
    },
    "www/PA_42015_Bradford_County.zip": {
      "checksum": "686ff8ed4bcccf684265acbef86e92e6"
    },
    "www/PA_42017_Bucks_County.zip": {
      "checksum": "44e89ca7a9c96a27954f437b188b3785"
    },
    "www/PA_42019_Butler_County.zip": {
      "checksum": "01f50f4b795b2c39a7c103f0928a9f7c"
    },
    "www/PA_42021_Cambria_County.zip": {
      "checksum": "84df0b819d8e9f6f6d920aee5af63ae2"
    },
    "www/PA_42023_Cameron_County.zip": {
      "checksum": "2416bbdb0cc9df939c3d4223d7486df3"
    },
    "www/PA_42025_Carbon_County.zip": {
      "checksum": "5e8dc6f1115d95d5ef5eac75c758515c"
    },
    "www/PA_42027_Centre_County.zip": {
      "checksum": "eddddb130bf91c74d23e98a0f830967c"
    },
    "www/PA_42029_Chester_County.zip": {
      "checksum": "1c2c927543ddc1dc4fa41bd78faadf40"
    },
    "www/PA_42031_Clarion_County.zip": {
      "checksum": "87341f78d71cd6edfdb1f139cf8bb697"
    },
    "www/PA_42033_Clearfield_County.zip": {
      "checksum": "768ac28a0584e9fc88901aaf4f431def"
    },
    "www/PA_42035_Clinton_County.zip": {
      "checksum": "7896d17d03d4495d34d7ee4cbcf4e0a3"
    },
    "www/PA_42037_Columbia_County.zip": {
      "checksum": "a9281b6326bfc6c82d66fd00c2c7e22f"
    },
    "www/PA_42039_Crawford_County.zip": {
      "checksum": "1b68ca6a7933e61f0459c7bb5d248e02"
    },
    "www/PA_42041_Cumberland_County.zip": {
      "checksum": "ddbbf9e1ef19c6ff477e86aa2d0433da"
    },
    "www/PA_42043_Dauphin_County.zip": {
      "checksum": "5d893fb1b1699ba9b11ab4f0d5b80dd4"
    },
    "www/PA_42045_Delaware_County.zip": {
      "checksum": "8196e39cf25cb9ef4dd221423b612822"
    },
    "www/PA_42047_Elk_County.zip": {
      "checksum": "4088a0d987eaacd6150c89b4856e370c"
    },
    "www/PA_42049_Erie_County.zip": {
      "checksum": "4bec82b1797b63e380f3682efb635e4f"
    },
    "www/PA_42051_Fayette_County.zip": {
      "checksum": "730f3adb383f1d916445eeb37cabf68e"
    },
    "www/PA_42053_Forest_County.zip": {
      "checksum": "a747fc4b16fdc82f6aa2ea456008ad6b"
    },
    "www/PA_42055_Franklin_County.zip": {
      "checksum": "9d15e3252e79e12899122fca45142e3f"
    },
    "www/PA_42057_Fulton_County.zip": {
      "checksum": "d146d2682a9b4498ce9aeca4099e377e"
    },
    "www/PA_42059_Greene_County.zip": {
      "checksum": "726e3a7a8398bacecde79d16e86005e1"
    },
    "www/PA_42061_Huntingdon_County.zip": {
      "checksum": "108f3370d03eb68da559af2a727f579d"
    },
    "www/PA_42063_Indiana_County.zip": {
      "checksum": "8eb825054886dc00eca3ef7b63d8a718"
    },
    "www/PA_42065_Jefferson_County.zip": {
      "checksum": "ed9ec4d56528449504c8402e15c9c679"
    },
    "www/PA_42067_Juniata_County.zip": {
      "checksum": "ff2b493bafb5e0de0fde1bf691859bad"
    },
    "www/PA_42069_Lackawanna_County.zip": {
      "checksum": "b4c91b986ff3c45f03985e641b73a5b2"
    },
    "www/PA_42071_Lancaster_County.zip": {
      "checksum": "8fdbe7ec32eb0e1473ceb165a5dfcc7e"
    },
    "www/PA_42073_Lawrence_County.zip": {
      "checksum": "d798f962edca48d896e63a4d23e7ef93"
    },
    "www/PA_42075_Lebanon_County.zip": {
      "checksum": "6c3c2a16dc2c6ce737cd61d1ec2d5f9b"
    },
    "www/PA_42077_Lehigh_County.zip": {
      "checksum": "cc45e76e9eee04528ee2f388bd6d9b5e"
    },
    "www/PA_42079_Luzerne_County.zip": {
      "checksum": "b9b3ed59b8b9dc218a7f28a6efd46844"
    },
    "www/PA_42081_Lycoming_County.zip": {
      "checksum": "69bebbbe43a6812dd7faf1105468179f"
    },
    "www/PA_42083_McKean_County.zip": {
      "checksum": "ddc9300390a96b3304089ca68ea76503"
    },
    "www/PA_42085_Mercer_County.zip": {
      "checksum": "f6f1a845e05790c46dffbddf049f5a3b"
    },
    "www/PA_42087_Mifflin_County.zip": {
      "checksum": "7ccce7e133ff161a94c55a5541c9a185"
    },
    "www/PA_42089_Monroe_County.zip": {
      "checksum": "7984f16f749fa04fd30f077deacb829a"
    },
    "www/PA_42091_Montgomery_County.zip": {
      "checksum": "b6dffb1b92387b8534dac51084e1e6e6"
    },
    "www/PA_42093_Montour_County.zip": {
      "checksum": "73fa96c3c1c679309a9e8f9c0e032f45"
    },
    "www/PA_42095_Northampton_County.zip": {
      "checksum": "9100f84f49768b7a6fb6afc4d2207e51"
    },
    "www/PA_42097_Northumberland_County.zip": {
      "checksum": "c3feb67e427c34f93fa0fb9567d4f557"
    },
    "www/PA_42099_Perry_County.zip": {
      "checksum": "a7e8a87f5b14450c06f34b6e82060cb1"
    },
    "www/PA_42101_Philadelphia_County.zip": {
      "checksum": "2175ad76098d49876a056207968ba094"
    },
    "www/PA_42103_Pike_County.zip": {
      "checksum": "d50c86f7c61b2c8371f2b16530830441"
    },
    "www/PA_42105_Potter_County.zip": {
      "checksum": "d01a075953207346d6762ef5b92baeea"
    },
    "www/PA_42107_Schuylkill_County.zip": {
      "checksum": "c430953fd0e7ce276e5759c6aedee331"
    },
    "www/PA_42109_Snyder_County.zip": {
      "checksum": "dc6ecfa14589c0759b100bd31fedec34"
    },
    "www/PA_42111_Somerset_County.zip": {
      "checksum": "5131ff37a0095b37fd3c6ea8746a8588"
    },
    "www/PA_42113_Sullivan_County.zip": {
      "checksum": "cda5b76685d4d4dc5716c54ae5c88b15"
    },
    "www/PA_42115_Susquehanna_County.zip": {
      "checksum": "e6748eb26864a2c51741f600cef28bb9"
    },
    "www/PA_42117_Tioga_County.zip": {
      "checksum": "610b862c310a301f0a17355582f76693"
    },
    "www/PA_42119_Union_County.zip": {
      "checksum": "31035417c703ccc921686ca3ab9441fd"
    },
    "www/PA_42121_Venango_County.zip": {
      "checksum": "a11e8f0656a881c0677a8523e0c34a13"
    },
    "www/PA_42123_Warren_County.zip": {
      "checksum": "0423c4716268c2f0c4ff6f63bc607732"
    },
    "www/PA_42125_Washington_County.zip": {
      "checksum": "d0762d8b2e4b1e9b7ea2dbc4cf81f284"
    },
    "www/PA_42127_Wayne_County.zip": {
      "checksum": "d608cc16d168bc4af2b2ff4d33a95331"
    },
    "www/PA_42129_Westmoreland_County.zip": {
      "checksum": "148205d41cf0877ce0e2a126c0e4457b"
    },
    "www/PA_42131_Wyoming_County.zip": {
      "checksum": "56928a6ee3acf024ca250bb6c00162aa"
    },
    "www/PA_42133_York_County.zip": {
      "checksum": "0a0cdb670f14ebbba0ef81692de516e3"
    },
    "www/RI_44001_Bristol_County.zip": {
      "checksum": "b5a7e0cc9d42c4c680b10896b1f8740c"
    },
    "www/RI_44003_Kent_County.zip": {
      "checksum": "eb3a507495445fa4c7ae327189fdea14"
    },
    "www/RI_44005_Newport_County.zip": {
      "checksum": "c11ef9dacdb1a810c304e3dfaac9df51"
    },
    "www/RI_44007_Providence_County.zip": {
      "checksum": "160bcbeaa8339775b43ecd7741c8612b"
    },
    "www/RI_44009_Washington_County.zip": {
      "checksum": "89137c7f6bab395cae94c43899996c94"
    },
    "www/SC_45001_Abbeville_County.zip": {
      "checksum": "74d05c0853d329be8e34f9b10d5977c0"
    },
    "www/SC_45003_Aiken_County.zip": {
      "checksum": "53b6c7dbef31805fcf4feb60ee9b8acd"
    },
    "www/SC_45005_Allendale_County.zip": {
      "checksum": "d5bdb1b2ec9e9c71ce4f4b1583f56880"
    },
    "www/SC_45007_Anderson_County.zip": {
      "checksum": "f6984dee36c51389cc36bd96fa3f7126"
    },
    "www/SC_45009_Bamberg_County.zip": {
      "checksum": "f8de79e5eb5721bd69eec84ba0ae45ca"
    },
    "www/SC_45011_Barnwell_County.zip": {
      "checksum": "33cb60e17a6d412b3a9b94511192698c"
    },
    "www/SC_45013_Beaufort_County.zip": {
      "checksum": "138043847973cdd4388883066c542043"
    },
    "www/SC_45015_Berkeley_County.zip": {
      "checksum": "663da58dade7058b7ad28641bc92566f"
    },
    "www/SC_45017_Calhoun_County.zip": {
      "checksum": "2e40b9185d315b6048566fe1908b3b3c"
    },
    "www/SC_45019_Charleston_County.zip": {
      "checksum": "c1a60e3f2f96f82c7b0664e77b07f947"
    },
    "www/SC_45021_Cherokee_County.zip": {
      "checksum": "4da0ab79a8052afe7c4fa4eaa7dccfc6"
    },
    "www/SC_45023_Chester_County.zip": {
      "checksum": "d20530d59226e601dc9b6b90b7aeef8c"
    },
    "www/SC_45025_Chesterfield_County.zip": {
      "checksum": "56c60bd213f3c54a4080b3adfd298911"
    },
    "www/SC_45027_Clarendon_County.zip": {
      "checksum": "5cbd46082c8e5145d56c8235d0156622"
    },
    "www/SC_45029_Colleton_County.zip": {
      "checksum": "5527e8f26a8bc50622e6d762fc700e70"
    },
    "www/SC_45031_Darlington_County.zip": {
      "checksum": "a1d785d43e5c0cbe9dfcbe927c104a90"
    },
    "www/SC_45033_Dillon_County.zip": {
      "checksum": "4b7bacc4c8aee28b366e02e1a4b12038"
    },
    "www/SC_45035_Dorchester_County.zip": {
      "checksum": "68d89c18321a08e275196a6609e8192c"
    },
    "www/SC_45037_Edgefield_County.zip": {
      "checksum": "9c001cc0d8d0ca00cb0ce1f8998cf3b7"
    },
    "www/SC_45039_Fairfield_County.zip": {
      "checksum": "0312e5fd269fc0c43dbb8c55b174b9ae"
    },
    "www/SC_45041_Florence_County.zip": {
      "checksum": "d19f0c01b85ebdbc24b273b0e3495e7d"
    },
    "www/SC_45043_Georgetown_County.zip": {
      "checksum": "e4fa89243c58aa9dc72a731e5aa1bbfd"
    },
    "www/SC_45045_Greenville_County.zip": {
      "checksum": "da6cb49f657c09672a5ed5f3a6d0561d"
    },
    "www/SC_45047_Greenwood_County.zip": {
      "checksum": "da3745e3a7c30b4b23288a40df03e10d"
    },
    "www/SC_45049_Hampton_County.zip": {
      "checksum": "d10669b5c9be765a50614924e285eb99"
    },
    "www/SC_45051_Horry_County.zip": {
      "checksum": "c53a884868c7110bee9ae2be61b4c475"
    },
    "www/SC_45053_Jasper_County.zip": {
      "checksum": "809848e71e8adced0483506adbee7817"
    },
    "www/SC_45055_Kershaw_County.zip": {
      "checksum": "93f0299cc67b6b0327bae4b8ceb47fc6"
    },
    "www/SC_45057_Lancaster_County.zip": {
      "checksum": "d2181d13a82ebb469b14ae9f0a1def49"
    },
    "www/SC_45059_Laurens_County.zip": {
      "checksum": "04cda6de725ebcd090dc83c518954a18"
    },
    "www/SC_45061_Lee_County.zip": {
      "checksum": "432b5a742a2a5f1b1241d5a258f7bc7c"
    },
    "www/SC_45063_Lexington_County.zip": {
      "checksum": "781c43794bfedef645ca2a71cc91b4eb"
    },
    "www/SC_45065_McCormick_County.zip": {
      "checksum": "d48e4a8b085b2ce20ff6fedb917d5e47"
    },
    "www/SC_45069_Marlboro_County.zip": {
      "checksum": "70e5ce6b74fa996e63d253e38765b284"
    },
    "www/SC_45071_Newberry_County.zip": {
      "checksum": "9192ae57eae6d269113c9a99198c2e72"
    },
    "www/SC_45073_Oconee_County.zip": {
      "checksum": "bdb7b7b76fde66cf0d19bbe0b2749886"
    },
    "www/SC_45075_Orangeburg_County.zip": {
      "checksum": "76c5b15884687f4ff1cb0695d8aca598"
    },
    "www/SC_45077_Pickens_County.zip": {
      "checksum": "acb06b64d493dc68501a5d0b809a5a0c"
    },
    "www/SC_45079_Richland_County.zip": {
      "checksum": "300a41e47d4b837584f6aeb18354627b"
    },
    "www/SC_45081_Saluda_County.zip": {
      "checksum": "7d6ade7c36df9a7db30bfe3306047a49"
    },
    "www/SC_45083_Spartanburg_County.zip": {
      "checksum": "a06b5b05cf13d1eec3da88c89433c4c7"
    },
    "www/SC_45085_Sumter_County.zip": {
      "checksum": "17a48dae8b5f696c478e6b26f0fa393e"
    },
    "www/SC_45087_Union_County.zip": {
      "checksum": "dbbed6d56dc0c3d1a77c58d8ce7924e5"
    },
    "www/SC_45089_Williamsburg_County.zip": {
      "checksum": "252557123e8ea09cf77c90885797a278"
    },
    "www/SC_45091_York_County.zip": {
      "checksum": "b1e64857ea0ca58c9a8fbbe86a21fdd0"
    },
    "www/SD_46005_Beadle_County.zip": {
      "checksum": "b76c6e16b50d45b8a7fefea76ea8a206"
    },
    "www/SD_46015_Brule_County.zip": {
      "checksum": "eee702c4349eadea614de194915d7684"
    },
    "www/SD_46019_Butte_County.zip": {
      "checksum": "9b1a7a5b9d42a469a788c924935b89cf"
    },
    "www/SD_46021_Campbell_County.zip": {
      "checksum": "35d47e1940e026e15b919c77637efe57"
    },
    "www/SD_46025_Clark_County.zip": {
      "checksum": "4174d2a917d7ec1a3126a81cfafe2be2"
    },
    "www/SD_46029_Codington_County.zip": {
      "checksum": "a7bcad9231350a6608aad4fb570b7d7e"
    },
    "www/SD_46033_Custer_County.zip": {
      "checksum": "364abc873a802892632747ba11d69f33"
    },
    "www/SD_46035_Davison_County.zip": {
      "checksum": "272d3b293c3e4e5dc47c8bbb00b6f87f"
    },
    "www/SD_46039_Deuel_County.zip": {
      "checksum": "31ef7c370d9f245f935ab2cce0b59b0a"
    },
    "www/SD_46043_Douglas_County.zip": {
      "checksum": "017341b8e19556c08edb1a1fbb817bc6"
    },
    "www/SD_46063_Harding_County.zip": {
      "checksum": "ff9b34ccd3beeb05302a7be4e5c55c69"
    },
    "www/SD_46065_Hughes_County.zip": {
      "checksum": "6e976dff5d598bf8a07c71796f360cb1"
    },
    "www/SD_46073_Jerauld_County.zip": {
      "checksum": "5aa60b44e7540bf423503963f4be2f7d"
    },
    "www/SD_46077_Kingsbury_County.zip": {
      "checksum": "1082e8d056993a1f96e00a6e7b876456"
    },
    "www/SD_46089_McPherson_County.zip": {
      "checksum": "b19a10742ff967dc5f48b39d85d38de2"
    },
    "www/SD_46093_Meade_County.zip": {
      "checksum": "eac960e015de8e032d150f576ff97a4e"
    },
    "www/SD_46097_Miner_County.zip": {
      "checksum": "f2d243271487be8e74eef38e58c502d6"
    },
    "www/SD_46099_Minnehaha_County.zip": {
      "checksum": "153e699c94804622b05474d55a91bd7b"
    },
    "www/SD_46103_Pennington_County.zip": {
      "checksum": "b6ec4cc775f81b2f5c5004d36f229c14"
    },
    "www/SD_46105_Perkins_County.zip": {
      "checksum": "f1e2028e992894ffc788c4eea32003fa"
    },
    "www/SD_46111_Sanborn_County.zip": {
      "checksum": "807fa32918ff8eeaa5ab26a746c75495"
    },
    "www/SD_46115_Spink_County.zip": {
      "checksum": "1ce8cf9189fc9d326ad8aa0bfdb470f5"
    },
    "www/SD_46117_Stanley_County.zip": {
      "checksum": "6d837f666ca74436188ced00dcd37196"
    },
    "www/SD_46127_Union_County.zip": {
      "checksum": "c2a9a07872b0f583149ff4c18401cf56"
    },
    "www/SD_46135_Yankton_County.zip": {
      "checksum": "596c41f9ec42e9f853bb06d1893bb7b0"
    },
    "www/TN_47001_Anderson_County.zip": {
      "checksum": "c67e7506aac1416017b1cc796327c83b"
    },
    "www/TN_47003_Bedford_County.zip": {
      "checksum": "6505e606ef3c2b32dd1cb8d49a97000d"
    },
    "www/TN_47005_Benton_County.zip": {
      "checksum": "6bface3563dbbc0c750c4a1c0dc13890"
    },
    "www/TN_47007_Bledsoe_County.zip": {
      "checksum": "c7a777c5bd2e04417ba453d0b27912ec"
    },
    "www/TN_47009_Blount_County.zip": {
      "checksum": "f95253bee41b2e96009e47b0534e0b21"
    },
    "www/TN_47011_Bradley_County.zip": {
      "checksum": "282cc4e7c0af47a11a46d4ef1bfc5ea4"
    },
    "www/TN_47013_Campbell_County.zip": {
      "checksum": "639ed38bd78fa011c70595b729664d92"
    },
    "www/TN_47015_Cannon_County.zip": {
      "checksum": "26d3f7849c7026d47bc39bf55f6702fb"
    },
    "www/TN_47017_Carroll_County.zip": {
      "checksum": "0696759c87306cef519d0f9b4fc5aaa0"
    },
    "www/TN_47019_Carter_County.zip": {
      "checksum": "4f6b44ef738047b493210047287b7ff0"
    },
    "www/TN_47021_Cheatham_County.zip": {
      "checksum": "3da759bd0d5b65e37a59f25b9729baea"
    },
    "www/TN_47023_Chester_County.zip": {
      "checksum": "79b15637ebdbd02439af257db122d8a6"
    },
    "www/TN_47025_Claiborne_County.zip": {
      "checksum": "07e417bceccb9c81e84a2e605a82163b"
    },
    "www/TN_47027_Clay_County.zip": {
      "checksum": "aa2babc2b06acdf3ee211bd428f67a53"
    },
    "www/TN_47029_Cocke_County.zip": {
      "checksum": "165c34bacfcd29e3500ce79ff3ad47b5"
    },
    "www/TN_47031_Coffee_County.zip": {
      "checksum": "af31ecfdf646da3bfb313a2236af75e4"
    },
    "www/TN_47033_Crockett_County.zip": {
      "checksum": "2223536a1843a1ad91c033fbc616eaa0"
    },
    "www/TN_47035_Cumberland_County.zip": {
      "checksum": "080e201c67dea44f7f305ca5e5d74f31"
    },
    "www/TN_47037_Davidson_County.zip": {
      "checksum": "c9183885f89c373da2b8c7e3bfcfebd6"
    },
    "www/TN_47039_Decatur_County.zip": {
      "checksum": "dbd0839449f1e6d958d5d6884a296860"
    },
    "www/TN_47041_DeKalb_County.zip": {
      "checksum": "66154fb6f803d9dde9b56c62e69be2cd"
    },
    "www/TN_47043_Dickson_County.zip": {
      "checksum": "73351bf43a5d4576c6f333bec6d6f56e"
    },
    "www/TN_47045_Dyer_County.zip": {
      "checksum": "ca70cd6b8a768e5ac9dd4c66c9432204"
    },
    "www/TN_47047_Fayette_County.zip": {
      "checksum": "88c9739caf47c14507745f838d90628b"
    },
    "www/TN_47049_Fentress_County.zip": {
      "checksum": "72a4a5f2a59d5dbadfc5406093e87651"
    },
    "www/TN_47051_Franklin_County.zip": {
      "checksum": "fbceb14d70e0235ac80b9b2228ee4f92"
    },
    "www/TN_47053_Gibson_County.zip": {
      "checksum": "aa586ffb16f9433b6e8fb9c1368a935b"
    },
    "www/TN_47055_Giles_County.zip": {
      "checksum": "a7b299ea3881827cb2bc16f6d6e98c5a"
    },
    "www/TN_47057_Grainger_County.zip": {
      "checksum": "a0f3cc082e12190524d4dd55701385cc"
    },
    "www/TN_47059_Greene_County.zip": {
      "checksum": "7a73fef3ead894f87a5f4d53088577b3"
    },
    "www/TN_47061_Grundy_County.zip": {
      "checksum": "9462d2919fcf1b2656fb9ad9701920f7"
    },
    "www/TN_47063_Hamblen_County.zip": {
      "checksum": "7a32e092655d4901c83961a4644b78af"
    },
    "www/TN_47065_Hamilton_County.zip": {
      "checksum": "9bbe9ef030b2c95a38e9c22e77e27cf6"
    },
    "www/TN_47067_Hancock_County.zip": {
      "checksum": "7b31ad39e885673feea9decd6a75a7d0"
    },
    "www/TN_47069_Hardeman_County.zip": {
      "checksum": "0836a1186392ab8b59d4e2727642a8b5"
    },
    "www/TN_47071_Hardin_County.zip": {
      "checksum": "e0985e18f28adf82b4ac4761f9a3bdc4"
    },
    "www/TN_47073_Hawkins_County.zip": {
      "checksum": "15105a3422737a65123709c501f4d707"
    },
    "www/TN_47075_Haywood_County.zip": {
      "checksum": "7cad867cc7969dfa1c8f92824669c5fe"
    },
    "www/TN_47077_Henderson_County.zip": {
      "checksum": "75fc00e8e7a710eac99a0f07db785020"
    },
    "www/TN_47079_Henry_County.zip": {
      "checksum": "d090f9bf69fdc0c225d27923a9b9f391"
    },
    "www/TN_47081_Hickman_County.zip": {
      "checksum": "78cd901f9063fd714b21c2fea834d6f3"
    },
    "www/TN_47083_Houston_County.zip": {
      "checksum": "d68c5dca498a8a8b6370b941c9bf1f43"
    },
    "www/TN_47085_Humphreys_County.zip": {
      "checksum": "554b6b169ea71bfba0a9288b2ed61485"
    },
    "www/TN_47087_Jackson_County.zip": {
      "checksum": "afc34913a8f4a5703fd8a304dd8cfe9c"
    },
    "www/TN_47089_Jefferson_County.zip": {
      "checksum": "285e44a02aa7f84c8622274e30e3c435"
    },
    "www/TN_47091_Johnson_County.zip": {
      "checksum": "4cf02cf6f97771b8511b9be4735839c4"
    },
    "www/TN_47093_Knox_County.zip": {
      "checksum": "94b62c8dd9dc5e14c9c7e455ea10016e"
    },
    "www/TN_47095_Lake_County.zip": {
      "checksum": "43546f2475db5a448f8e07a295efcb8b"
    },
    "www/TN_47097_Lauderdale_County.zip": {
      "checksum": "db3d5e28498e98db70234e6c8999c0fb"
    },
    "www/TN_47099_Lawrence_County.zip": {
      "checksum": "d8d17f38f2ab763063b2e3cbbabff194"
    },
    "www/TN_47101_Lewis_County.zip": {
      "checksum": "5d1f8f3c2989f159beb5a7cb32b9214d"
    },
    "www/TN_47103_Lincoln_County.zip": {
      "checksum": "ce0202736d58e6e664cf99fa3998cda4"
    },
    "www/TN_47105_Loudon_County.zip": {
      "checksum": "d050f77c843b8ff07b65d9f7a80926d3"
    },
    "www/TN_47107_McMinn_County.zip": {
      "checksum": "3fb62394ec7f64a68a0907296c381a49"
    },
    "www/TN_47109_McNairy_County.zip": {
      "checksum": "7940f33145843c63312e13b33b46b48a"
    },
    "www/TN_47111_Macon_County.zip": {
      "checksum": "517afcc35fbc2c6d1a5530b8f256cab8"
    },
    "www/TN_47113_Madison_County.zip": {
      "checksum": "8b7546280ea10901822dc349b6626bab"
    },
    "www/TN_47115_Marion_County.zip": {
      "checksum": "c15912bfe9a8c0513f2d6dd8a7f5b1fe"
    },
    "www/TN_47117_Marshall_County.zip": {
      "checksum": "6f17d6051c196741f5757e56821766c4"
    },
    "www/TN_47119_Maury_County.zip": {
      "checksum": "805cd167775adce5af342a096dc50eaf"
    },
    "www/TN_47121_Meigs_County.zip": {
      "checksum": "3dd770e5aad4eb7fd26843debbd702a6"
    },
    "www/TN_47123_Monroe_County.zip": {
      "checksum": "2ccf862bb330f14c4cfc75b88eb5bf82"
    },
    "www/TN_47125_Montgomery_County.zip": {
      "checksum": "e6f99eaf0ddaa5e3c27f64f82b4bb247"
    },
    "www/TN_47127_Moore_County.zip": {
      "checksum": "aedcc74f812f62a4845ea4f9ff21e0be"
    },
    "www/TN_47129_Morgan_County.zip": {
      "checksum": "d25c21c10853233a2fee45e14a8a69a2"
    },
    "www/TN_47131_Obion_County.zip": {
      "checksum": "5e1337c6bc82bf9f750e78d38ee59e9c"
    },
    "www/TN_47133_Overton_County.zip": {
      "checksum": "c08f322dd7bc30419acd931063fb3fc0"
    },
    "www/TN_47135_Perry_County.zip": {
      "checksum": "6c54ab7b3ce07b33cc674b8191edf8cd"
    },
    "www/TN_47137_Pickett_County.zip": {
      "checksum": "1a196e9f733273f3907a8197f564a155"
    },
    "www/TN_47139_Polk_County.zip": {
      "checksum": "5c32cda69aedc35008b093be01ec86ce"
    },
    "www/TN_47141_Putnam_County.zip": {
      "checksum": "928b892d63182ed48ce9044d0188912c"
    },
    "www/TN_47143_Rhea_County.zip": {
      "checksum": "3330360162f700f10008201fdc37b4cf"
    },
    "www/TN_47145_Roane_County.zip": {
      "checksum": "c2eb3803d49f4dff75e7bb0cb749a6df"
    },
    "www/TN_47147_Robertson_County.zip": {
      "checksum": "a98edd1f5268e78eaa5855ef061e53f7"
    },
    "www/TN_47149_Rutherford_County.zip": {
      "checksum": "ea2094fee9f1ff2fc6a995e9bd32502f"
    },
    "www/TN_47151_Scott_County.zip": {
      "checksum": "6146023481818b25553a9c06cc602229"
    },
    "www/TN_47153_Sequatchie_County.zip": {
      "checksum": "26ba1b4b344c95cd1e66a8b3a313f371"
    },
    "www/TN_47155_Sevier_County.zip": {
      "checksum": "0626530de5097953d4b28d64b0055d57"
    },
    "www/TN_47157_Shelby_County.zip": {
      "checksum": "66e29a36e83d25affc53e35ca25a6e34"
    },
    "www/TN_47159_Smith_County.zip": {
      "checksum": "cdc78d1ca444d4044bffa287a10898ab"
    },
    "www/TN_47161_Stewart_County.zip": {
      "checksum": "1a09a26ebfa65bdd3128ccbd9742deeb"
    },
    "www/TN_47163_Sullivan_County.zip": {
      "checksum": "4d401f9141365afebd4f694420bfd206"
    },
    "www/TN_47165_Sumner_County.zip": {
      "checksum": "05b93647c49e07e2b45ba10a8ef0a810"
    },
    "www/TN_47167_Tipton_County.zip": {
      "checksum": "762a1502bd34d3d68ee36cfb6a38d298"
    },
    "www/TN_47169_Trousdale_County.zip": {
      "checksum": "e144d133c74f4c2711cc3c3f08369b4b"
    },
    "www/TN_47171_Unicoi_County.zip": {
      "checksum": "01b7359f42ca4f18a378c42799d75ca1"
    },
    "www/TN_47173_Union_County.zip": {
      "checksum": "894a5ba653c9428cc62848f33316b142"
    },
    "www/TN_47175_Van_Buren_County.zip": {
      "checksum": "1cc017d9506e10573354fadd51d2e1dd"
    },
    "www/TN_47177_Warren_County.zip": {
      "checksum": "488f3d51440724da9a7b7fdfab0eb749"
    },
    "www/TN_47179_Washington_County.zip": {
      "checksum": "fb26aba60d9c91247ca94b673bfae5bc"
    },
    "www/TN_47181_Wayne_County.zip": {
      "checksum": "9d08c5b0c09b345d65d2c966e0367064"
    },
    "www/TN_47183_Weakley_County.zip": {
      "checksum": "772e7950d105a018e9485d21c6033192"
    },
    "www/TN_47185_White_County.zip": {
      "checksum": "9746e830fdb6c0abbb4fa97e75cd444a"
    },
    "www/TN_47187_Williamson_County.zip": {
      "checksum": "11d219b35dff1000628c3095d90d0711"
    },
    "www/TN_47189_Wilson_County.zip": {
      "checksum": "f8f18e9740988744950f93fa6591a3e5"
    },
    "www/TX_48001_Anderson_County.zip": {
      "checksum": "64201248b613c24c99efc18185eccca0"
    },
    "www/TX_48003_Andrews_County.zip": {
      "checksum": "3cc100fab112e12c418b1f4f713f0038"
    },
    "www/TX_48005_Angelina_County.zip": {
      "checksum": "b3e562f293691df7b82dddecf7a75012"
    },
    "www/TX_48007_Aransas_County.zip": {
      "checksum": "e55eb31e0f2cb9dd00d8fb034696c17e"
    },
    "www/TX_48009_Archer_County.zip": {
      "checksum": "9aefb05395fc2a227b0729a4177564a1"
    },
    "www/TX_48013_Atascosa_County.zip": {
      "checksum": "087f0a014bbe231e56d4ce236983083b"
    },
    "www/TX_48015_Austin_County.zip": {
      "checksum": "cb975452c3b474cedd23a4c207d8aff9"
    },
    "www/TX_48017_Bailey_County.zip": {
      "checksum": "ee2adc9785795aced27f202562791acd"
    },
    "www/TX_48019_Bandera_County.zip": {
      "checksum": "4070c6cdc4e172959f6855a1f80b93bb"
    },
    "www/TX_48021_Bastrop_County.zip": {
      "checksum": "c9d8ce87414a54092a1bcb409012ce1c"
    },
    "www/TX_48023_Baylor_County.zip": {
      "checksum": "1f5083e7328fbe83f553027eb868b153"
    },
    "www/TX_48025_Bee_County.zip": {
      "checksum": "7edb54c807b1d42c3e429149292e83c2"
    },
    "www/TX_48027_Bell_County.zip": {
      "checksum": "a5fb9c04e2d331496403e1cfc137a418"
    },
    "www/TX_48029_Bexar_County.zip": {
      "checksum": "34d0d3f5a7a1fe5da1d1b9a1ae2bb78e"
    },
    "www/TX_48031_Blanco_County.zip": {
      "checksum": "9d5833073a73560f993a41e6d1f550c3"
    },
    "www/TX_48033_Borden_County.zip": {
      "checksum": "a56c986b156b5f8261a40fdb266d49e6"
    },
    "www/TX_48035_Bosque_County.zip": {
      "checksum": "b12c85b04beb575b0702e5b89c0e6c64"
    },
    "www/TX_48037_Bowie_County.zip": {
      "checksum": "681e7e19595b37c98c3667102fdd81a1"
    },
    "www/TX_48039_Brazoria_County.zip": {
      "checksum": "2208e30197a6bdb299f4e6b5cf4197f7"
    },
    "www/TX_48041_Brazos_County.zip": {
      "checksum": "f8946f2ebdab812ed1f4a2cc998c4ed8"
    },
    "www/TX_48043_Brewster_County.zip": {
      "checksum": "04debb5dec6d84d6fdefbc6316004983"
    },
    "www/TX_48045_Briscoe_County.zip": {
      "checksum": "b361636f65856346f92e9d4355c5092f"
    },
    "www/TX_48047_Brooks_County.zip": {
      "checksum": "6efad9f6ac01998271f98bf76b8a65d8"
    },
    "www/TX_48049_Brown_County.zip": {
      "checksum": "07e7f58c8cd3f578f8a1e506f4fa90f1"
    },
    "www/TX_48051_Burleson_County.zip": {
      "checksum": "52381e12b3c82bd30ca1f4fc0505b8dc"
    },
    "www/TX_48053_Burnet_County.zip": {
      "checksum": "46fd743db5e1e38766d9045342033750"
    },
    "www/TX_48055_Caldwell_County.zip": {
      "checksum": "1d217b6b4342aa853284e213fa3537df"
    },
    "www/TX_48057_Calhoun_County.zip": {
      "checksum": "7b38227527efbc8a556ac8661913dcf2"
    },
    "www/TX_48059_Callahan_County.zip": {
      "checksum": "580204ca50ff4836d0b137c3a85e68c5"
    },
    "www/TX_48061_Cameron_County.zip": {
      "checksum": "efaaf603943016195c5a8c7008d899ce"
    },
    "www/TX_48063_Camp_County.zip": {
      "checksum": "e90e946ca6a7ca971392c518b6fd0c51"
    },
    "www/TX_48065_Carson_County.zip": {
      "checksum": "ed5d41a2b2b24da949a9acf74d1cd5d1"
    },
    "www/TX_48067_Cass_County.zip": {
      "checksum": "2136da773e0ea1127b5b9a4b06c5aa4a"
    },
    "www/TX_48069_Castro_County.zip": {
      "checksum": "c608b264602b1ebc38ac70fc04c61ebc"
    },
    "www/TX_48071_Chambers_County.zip": {
      "checksum": "549ebf5955056e66402bce9fba77b683"
    },
    "www/TX_48073_Cherokee_County.zip": {
      "checksum": "c68fd7860f51d29267c3cacdb54dd7c6"
    },
    "www/TX_48075_Childress_County.zip": {
      "checksum": "59d31a69783fd5fc76e1e50bb8b8d6bb"
    },
    "www/TX_48077_Clay_County.zip": {
      "checksum": "4cf94478a25bb32849d49231cc99e372"
    },
    "www/TX_48079_Cochran_County.zip": {
      "checksum": "a1f6bd99940e46169d598fe393a99bcb"
    },
    "www/TX_48081_Coke_County.zip": {
      "checksum": "8d4d9f52bedfc263a233dd04654f2b40"
    },
    "www/TX_48083_Coleman_County.zip": {
      "checksum": "15af4a7cfd0e09b61393ca105c3080be"
    },
    "www/TX_48085_Collin_County.zip": {
      "checksum": "984ffc85c459ea5718711d9f92737226"
    },
    "www/TX_48087_Collingsworth_County.zip": {
      "checksum": "b49907d303da5ec57b9d313cc5069880"
    },
    "www/TX_48089_Colorado_County.zip": {
      "checksum": "f5560b4042e2ee5f24341b42d42153dd"
    },
    "www/TX_48091_Comal_County.zip": {
      "checksum": "cfc445130a7f1c01fefb20ba847d16da"
    },
    "www/TX_48093_Comanche_County.zip": {
      "checksum": "8fcb6c33509c233a1d7b918aa9243d93"
    },
    "www/TX_48097_Cooke_County.zip": {
      "checksum": "587e20645823e3e6df8419a3d41b6b7c"
    },
    "www/TX_48099_Coryell_County.zip": {
      "checksum": "7de373086a36902eb29eeb722075b6c4"
    },
    "www/TX_48101_Cottle_County.zip": {
      "checksum": "e293e2e39487aab47debd24779184fab"
    },
    "www/TX_48103_Crane_County.zip": {
      "checksum": "7c27d141bd661565f679f2fa5b6987b3"
    },
    "www/TX_48105_Crockett_County.zip": {
      "checksum": "e7e6045127cfbfd58696bc6abf6a7d77"
    },
    "www/TX_48107_Crosby_County.zip": {
      "checksum": "f01ca5f26de9261ca66447393f8bd153"
    },
    "www/TX_48109_Culberson_County.zip": {
      "checksum": "bb3e2f64a0f26f850a6cb2861f1061ca"
    },
    "www/TX_48111_Dallam_County.zip": {
      "checksum": "428219c2c0b6a2fab90d685519c6f432"
    },
    "www/TX_48113_Dallas_County.zip": {
      "checksum": "bcf4d73cd9795251fcff7ef44bef53e0"
    },
    "www/TX_48115_Dawson_County.zip": {
      "checksum": "7f459868c8419807c35d64ad8158f7e3"
    },
    "www/TX_48119_Delta_County.zip": {
      "checksum": "11b57a60cbcb450985c4bd521c783389"
    },
    "www/TX_48121_Denton_County.zip": {
      "checksum": "84abb48f1e5fe726e6bd6a3c960f4e8e"
    },
    "www/TX_48123_DeWitt_County.zip": {
      "checksum": "6e691263dbf9d04dbd4126f4dc2b82dc"
    },
    "www/TX_48125_Dickens_County.zip": {
      "checksum": "f1b51aa57da53bc9c84860da66e6c503"
    },
    "www/TX_48127_Dimmit_County.zip": {
      "checksum": "54a4831feece7489a5dcfc620eb8668c"
    },
    "www/TX_48129_Donley_County.zip": {
      "checksum": "3f894629dfcda7c8b50c1794661d7247"
    },
    "www/TX_48131_Duval_County.zip": {
      "checksum": "cfd4fd34badd5d0cb42d422620cc31dd"
    },
    "www/TX_48133_Eastland_County.zip": {
      "checksum": "bcd8301490ab291ce2c2fed0e4bba130"
    },
    "www/TX_48135_Ector_County.zip": {
      "checksum": "a89784c16a91fa20e6362896e414dfb6"
    },
    "www/TX_48137_Edwards_County.zip": {
      "checksum": "293b34af54de6e0940d53bd8b5d49047"
    },
    "www/TX_48139_Ellis_County.zip": {
      "checksum": "b90e6f938939aec22cbe7ba6959134fb"
    },
    "www/TX_48141_El_Paso_County.zip": {
      "checksum": "16c43bfae6a61647a6670ad32ee99677"
    },
    "www/TX_48143_Erath_County.zip": {
      "checksum": "7fc860fa40107c4456f823c2ff5a29c8"
    },
    "www/TX_48145_Falls_County.zip": {
      "checksum": "b1555cd3bd265764731d5af2aaf1a837"
    },
    "www/TX_48147_Fannin_County.zip": {
      "checksum": "9471188f320ea0600bd43d6e6e273225"
    },
    "www/TX_48149_Fayette_County.zip": {
      "checksum": "fac7eb68cb81b7304beced143cc0f6dc"
    },
    "www/TX_48151_Fisher_County.zip": {
      "checksum": "78d717fc42a9167c9b1f2e8b97b65df2"
    },
    "www/TX_48153_Floyd_County.zip": {
      "checksum": "ac4e37d57023747f275a746ec24a148b"
    },
    "www/TX_48155_Foard_County.zip": {
      "checksum": "b72f8e598cdf5c2317fefaf6426783bb"
    },
    "www/TX_48157_Fort_Bend_County.zip": {
      "checksum": "8a8c69a61e9bffe56a9fe5224590b6ef"
    },
    "www/TX_48159_Franklin_County.zip": {
      "checksum": "a4adb62c02e399a2b6a0f74d146b633e"
    },
    "www/TX_48161_Freestone_County.zip": {
      "checksum": "c3987e8553334c356b96ee17376feaa3"
    },
    "www/TX_48163_Frio_County.zip": {
      "checksum": "7731a1f30c35e24570c9c2c1a65dfb5f"
    },
    "www/TX_48165_Gaines_County.zip": {
      "checksum": "8dd148a92b61e5c4049190af1138c021"
    },
    "www/TX_48167_Galveston_County.zip": {
      "checksum": "ca3c365d89701a2c8cc09d1a70044cce"
    },
    "www/TX_48169_Garza_County.zip": {
      "checksum": "c600b0ed99b06afb4dc975b633f6be99"
    },
    "www/TX_48171_Gillespie_County.zip": {
      "checksum": "73bfd963c1d38ee5a7b16deca901e4e8"
    },
    "www/TX_48173_Glasscock_County.zip": {
      "checksum": "98fad90175f2a3789efc448a203ae298"
    },
    "www/TX_48175_Goliad_County.zip": {
      "checksum": "6b581ba4384245c5a7390f1b09370cd3"
    },
    "www/TX_48177_Gonzales_County.zip": {
      "checksum": "55169467a2eafe085efa2eb5dc2dfb81"
    },
    "www/TX_48179_Gray_County.zip": {
      "checksum": "cd370514ef8fa9f19a4caa14e473a6cb"
    },
    "www/TX_48181_Grayson_County.zip": {
      "checksum": "f843f5b1dea5e47bbbbc1db07474ecc6"
    },
    "www/TX_48183_Gregg_County.zip": {
      "checksum": "2a454472b6d3a37733972a728ce6314e"
    },
    "www/TX_48185_Grimes_County.zip": {
      "checksum": "2cb21fd2d78cc5fa0bb8ffe5edc81434"
    },
    "www/TX_48187_Guadalupe_County.zip": {
      "checksum": "bc613462b55b2568539364f05f9d50d4"
    },
    "www/TX_48189_Hale_County.zip": {
      "checksum": "2ac119165440b8ae19d5114e4ba33a51"
    },
    "www/TX_48191_Hall_County.zip": {
      "checksum": "655a207cc8b4719cf329868d7fee1b03"
    },
    "www/TX_48193_Hamilton_County.zip": {
      "checksum": "6252ec7f99d49fbfcf897e2c4ccd05ff"
    },
    "www/TX_48195_Hansford_County.zip": {
      "checksum": "d1eff4c8b2046178de979092c4e416c6"
    },
    "www/TX_48197_Hardeman_County.zip": {
      "checksum": "fd90a1bb08534168797a73ed4ac909a3"
    },
    "www/TX_48199_Hardin_County.zip": {
      "checksum": "e84744ae529d8c3e64089c63d88e590b"
    },
    "www/TX_48201_Harris_County.zip": {
      "checksum": "e0a38a0d218c50298f867f9f648fc461"
    },
    "www/TX_48203_Harrison_County.zip": {
      "checksum": "3e6cf4808b9bfdf3d1604247449f2c06"
    },
    "www/TX_48205_Hartley_County.zip": {
      "checksum": "617c9539154a42ba551677ddb442194c"
    },
    "www/TX_48207_Haskell_County.zip": {
      "checksum": "6d6e6e179e48a30bfeacfb52c4b53176"
    },
    "www/TX_48209_Hays_County.zip": {
      "checksum": "c8203d922186e9d5ecfe27222920c1eb"
    },
    "www/TX_48211_Hemphill_County.zip": {
      "checksum": "480cfdccfd9e5be19c0bcb7ec7150397"
    },
    "www/TX_48213_Henderson_County.zip": {
      "checksum": "dc13bb9f6111f9cf81584de9d5d95c89"
    },
    "www/TX_48215_Hidalgo_County.zip": {
      "checksum": "02887b43f7fe69b08ce126cb8eca8579"
    },
    "www/TX_48217_Hill_County.zip": {
      "checksum": "bfaea68f4748afd57726d6ec99c1f737"
    },
    "www/TX_48219_Hockley_County.zip": {
      "checksum": "7b9ec6ef04e11fa8f37f2537df514c15"
    },
    "www/TX_48221_Hood_County.zip": {
      "checksum": "fcea236c7f11d7f1ca2e06d79e5320b6"
    },
    "www/TX_48223_Hopkins_County.zip": {
      "checksum": "b7495a9c9af400091f32b715b5623bca"
    },
    "www/TX_48225_Houston_County.zip": {
      "checksum": "d44e7664e30837753175ccd62fda626f"
    },
    "www/TX_48227_Howard_County.zip": {
      "checksum": "cf1f026e2fc3800ad72e313bfd860953"
    },
    "www/TX_48229_Hudspeth_County.zip": {
      "checksum": "afa0405647c41371d93e4c604cc428e1"
    },
    "www/TX_48231_Hunt_County.zip": {
      "checksum": "374f2bae1a48dfb2ec8cf60f406e1146"
    },
    "www/TX_48233_Hutchinson_County.zip": {
      "checksum": "b823c6f9a1b4199177f2d49ec56cd879"
    },
    "www/TX_48235_Irion_County.zip": {
      "checksum": "540c77d27509813ea19f10fd662f7734"
    },
    "www/TX_48237_Jack_County.zip": {
      "checksum": "838d0565a16518493d7efe6ad37ef39e"
    },
    "www/TX_48239_Jackson_County.zip": {
      "checksum": "82bee7fe303b60b9e04dd4291f8f92cd"
    },
    "www/TX_48241_Jasper_County.zip": {
      "checksum": "bcac1d8c5d4155ec18aaee54187d1ef9"
    },
    "www/TX_48243_Jeff_Davis_County.zip": {
      "checksum": "61d77858c7748275fd3bb1435909ed66"
    },
    "www/TX_48245_Jefferson_County.zip": {
      "checksum": "3e3fcb4869d348b55425f583e337500e"
    },
    "www/TX_48247_Jim_Hogg_County.zip": {
      "checksum": "6f549b30854affeecf9838d1d8fdd418"
    },
    "www/TX_48249_Jim_Wells_County.zip": {
      "checksum": "6f5aebeb6d169d565c402e7c9cc0e190"
    },
    "www/TX_48251_Johnson_County.zip": {
      "checksum": "6fc72579bf888bffe24e53bd6d34ae4a"
    },
    "www/TX_48253_Jones_County.zip": {
      "checksum": "c7441245dda8e7310e7ac107abefe4e0"
    },
    "www/TX_48255_Karnes_County.zip": {
      "checksum": "a6a99d9a96b57a0644de9b5bfc897371"
    },
    "www/TX_48257_Kaufman_County.zip": {
      "checksum": "570cbd48e4ed12800f1200d296399573"
    },
    "www/TX_48259_Kendall_County.zip": {
      "checksum": "8408992237797719be767d556b1dddc4"
    },
    "www/TX_48261_Kenedy_County.zip": {
      "checksum": "dbfe78bbf16ef3a3284d0e7d45186798"
    },
    "www/TX_48263_Kent_County.zip": {
      "checksum": "461127789ecf7d69e9eaf12e2610c29c"
    },
    "www/TX_48265_Kerr_County.zip": {
      "checksum": "223633c7534223a3895eee316d70ae62"
    },
    "www/TX_48269_King_County.zip": {
      "checksum": "4298d92240c26a8f129d9b2d5ca3e207"
    },
    "www/TX_48273_Kleberg_County.zip": {
      "checksum": "b176c488ecf48aa1dfc02a999405f226"
    },
    "www/TX_48275_Knox_County.zip": {
      "checksum": "390735bc1e9798a3f7301f5542310928"
    },
    "www/TX_48277_Lamar_County.zip": {
      "checksum": "e0740102ab0e80143393ec3ad73b0caa"
    },
    "www/TX_48279_Lamb_County.zip": {
      "checksum": "f1ba064b4ec053d773b88e4c82ad7e4c"
    },
    "www/TX_48283_La_Salle_County.zip": {
      "checksum": "c1b1d579520240d62fce03c0051617c0"
    },
    "www/TX_48285_Lavaca_County.zip": {
      "checksum": "0e1b6efef83267d62ee222f135ff6041"
    },
    "www/TX_48287_Lee_County.zip": {
      "checksum": "6309fb8f957a11ae9505dd8db8f36482"
    },
    "www/TX_48289_Leon_County.zip": {
      "checksum": "3bd84b9b7913a62751a531101a9e23d9"
    },
    "www/TX_48291_Liberty_County.zip": {
      "checksum": "56da2ae170542da85a6a5292ba4c1fa9"
    },
    "www/TX_48293_Limestone_County.zip": {
      "checksum": "04a99c9e94042456e4e507b64bf07d2a"
    },
    "www/TX_48295_Lipscomb_County.zip": {
      "checksum": "eb43cdefd050791281880266246f28f3"
    },
    "www/TX_48297_Live_Oak_County.zip": {
      "checksum": "4c2eea56c9bcae090449bc5534d9f6fc"
    },
    "www/TX_48299_Llano_County.zip": {
      "checksum": "bc1c3b321e08ddf521ba7d9f757fc7c2"
    },
    "www/TX_48301_Loving_County.zip": {
      "checksum": "61cc6c6405ae7f96a63631073476c496"
    },
    "www/TX_48303_Lubbock_County.zip": {
      "checksum": "bf934726e490de2c87c7a4da958a2db5"
    },
    "www/TX_48307_McCulloch_County.zip": {
      "checksum": "c763e58f581ce3f93693161520281033"
    },
    "www/TX_48309_McLennan_County.zip": {
      "checksum": "de1e5fd7a76a1d21697cea386000e1f0"
    },
    "www/TX_48311_McMullen_County.zip": {
      "checksum": "e9a7d78bd2b6900de11a0ab5d22113c8"
    },
    "www/TX_48313_Madison_County.zip": {
      "checksum": "2e7437b792e38d203a0da7f348ba7b80"
    },
    "www/TX_48315_Marion_County.zip": {
      "checksum": "251332d5e86e9a40d3015af43831f0cc"
    },
    "www/TX_48317_Martin_County.zip": {
      "checksum": "14051f9387689fdc2b09ab62dd2deeb7"
    },
    "www/TX_48319_Mason_County.zip": {
      "checksum": "9a83b90339c9fd69ce55bd980d03f921"
    },
    "www/TX_48321_Matagorda_County.zip": {
      "checksum": "b5ac03c6f6b9d524238f2a913d712e21"
    },
    "www/TX_48323_Maverick_County.zip": {
      "checksum": "9c139b5e79ff6dc60c8b2053f0231dbe"
    },
    "www/TX_48325_Medina_County.zip": {
      "checksum": "f32c68077df30269571e47abd6207bc8"
    },
    "www/TX_48327_Menard_County.zip": {
      "checksum": "0d0c4aa20583eef29d00494281d81e1a"
    },
    "www/TX_48329_Midland_County.zip": {
      "checksum": "a8012ff162a45ff7ebede9a75ee710be"
    },
    "www/TX_48331_Milam_County.zip": {
      "checksum": "0fec61781cea8a9796f5517f42918bd5"
    },
    "www/TX_48333_Mills_County.zip": {
      "checksum": "59986f216fe9a29d2b9c719be5e1a14b"
    },
    "www/TX_48335_Mitchell_County.zip": {
      "checksum": "b74c6244a37374307ada8cf2ebc39313"
    },
    "www/TX_48337_Montague_County.zip": {
      "checksum": "6ea574595f3aa7b942d9d8712fd025c0"
    },
    "www/TX_48339_Montgomery_County.zip": {
      "checksum": "fab4b3857bfe67408cbde47880a5932b"
    },
    "www/TX_48341_Moore_County.zip": {
      "checksum": "d77cb56db923d2686ce08ac31dbf2828"
    },
    "www/TX_48343_Morris_County.zip": {
      "checksum": "30fa189c14c6d297c6e210618f4d7a17"
    },
    "www/TX_48347_Nacogdoches_County.zip": {
      "checksum": "34397120aee798554199903801c0eb8d"
    },
    "www/TX_48349_Navarro_County.zip": {
      "checksum": "cb4e1845d787579cad9dbbbce2bc61a9"
    },
    "www/TX_48351_Newton_County.zip": {
      "checksum": "6fbd14bbae47e82e0c466338d159bcd5"
    },
    "www/TX_48353_Nolan_County.zip": {
      "checksum": "3bd6a6a15a9b78355cbfa4e7a4f9294f"
    },
    "www/TX_48355_Nueces_County.zip": {
      "checksum": "667e2c450ac099933aed75d33bcc3536"
    },
    "www/TX_48359_Oldham_County.zip": {
      "checksum": "7031171c34f3ea05f7f8d7e1bf76cc93"
    },
    "www/TX_48361_Orange_County.zip": {
      "checksum": "d010c8e0af95d007ec7aa4317ea192be"
    },
    "www/TX_48363_Palo_Pinto_County.zip": {
      "checksum": "b19e07c375dbdf26a59e19c645e5b63c"
    },
    "www/TX_48365_Panola_County.zip": {
      "checksum": "7b0407a6de7c7c6ffc9109a730b0df60"
    },
    "www/TX_48367_Parker_County.zip": {
      "checksum": "816de70d28502514aa784868b0743b6c"
    },
    "www/TX_48369_Parmer_County.zip": {
      "checksum": "44fd79e2420bf05f4928993479b3c753"
    },
    "www/TX_48373_Polk_County.zip": {
      "checksum": "3edce9bf3f7d0faa0ae9a98a7757c1f1"
    },
    "www/TX_48375_Potter_County.zip": {
      "checksum": "b7edfeebf8d2944e2df555f042bf89d8"
    },
    "www/TX_48377_Presidio_County.zip": {
      "checksum": "0db50866c70440df630bb9bdc16d8c71"
    },
    "www/TX_48379_Rains_County.zip": {
      "checksum": "eca12d4d0e67e9c7b49c7836095cf660"
    },
    "www/TX_48381_Randall_County.zip": {
      "checksum": "30c052918bba6485e527910f5aaacd46"
    },
    "www/TX_48383_Reagan_County.zip": {
      "checksum": "9f3645287b3ca91f706f9008821f8f17"
    },
    "www/TX_48385_Real_County.zip": {
      "checksum": "d4fb0fd43d1a913c232275c615cfc205"
    },
    "www/TX_48387_Red_River_County.zip": {
      "checksum": "cb534b0299f54f05a7c53c712ebed415"
    },
    "www/TX_48391_Refugio_County.zip": {
      "checksum": "59449a947e42010d6116d38c210ba7b6"
    },
    "www/TX_48393_Roberts_County.zip": {
      "checksum": "f7f2711b6524bd123453484f5d88e277"
    },
    "www/TX_48395_Robertson_County.zip": {
      "checksum": "38fa42f28696c76d98577174f36e5ecf"
    },
    "www/TX_48397_Rockwall_County.zip": {
      "checksum": "935241d90a0ed41d135d0658bed23710"
    },
    "www/TX_48399_Runnels_County.zip": {
      "checksum": "085c25745372b380be9ad71ab7a45cf9"
    },
    "www/TX_48401_Rusk_County.zip": {
      "checksum": "d5792815e1eaf8b68b81c19c71bdf34a"
    },
    "www/TX_48403_Sabine_County.zip": {
      "checksum": "9b758e3ed4ffb223aef2ab0ed6645158"
    },
    "www/TX_48405_San_Augustine_County.zip": {
      "checksum": "a8500c0593d877d112f7e8a41dafebd1"
    },
    "www/TX_48407_San_Jacinto_County.zip": {
      "checksum": "760fc47d8f2e5528b468e883907d5334"
    },
    "www/TX_48409_San_Patricio_County.zip": {
      "checksum": "aa79a2c1facdf4399c0a3e21408a7197"
    },
    "www/TX_48411_San_Saba_County.zip": {
      "checksum": "a4ca52fd7d97d307706a2d587d9fa0a1"
    },
    "www/TX_48413_Schleicher_County.zip": {
      "checksum": "af662f7cc48b17b71714da4e3e2de840"
    },
    "www/TX_48415_Scurry_County.zip": {
      "checksum": "93581ea1c7aa795a0ad6796948d05ed5"
    },
    "www/TX_48419_Shelby_County.zip": {
      "checksum": "51c28457e5b51f3d48dc40d027f3ba0c"
    },
    "www/TX_48423_Smith_County.zip": {
      "checksum": "231b3d67b6ed61c82d99e30b13336d1d"
    },
    "www/TX_48425_Somervell_County.zip": {
      "checksum": "421485f387dac4493cd9124c95247678"
    },
    "www/TX_48427_Starr_County.zip": {
      "checksum": "06cb7dfc92362d4edb2dbc286cf761aa"
    },
    "www/TX_48429_Stephens_County.zip": {
      "checksum": "d95c3233cc1693378f2d68b27bf3d791"
    },
    "www/TX_48431_Sterling_County.zip": {
      "checksum": "e63391731893f2c8cfa309c01eeda323"
    },
    "www/TX_48433_Stonewall_County.zip": {
      "checksum": "53362b10216cdbaf67ff2f5d18b59992"
    },
    "www/TX_48435_Sutton_County.zip": {
      "checksum": "44f27eeab8bd8c43a121473df3cae8e7"
    },
    "www/TX_48437_Swisher_County.zip": {
      "checksum": "6c10f45ba34ab857f742d9bf959a9037"
    },
    "www/TX_48439_Tarrant_County.zip": {
      "checksum": "dc82d8e876cc8fbdef691f4d1f916dbf"
    },
    "www/TX_48441_Taylor_County.zip": {
      "checksum": "854b6895baec7b5361ed6f057fd95213"
    },
    "www/TX_48443_Terrell_County.zip": {
      "checksum": "2b303de99ce5a2295c12c0d2b9e955f6"
    },
    "www/TX_48445_Terry_County.zip": {
      "checksum": "932ca6aef6877f9dd32ea8866251affb"
    },
    "www/TX_48447_Throckmorton_County.zip": {
      "checksum": "d54d7ddfa3efec01ca7cb7a6d1ac140f"
    },
    "www/TX_48449_Titus_County.zip": {
      "checksum": "bbaf234c993a02bbcccc2ea2ffa0ce0c"
    },
    "www/TX_48451_Tom_Green_County.zip": {
      "checksum": "d10be204d7630765e9f401745d4bf44a"
    },
    "www/TX_48453_Travis_County.zip": {
      "checksum": "2692e5a66767cad3c71efaac4aab10e2"
    },
    "www/TX_48455_Trinity_County.zip": {
      "checksum": "d4dae60ef48049bcd94958ce9448bddc"
    },
    "www/TX_48457_Tyler_County.zip": {
      "checksum": "a91b66ee249de3cb275f9d661fa4a66b"
    },
    "www/TX_48459_Upshur_County.zip": {
      "checksum": "6f38ebbca9280fb2959f17fc5d315c1c"
    },
    "www/TX_48461_Upton_County.zip": {
      "checksum": "c636e90e0069b3b5bc6422391e74fb83"
    },
    "www/TX_48463_Uvalde_County.zip": {
      "checksum": "0ba2090393f9cf16766bb65b52f334cb"
    },
    "www/TX_48465_Val_Verde_County.zip": {
      "checksum": "8624e13dd769abb1bf90fd9793d43740"
    },
    "www/TX_48467_Van_Zandt_County.zip": {
      "checksum": "a26b97ea9ce8c653c8938ca16da403d0"
    },
    "www/TX_48469_Victoria_County.zip": {
      "checksum": "93e77db506be841d31cfa998b5aac835"
    },
    "www/TX_48471_Walker_County.zip": {
      "checksum": "9ea47d735563461ea5d41e6de7c56960"
    },
    "www/TX_48473_Waller_County.zip": {
      "checksum": "85ca504e85074c228ddf05108227c7d1"
    },
    "www/TX_48475_Ward_County.zip": {
      "checksum": "0ce6cbb2f75e743abc59e2023cbecc52"
    },
    "www/TX_48477_Washington_County.zip": {
      "checksum": "9cb60bd16e987f94db3baf0fd60fd518"
    },
    "www/TX_48479_Webb_County.zip": {
      "checksum": "2086d10fcc7554dd35551784867f7276"
    },
    "www/TX_48481_Wharton_County.zip": {
      "checksum": "4be5bb21924b0a42fd58f4e0b52e99fb"
    },
    "www/TX_48485_Wichita_County.zip": {
      "checksum": "3b539b9168d31cfc6c62c48d8a172096"
    },
    "www/TX_48487_Wilbarger_County.zip": {
      "checksum": "67784832ac8fe5621748ba507f3a31b7"
    },
    "www/TX_48489_Willacy_County.zip": {
      "checksum": "79d704d756837b3d62f09b74b59ee59c"
    },
    "www/TX_48491_Williamson_County.zip": {
      "checksum": "6d3f759fb0c55b9bab96bb57f612a3f6"
    },
    "www/TX_48493_Wilson_County.zip": {
      "checksum": "a70be1e5a65fd9b4f27d66089b9762aa"
    },
    "www/TX_48495_Winkler_County.zip": {
      "checksum": "4ee807fd1704fe4c8cfcbc36ae9c041a"
    },
    "www/TX_48497_Wise_County.zip": {
      "checksum": "6093311d65c03e813ce3172bd72038a1"
    },
    "www/TX_48499_Wood_County.zip": {
      "checksum": "a9ac201cb0e4d5a4bd68b74b1800ea46"
    },
    "www/TX_48501_Yoakum_County.zip": {
      "checksum": "87b31668828ed202b41a0279aff9e8d7"
    },
    "www/TX_48503_Young_County.zip": {
      "checksum": "fedc3af046984590e806674bbea1b687"
    },
    "www/TX_48505_Zapata_County.zip": {
      "checksum": "c5a3b56c3b95195ca72807dd2ff69070"
    },
    "www/TX_48507_Zavala_County.zip": {
      "checksum": "e42d7fbfd7ab3dd3e03b11d81991bc1f"
    },
    "www/UT_49001_Beaver_County.zip": {
      "checksum": "f5d7db0846326e3afe42327c7d227f0c"
    },
    "www/UT_49003_Box_Elder_County.zip": {
      "checksum": "f7ae8640139080bd45947b7f4a129731"
    },
    "www/UT_49005_Cache_County.zip": {
      "checksum": "53d82669febabb7839684839b21ceddd"
    },
    "www/UT_49007_Carbon_County.zip": {
      "checksum": "e96617e31b3aad471a2e812649ecfbab"
    },
    "www/UT_49011_Davis_County.zip": {
      "checksum": "93750c1590671bb7e87429d37648aa2f"
    },
    "www/UT_49013_Duchesne_County.zip": {
      "checksum": "9ae0e86f26a67d38c27cb2e026b4bc24"
    },
    "www/UT_49021_Iron_County.zip": {
      "checksum": "46ff668e1fa20a82dc734eb9cd85aca6"
    },
    "www/UT_49025_Kane_County.zip": {
      "checksum": "3183eee41790764669f8eb9aba161142"
    },
    "www/UT_49027_Millard_County.zip": {
      "checksum": "b7ce02d39a9476afdb4957e0ea8f88e5"
    },
    "www/UT_49033_Rich_County.zip": {
      "checksum": "2e81949710c1a65dda1d2792ffc7881d"
    },
    "www/UT_49035_Salt_Lake_County.zip": {
      "checksum": "40fb1a6eb87201b51a80df5f4caf05cb"
    },
    "www/UT_49039_Sanpete_County.zip": {
      "checksum": "822710b2867cfa56cad7576014955e5d"
    },
    "www/UT_49041_Sevier_County.zip": {
      "checksum": "4ec0ca1c8d3ef22b9a0e7a7b8731669f"
    },
    "www/UT_49043_Summit_County.zip": {
      "checksum": "b97c27761bead5c85bdf50038ba1a2ef"
    },
    "www/UT_49045_Tooele_County.zip": {
      "checksum": "d4d3856a0978f050b0f8b781156b1624"
    },
    "www/UT_49047_Uintah_County.zip": {
      "checksum": "970f20de1d1fb9bfd9d9b7ba66722862"
    },
    "www/UT_49049_Utah_County.zip": {
      "checksum": "d70532fa9dbee58ffbef65b822711891"
    },
    "www/UT_49051_Wasatch_County.zip": {
      "checksum": "0a73e1f3f719cb4bcf30573c0a0d8e0b"
    },
    "www/UT_49053_Washington_County.zip": {
      "checksum": "7fee819477be677bb2335aab7399e5c9"
    },
    "www/UT_49057_Weber_County.zip": {
      "checksum": "925a57efc0d553460e32bd2739479e0a"
    },
    "www/VA_51001_Accomack_County.zip": {
      "checksum": "ac348ddfd699554ca34f054d5ed61dc6"
    },
    "www/VA_51003_Albemarle_County.zip": {
      "checksum": "f7fc6537af74c4b3f522921b4e4ab692"
    },
    "www/VA_51005_Alleghany_County.zip": {
      "checksum": "b0626dd2b547d1561290bfc2d33f48ce"
    },
    "www/VA_51007_Amelia_County.zip": {
      "checksum": "bd4824638146f54b491a89b8131fa96a"
    },
    "www/VA_51009_Amherst_County.zip": {
      "checksum": "48a4a6bdcb6f06e8b4e6ada1dab8994f"
    },
    "www/VA_51011_Appomattox_County.zip": {
      "checksum": "6c6a2b38649555e8ab23e953b4e0ff94"
    },
    "www/VA_51013_Arlington_County.zip": {
      "checksum": "0990aad04a97ad0420bf5cee0825df7a"
    },
    "www/VA_51015_Augusta_County.zip": {
      "checksum": "9a897a2eddadf63001ef02abbe36099b"
    },
    "www/VA_51017_Bath_County.zip": {
      "checksum": "c888f6894b7920099e4322527d7a4b99"
    },
    "www/VA_51019_Bedford_County.zip": {
      "checksum": "0fa7532f236ca966765c87c17a9021be"
    },
    "www/VA_51021_Bland_County.zip": {
      "checksum": "2c450359d49ea9b85f9301e4859dcfdc"
    },
    "www/VA_51023_Botetourt_County.zip": {
      "checksum": "a0fe1c756131ff7231d87a1fdb4b8575"
    },
    "www/VA_51025_Brunswick_County.zip": {
      "checksum": "60af2b36b586f7537e3475bb0c4349d5"
    },
    "www/VA_51027_Buchanan_County.zip": {
      "checksum": "527056a2e908ffd01390dc648681fcb0"
    },
    "www/VA_51029_Buckingham_County.zip": {
      "checksum": "f327e7774c1a10e8f63f20ed04a239cb"
    },
    "www/VA_51031_Campbell_County.zip": {
      "checksum": "581adb9d495c8c4097494b7cd27c72fc"
    },
    "www/VA_51033_Caroline_County.zip": {
      "checksum": "9361b3e09c325f5f37b437dd6b44adf8"
    },
    "www/VA_51035_Carroll_County.zip": {
      "checksum": "f88b9cca749e50725b0c1ecb2421c13e"
    },
    "www/VA_51036_Charles_City_County.zip": {
      "checksum": "d8c0c9f6399695f0b31fbca316fac9e6"
    },
    "www/VA_51037_Charlotte_County.zip": {
      "checksum": "ad1fc6cc9cfd2272bef98409b3562111"
    },
    "www/VA_51041_Chesterfield_County.zip": {
      "checksum": "390ebef692dd1e0ece26f8c796beb09e"
    },
    "www/VA_51043_Clarke_County.zip": {
      "checksum": "a6d3b99b7840937ef2ca254db3129e69"
    },
    "www/VA_51045_Craig_County.zip": {
      "checksum": "00a71c0ac84486a736bf1827aa626dcc"
    },
    "www/VA_51047_Culpeper_County.zip": {
      "checksum": "87ffec03803c82a65f38309f181f523f"
    },
    "www/VA_51049_Cumberland_County.zip": {
      "checksum": "644637aaafc84da83fbab4f87ae27ef7"
    },
    "www/VA_51051_Dickenson_County.zip": {
      "checksum": "ef716244fc1a20fdad06164876fe86a0"
    },
    "www/VA_51053_Dinwiddie_County.zip": {
      "checksum": "b04efd7976bef4e646331153f9eecc8b"
    },
    "www/VA_51057_Essex_County.zip": {
      "checksum": "15a27907999a25573224e1ec5106d2a0"
    },
    "www/VA_51059_Fairfax_County.zip": {
      "checksum": "54ad231089590d2bf70b81080e82c0da"
    },
    "www/VA_51061_Fauquier_County.zip": {
      "checksum": "5acfacedd2727f0f611fb414f68a4b81"
    },
    "www/VA_51063_Floyd_County.zip": {
      "checksum": "78a595250d3000ed23251f843b0ff3f2"
    },
    "www/VA_51065_Fluvanna_County.zip": {
      "checksum": "0e07e1ac2f06b80859849ddda8181b38"
    },
    "www/VA_51067_Franklin_County.zip": {
      "checksum": "3670308ad6b8c5c41a44d51c0eac240b"
    },
    "www/VA_51069_Frederick_County.zip": {
      "checksum": "ff71ef60563ee83e0e5946566e878f7d"
    },
    "www/VA_51071_Giles_County.zip": {
      "checksum": "86ebf0de65af7c2733540c57cad68030"
    },
    "www/VA_51073_Gloucester_County.zip": {
      "checksum": "25cac285252aa7062d05a057b00c3460"
    },
    "www/VA_51075_Goochland_County.zip": {
      "checksum": "6e221d12de73f8260a6a39dc01a4f203"
    },
    "www/VA_51077_Grayson_County.zip": {
      "checksum": "5fbf66c6626fb131b0e0e5f79850bfa2"
    },
    "www/VA_51079_Greene_County.zip": {
      "checksum": "b0d85411c0c2d5cb1708e701fc86892c"
    },
    "www/VA_51081_Greensville_County.zip": {
      "checksum": "9f24e8b7cacc1814a4fa2c7b261cf52a"
    },
    "www/VA_51083_Halifax_County.zip": {
      "checksum": "012bf5d0f9c8e6becf140066ef19cc0a"
    },
    "www/VA_51085_Hanover_County.zip": {
      "checksum": "2ad7c58a53f29d9eceed381efc25f86c"
    },
    "www/VA_51087_Henrico_County.zip": {
      "checksum": "1fbd92f676e2a23455284828a8375633"
    },
    "www/VA_51089_Henry_County.zip": {
      "checksum": "c6161e46dccf7d7f674f9a4dff568895"
    },
    "www/VA_51091_Highland_County.zip": {
      "checksum": "98a40eb6b13bd830af6cabe70b8db4ae"
    },
    "www/VA_51093_Isle_of_Wight_County.zip": {
      "checksum": "6d7bd43a91931d0b7902b0d87ede1685"
    },
    "www/VA_51095_James_City_County.zip": {
      "checksum": "426b81de1913cdd7932d22c3e2b4c482"
    },
    "www/VA_51097_King_and_Queen_County.zip": {
      "checksum": "3da7d4226612dcd71840d5ea379fee10"
    },
    "www/VA_51099_King_George_County.zip": {
      "checksum": "891611f2849ee21b9fa23215bbcc4e24"
    },
    "www/VA_51101_King_William_County.zip": {
      "checksum": "751a5e7cebfec5e489efcd0a08312238"
    },
    "www/VA_51103_Lancaster_County.zip": {
      "checksum": "f63f088001cc00782dd1b4c57f39d5e2"
    },
    "www/VA_51105_Lee_County.zip": {
      "checksum": "cc3acb0b80c2332ecaf15ed5d6692965"
    },
    "www/VA_51107_Loudoun_County.zip": {
      "checksum": "398f3efa28b0fbc479cc52d48c149da6"
    },
    "www/VA_51109_Louisa_County.zip": {
      "checksum": "0a75ddf125197c435ef8eb8998aa78fb"
    },
    "www/VA_51111_Lunenburg_County.zip": {
      "checksum": "9a7091b1153857a49377fe2f315c914c"
    },
    "www/VA_51113_Madison_County.zip": {
      "checksum": "19d819f4e6d8396984f73746b4ebef7b"
    },
    "www/VA_51115_Mathews_County.zip": {
      "checksum": "ac0db2949cefe21c2803e3231f672faa"
    },
    "www/VA_51117_Mecklenburg_County.zip": {
      "checksum": "8e29c799fd25e406698e368f855fad9a"
    },
    "www/VA_51119_Middlesex_County.zip": {
      "checksum": "0dc6d69c85a84bea9ae05fb7cae15b56"
    },
    "www/VA_51121_Montgomery_County.zip": {
      "checksum": "cceaa2aae7fc9b776fc31b6a696817d9"
    },
    "www/VA_51125_Nelson_County.zip": {
      "checksum": "ae098a853c4f9e1a1e4b6e84856f92e9"
    },
    "www/VA_51127_New_Kent_County.zip": {
      "checksum": "a7518c444e1d9e3ca19653ac6bf8ac7f"
    },
    "www/VA_51131_Northampton_County.zip": {
      "checksum": "a3857fab32cd32eb4e264c6d5792b733"
    },
    "www/VA_51133_Northumberland_County.zip": {
      "checksum": "9c827a1947435f176bd280740d71a848"
    },
    "www/VA_51135_Nottoway_County.zip": {
      "checksum": "e1fca9c1188a0d57b634251b7e41e8ba"
    },
    "www/VA_51137_Orange_County.zip": {
      "checksum": "6ae9147fae412e08165a17bb93c928fb"
    },
    "www/VA_51139_Page_County.zip": {
      "checksum": "123ee0802c88d973d151c071cbe63a5a"
    },
    "www/VA_51141_Patrick_County.zip": {
      "checksum": "7c05d5f0d7b5d44b69f80e755a559eb3"
    },
    "www/VA_51143_Pittsylvania_County.zip": {
      "checksum": "3cec2392e2fe21b6129f38e3c1c49e45"
    },
    "www/VA_51145_Powhatan_County.zip": {
      "checksum": "e5caa181389b6e692ad224362bf4cb0d"
    },
    "www/VA_51147_Prince_Edward_County.zip": {
      "checksum": "d46b15bb8875baccfe62fd508cbe4722"
    },
    "www/VA_51149_Prince_George_County.zip": {
      "checksum": "059587bbb3cdcf97c3e6e2fdc57c2812"
    },
    "www/VA_51153_Prince_William_County.zip": {
      "checksum": "27db840dad767e49420fdba10716265b"
    },
    "www/VA_51155_Pulaski_County.zip": {
      "checksum": "bb2d66417cb5d043123da248d0205ffc"
    },
    "www/VA_51157_Rappahannock_County.zip": {
      "checksum": "7947159352788615c027c3fe7988f615"
    },
    "www/VA_51159_Richmond_County.zip": {
      "checksum": "56dadab08be774e9be6cc4cf2ecc3347"
    },
    "www/VA_51161_Roanoke_County.zip": {
      "checksum": "47acfb7c295d7a979a5119bdd55f2c2f"
    },
    "www/VA_51163_Rockbridge_County.zip": {
      "checksum": "4c5cddc375d45288783336f7fa35121f"
    },
    "www/VA_51165_Rockingham_County.zip": {
      "checksum": "aa1b82d56560acdb0e8c0348b42e7c6e"
    },
    "www/VA_51167_Russell_County.zip": {
      "checksum": "a360b0672b756001249f91680ffaf388"
    },
    "www/VA_51169_Scott_County.zip": {
      "checksum": "906d2678b63d0625b423053aaceadd52"
    },
    "www/VA_51171_Shenandoah_County.zip": {
      "checksum": "daae0a768eda38e54fa241035f4f65fd"
    },
    "www/VA_51173_Smyth_County.zip": {
      "checksum": "f018af7bf96c5f5ab1b746b3e7b1d3e7"
    },
    "www/VA_51175_Southampton_County.zip": {
      "checksum": "e5fca3bf91e9b33b91075fac2052163c"
    },
    "www/VA_51177_Spotsylvania_County.zip": {
      "checksum": "a321042acbe2ec26f5294eaf897496a1"
    },
    "www/VA_51179_Stafford_County.zip": {
      "checksum": "c3fd9b65973b9ef411af9adff85252d7"
    },
    "www/VA_51181_Surry_County.zip": {
      "checksum": "ef35a52f9cc9ae00e6b6abe9d199b808"
    },
    "www/VA_51183_Sussex_County.zip": {
      "checksum": "c8bb69009d32bf4fd877953a042e414d"
    },
    "www/VA_51185_Tazewell_County.zip": {
      "checksum": "7656c6230f17b1a336d31d00e51e7344"
    },
    "www/VA_51187_Warren_County.zip": {
      "checksum": "323c75a24789a81ba3fd73324e4419b0"
    },
    "www/VA_51191_Washington_County.zip": {
      "checksum": "3dc1ef87837f8545260ce7aa853efb4d"
    },
    "www/VA_51193_Westmoreland_County.zip": {
      "checksum": "23741aa4bcf1677bf88d2e43deb2a8c5"
    },
    "www/VA_51195_Wise_County.zip": {
      "checksum": "fc1502acb2439e895d121b7e277f5f4d"
    },
    "www/VA_51197_Wythe_County.zip": {
      "checksum": "62dfab84dcb5989fcca34612041c5099"
    },
    "www/VA_51199_York_County.zip": {
      "checksum": "a9dd9636960b1210a81bc00040040c2e"
    },
    "www/VA_51510_Alexandria_city.zip": {
      "checksum": "95bb8bc65832e403f3255ea1c44358ae"
    },
    "www/VA_51520_Bristol_city.zip": {
      "checksum": "0314bfa6e140d190d8acb82dae3e30c1"
    },
    "www/VA_51530_Buena_Vista_city.zip": {
      "checksum": "14ab3ddbd6f1e885540ecd1c50ffbe93"
    },
    "www/VA_51540_Charlottesville_city.zip": {
      "checksum": "8a1ee1585040489dfd11ed816f2e0899"
    },
    "www/VA_51550_Chesapeake_city.zip": {
      "checksum": "5eef5de12ea68b825eac2e48bfdac96d"
    },
    "www/VA_51570_Colonial_Heights_city.zip": {
      "checksum": "edba74afaa52ffb2f32ca3072940dd72"
    },
    "www/VA_51580_Covington_city.zip": {
      "checksum": "68acd3a96fabd09687c9fcd9f44906d3"
    },
    "www/VA_51590_Danville_city.zip": {
      "checksum": "f99a267727f07a31870eaa8cd190c624"
    },
    "www/VA_51620_Franklin_city.zip": {
      "checksum": "d5698141aac290074bd8175a2cb4bb99"
    },
    "www/VA_51630_Fredericksburg_city.zip": {
      "checksum": "30baa9ae7da41e60c7714aac0ef3189a"
    },
    "www/VA_51650_Hampton_city.zip": {
      "checksum": "a0711af0d60162a664eedd6515657188"
    },
    "www/VA_51670_Hopewell_city.zip": {
      "checksum": "aef2e715713217a80e8e829eaed64bef"
    },
    "www/VA_51678_Lexington_city.zip": {
      "checksum": "076dc11da99e138cdf470c31c57b1cc5"
    },
    "www/VA_51680_Lynchburg_city.zip": {
      "checksum": "5286b29c354e6cec14edbacf8bbe13bb"
    },
    "www/VA_51690_Martinsville_city.zip": {
      "checksum": "1a282c65006f163c605126d067d5b895"
    },
    "www/VA_51700_Newport_News_city.zip": {
      "checksum": "18b66af1d565b8b4239dd5745051c268"
    },
    "www/VA_51710_Norfolk_city.zip": {
      "checksum": "111b481a6f620d95b85dcbc2a7610fe2"
    },
    "www/VA_51720_Norton_city.zip": {
      "checksum": "9353bdff5a30012a9b9376d154f44456"
    },
    "www/VA_51730_Petersburg_city.zip": {
      "checksum": "0abf1ada323d0419a267589978c90840"
    },
    "www/VA_51740_Portsmouth_city.zip": {
      "checksum": "797ae8f380cf84e21759f1a746af0285"
    },
    "www/VA_51750_Radford_city.zip": {
      "checksum": "d80c252bbe8897fc9979414b1b80e071"
    },
    "www/VA_51760_Richmond_city.zip": {
      "checksum": "06e8a073d8abb621e19e142596b8c113"
    },
    "www/VA_51770_Roanoke_city.zip": {
      "checksum": "9ef46f9721a750ce44ed38026d6d1d7a"
    },
    "www/VA_51775_Salem_city.zip": {
      "checksum": "edd91ea943616cd6c94f637d69a2869a"
    },
    "www/VA_51790_Staunton_city.zip": {
      "checksum": "40b403e67758fbbe496422e29d8f490e"
    },
    "www/VA_51800_Suffolk_city.zip": {
      "checksum": "486b6e6ddbfe58c96fd3f19d97a41410"
    },
    "www/VA_51810_Virginia_Beach_city.zip": {
      "checksum": "dd2a8b7e038926e18102c60a0194c648"
    },
    "www/VA_51820_Waynesboro_city.zip": {
      "checksum": "b31467e1c3a8cd0bf05ed03a2ff9af78"
    },
    "www/VA_51830_Williamsburg_city.zip": {
      "checksum": "fb0bf96115a1d985bc4ab2de4b5e4be7"
    },
    "www/VA_51840_Winchester_city.zip": {
      "checksum": "ec2bb121704f1a96a16612ca540cdbf7"
    },
    "www/VI_78010_St._Croix_Island.zip": {
      "checksum": "4e993a3940d82bde280bef41718ddec5"
    },
    "www/VI_78020_St._John_Island.zip": {
      "checksum": "d7e3c2610f9494534baa061e00301a10"
    },
    "www/VI_78030_St._Thomas_Island.zip": {
      "checksum": "de5bf7d64c1fa8fce249b9c93251d327"
    },
    "www/VT_50001_Addison_County.zip": {
      "checksum": "3f7c46c6e5fe337afc72f8b419e11a0e"
    },
    "www/VT_50003_Bennington_County.zip": {
      "checksum": "09f915345ef6291defe8f03d82813be4"
    },
    "www/VT_50005_Caledonia_County.zip": {
      "checksum": "9d2c557e919fddabd304ddaab9945b43"
    },
    "www/VT_50007_Chittenden_County.zip": {
      "checksum": "058c0f4fb9c2286d6f93ea6203bc943d"
    },
    "www/VT_50009_Essex_County.zip": {
      "checksum": "d364292032029c7fc05be37dc44dd765"
    },
    "www/VT_50011_Franklin_County.zip": {
      "checksum": "6f75b49a01e56d4a5dd8c5d5773cce95"
    },
    "www/VT_50013_Grand_Isle_County.zip": {
      "checksum": "ef5136a27fae29b17ef5884a085a6b27"
    },
    "www/VT_50015_Lamoille_County.zip": {
      "checksum": "b60f0432121eb636e4ab76320b06c660"
    },
    "www/VT_50017_Orange_County.zip": {
      "checksum": "77225b61dfcb62920fc767f5d3d87f4e"
    },
    "www/VT_50019_Orleans_County.zip": {
      "checksum": "2e9c15e073978798b821316639364b6f"
    },
    "www/VT_50021_Rutland_County.zip": {
      "checksum": "d9782a8abacd386860cf6b8a6dc3a367"
    },
    "www/VT_50023_Washington_County.zip": {
      "checksum": "8daf206c10ffe246c52da8a80f8ca56e"
    },
    "www/VT_50025_Windham_County.zip": {
      "checksum": "bed6a9f2630894b338e98f5a83d2dc0f"
    },
    "www/VT_50027_Windsor_County.zip": {
      "checksum": "6d156864ddddf6b6a49a77c40e1a57bb"
    },
    "www/WA_53001_Adams_County.zip": {
      "checksum": "55ab0157b0d34dd1a91e1433d02eb931"
    },
    "www/WA_53003_Asotin_County.zip": {
      "checksum": "1b0c64f7593248c2964b290d8d8bd672"
    },
    "www/WA_53005_Benton_County.zip": {
      "checksum": "47fcdd7b45178d3484a1c843b0789818"
    },
    "www/WA_53007_Chelan_County.zip": {
      "checksum": "3574c29215cb8bcf5c6469e5b8e17590"
    },
    "www/WA_53009_Clallam_County.zip": {
      "checksum": "dc8baf70c1e0f58333be2093b86bb23e"
    },
    "www/WA_53011_Clark_County.zip": {
      "checksum": "5c1524eb923d79417b7c758083167e30"
    },
    "www/WA_53013_Columbia_County.zip": {
      "checksum": "1e5d3ec404b26056f31aa1614b913ef1"
    },
    "www/WA_53015_Cowlitz_County.zip": {
      "checksum": "b4257bfed2088e1507e140976d34b4b6"
    },
    "www/WA_53017_Douglas_County.zip": {
      "checksum": "75b55992a18c626b355bbab94c932736"
    },
    "www/WA_53021_Franklin_County.zip": {
      "checksum": "80d88ed68e16246c82cd375203b0457d"
    },
    "www/WA_53025_Grant_County.zip": {
      "checksum": "c103484e4b41d6d89900072b19f11e83"
    },
    "www/WA_53027_Grays_Harbor_County.zip": {
      "checksum": "8bbd4a44aec58978e8a751936eb08ba5"
    },
    "www/WA_53029_Island_County.zip": {
      "checksum": "d554669287e9de68f057c9d77c392532"
    },
    "www/WA_53031_Jefferson_County.zip": {
      "checksum": "c3c1c623b06a77ccf3710f75cd5152bc"
    },
    "www/WA_53033_King_County.zip": {
      "checksum": "77666d6e94832c5aa3f08ca5faeb787e"
    },
    "www/WA_53035_Kitsap_County.zip": {
      "checksum": "c95b8dd39f94f37ca460cade67a9cfcb"
    },
    "www/WA_53037_Kittitas_County.zip": {
      "checksum": "1f05218f7561a38c118eaa4ab6d0ee09"
    },
    "www/WA_53039_Klickitat_County.zip": {
      "checksum": "ac10bf1914b8d837e3a6d9ddbaa10bf8"
    },
    "www/WA_53041_Lewis_County.zip": {
      "checksum": "1933203ad0e82715358ddbddd957ed21"
    },
    "www/WA_53045_Mason_County.zip": {
      "checksum": "e7b53e8d710cc5efac27fe444bbddd8b"
    },
    "www/WA_53047_Okanogan_County.zip": {
      "checksum": "2bba3b3a4f1ae74b59bd44d8d8cb93f1"
    },
    "www/WA_53049_Pacific_County.zip": {
      "checksum": "dbde16c991feb8d8cd3f7c527315898a"
    },
    "www/WA_53051_Pend_Oreille_County.zip": {
      "checksum": "78a4d94f72dee387c17ea66b88c84b0a"
    },
    "www/WA_53053_Pierce_County.zip": {
      "checksum": "f0a8e5541b8a46d4ee6608c219018397"
    },
    "www/WA_53055_San_Juan_County.zip": {
      "checksum": "ecefc19e1c89d063e6402341b6c2e3d4"
    },
    "www/WA_53057_Skagit_County.zip": {
      "checksum": "c9b01292e37b96fb252f046a889599cd"
    },
    "www/WA_53059_Skamania_County.zip": {
      "checksum": "e4bec43f3afab53a99ea2779618e895e"
    },
    "www/WA_53061_Snohomish_County.zip": {
      "checksum": "ece4f81888d3a7b745a031a5f815bb5e"
    },
    "www/WA_53063_Spokane_County.zip": {
      "checksum": "6ddccdf026472f9a5b9d3a747a2781aa"
    },
    "www/WA_53065_Stevens_County.zip": {
      "checksum": "d07e520b672c4456cdd1260d8ccffc42"
    },
    "www/WA_53067_Thurston_County.zip": {
      "checksum": "22eb99ea9ad8c409f6b69d6d6e380ed3"
    },
    "www/WA_53069_Wahkiakum_County.zip": {
      "checksum": "be75bc6fd0f894259272eb19af40fc56"
    },
    "www/WA_53071_Walla_Walla_County.zip": {
      "checksum": "0d1313e0a9fe8f43a41982ad521a7feb"
    },
    "www/WA_53073_Whatcom_County.zip": {
      "checksum": "a3e63d6d3dca7aba8ffc52074236db4e"
    },
    "www/WA_53077_Yakima_County.zip": {
      "checksum": "f1f732b3200fcca9cb818edc120d12f2"
    },
    "www/WI_55001_Adams_County.zip": {
      "checksum": "246f87ae852c71e4390e6a96a1139dcf"
    },
    "www/WI_55003_Ashland_County.zip": {
      "checksum": "5b7a2e7e6bb82da2e6c3a0df61622897"
    },
    "www/WI_55005_Barron_County.zip": {
      "checksum": "714381687238c3676055a94c5c6aa9a9"
    },
    "www/WI_55007_Bayfield_County.zip": {
      "checksum": "ab772bb172e941fe8f749efa63d81183"
    },
    "www/WI_55009_Brown_County.zip": {
      "checksum": "3eef74f418812c92bd9641752fa2ede2"
    },
    "www/WI_55011_Buffalo_County.zip": {
      "checksum": "13d6f8ac83776cf99c97782abd73a739"
    },
    "www/WI_55013_Burnett_County.zip": {
      "checksum": "d77ca536d54a65563a7c228bafca4222"
    },
    "www/WI_55015_Calumet_County.zip": {
      "checksum": "3dda994698d63f07c65f88765d29de44"
    },
    "www/WI_55017_Chippewa_County.zip": {
      "checksum": "dd6830f8129f3ed83a8a652210fe67be"
    },
    "www/WI_55019_Clark_County.zip": {
      "checksum": "a1f4752b5678b51dbc531b4db4c396b4"
    },
    "www/WI_55021_Columbia_County.zip": {
      "checksum": "5af45e510adba6096c93169bf903d811"
    },
    "www/WI_55023_Crawford_County.zip": {
      "checksum": "4cc444b281d8b7157f8f0d9de9ab8042"
    },
    "www/WI_55025_Dane_County.zip": {
      "checksum": "bfd335d827744b99d59180425718c64a"
    },
    "www/WI_55027_Dodge_County.zip": {
      "checksum": "b6bb00e394525e302b03570747fcbaaa"
    },
    "www/WI_55029_Door_County.zip": {
      "checksum": "59f759741f6ce22cf3c62a26a29f7dc7"
    },
    "www/WI_55031_Douglas_County.zip": {
      "checksum": "f22b2f801e153e2d93bf5137da70c7ae"
    },
    "www/WI_55033_Dunn_County.zip": {
      "checksum": "246955c78102081401f9efc9dc6c4feb"
    },
    "www/WI_55035_Eau_Claire_County.zip": {
      "checksum": "27dca69fad7699abe54a9f5a1eb6fb26"
    },
    "www/WI_55037_Florence_County.zip": {
      "checksum": "7b9f4df83b51032bbaf979fcfed3f13a"
    },
    "www/WI_55039_Fond_du_Lac_County.zip": {
      "checksum": "82e8f078b3f0ef244a127ebc47218222"
    },
    "www/WI_55041_Forest_County.zip": {
      "checksum": "1cf1fe9737aff1f3f51f9589079c5559"
    },
    "www/WI_55043_Grant_County.zip": {
      "checksum": "eb0746c38222559c779cdb07b6d1eea8"
    },
    "www/WI_55045_Green_County.zip": {
      "checksum": "fea3ad35ad86627ccfab3b1f351d9f94"
    },
    "www/WI_55047_Green_Lake_County.zip": {
      "checksum": "ef25498a9ea02cbc7b89b93689691093"
    },
    "www/WI_55049_Iowa_County.zip": {
      "checksum": "81368b7bf1466a8b809e8bba4aa790ec"
    },
    "www/WI_55051_Iron_County.zip": {
      "checksum": "25c91670b7ddd168b1d2796af632f0c5"
    },
    "www/WI_55053_Jackson_County.zip": {
      "checksum": "836b85342741618938fd5e073307e51c"
    },
    "www/WI_55055_Jefferson_County.zip": {
      "checksum": "3730599d763ea8a5944e81715ebe238a"
    },
    "www/WI_55057_Juneau_County.zip": {
      "checksum": "ec953d3820599cf4b103147436068df5"
    },
    "www/WI_55059_Kenosha_County.zip": {
      "checksum": "e7764158a2979972c1198e503ae62016"
    },
    "www/WI_55061_Kewaunee_County.zip": {
      "checksum": "de863c056d9f10c52e978ebf17dcaa27"
    },
    "www/WI_55063_La_Crosse_County.zip": {
      "checksum": "92f0b5b3a597ed85664d1c0cfcdb6cfe"
    },
    "www/WI_55065_Lafayette_County.zip": {
      "checksum": "4bb761ca46cdf24eeac8ca1615d8dc5f"
    },
    "www/WI_55067_Langlade_County.zip": {
      "checksum": "adafe7fdcffd67536f07a71904cc22e4"
    },
    "www/WI_55069_Lincoln_County.zip": {
      "checksum": "ccde84b237913658bcb1c2ea068b4060"
    },
    "www/WI_55071_Manitowoc_County.zip": {
      "checksum": "e99e520373963c996e58b22d58f5d66f"
    },
    "www/WI_55073_Marathon_County.zip": {
      "checksum": "cbd58cd4b053b832a5238ec90f939119"
    },
    "www/WI_55075_Marinette_County.zip": {
      "checksum": "33d0d54850f409d3237072442188db2e"
    },
    "www/WI_55077_Marquette_County.zip": {
      "checksum": "e89706486a88a6796d1c2ec7f799ddd3"
    },
    "www/WI_55078_Menominee_County.zip": {
      "checksum": "71c9e8655d85a44782f0be07a4e25d5a"
    },
    "www/WI_55079_Milwaukee_County.zip": {
      "checksum": "7ccfbf5fc1497a8661837895193f75bf"
    },
    "www/WI_55081_Monroe_County.zip": {
      "checksum": "0a7b59fef9dc3378e73df443455011ba"
    },
    "www/WI_55083_Oconto_County.zip": {
      "checksum": "17b8fb6104324a0a64df5d1859f020ee"
    },
    "www/WI_55085_Oneida_County.zip": {
      "checksum": "13375edacd5e65acd2dfce621405e354"
    },
    "www/WI_55087_Outagamie_County.zip": {
      "checksum": "c1805445ad191a7606046b1b625fc8d3"
    },
    "www/WI_55089_Ozaukee_County.zip": {
      "checksum": "361042dd95d8b5c04f91f1d30ddf18c9"
    },
    "www/WI_55091_Pepin_County.zip": {
      "checksum": "03bc0da703aff5a47b07b55836a446bb"
    },
    "www/WI_55093_Pierce_County.zip": {
      "checksum": "30e5239a8a97e9575d5d6e0cd8c022f4"
    },
    "www/WI_55095_Polk_County.zip": {
      "checksum": "2e30d2aeac9d3b2e3f82ab2f5d04db11"
    },
    "www/WI_55097_Portage_County.zip": {
      "checksum": "fb1d6d79a14b58d79bda244611472aee"
    },
    "www/WI_55099_Price_County.zip": {
      "checksum": "a42cf29bb974175ed296fa239e21af1a"
    },
    "www/WI_55101_Racine_County.zip": {
      "checksum": "5353792cacb6c03a4243e9986bdf5e40"
    },
    "www/WI_55103_Richland_County.zip": {
      "checksum": "56e54078a83b736dfd1eb235a567735c"
    },
    "www/WI_55105_Rock_County.zip": {
      "checksum": "a1eb76c67115ce6de4fdc391e749064a"
    },
    "www/WI_55107_Rusk_County.zip": {
      "checksum": "c679bded1f097feb7988be57b0c18657"
    },
    "www/WI_55109_St._Croix_County.zip": {
      "checksum": "69442f71f5073600ee76b656ad77c330"
    },
    "www/WI_55111_Sauk_County.zip": {
      "checksum": "9f2379a911cb99c4d22866e36b3c5b47"
    },
    "www/WI_55113_Sawyer_County.zip": {
      "checksum": "920639ecdd625c30c9e1ce8dbe579d93"
    },
    "www/WI_55115_Shawano_County.zip": {
      "checksum": "e0b97ecee783e9b129eacb0c0e6ee29b"
    },
    "www/WI_55117_Sheboygan_County.zip": {
      "checksum": "756208ef475e60d397040a8a656edc29"
    },
    "www/WI_55119_Taylor_County.zip": {
      "checksum": "1e7eda123ecfeefd00957ae4c446868c"
    },
    "www/WI_55121_Trempealeau_County.zip": {
      "checksum": "070320ce9be9d75f47818f5b69a4641b"
    },
    "www/WI_55123_Vernon_County.zip": {
      "checksum": "6f851b10eb83ea8fcdf6be01fc0c9564"
    },
    "www/WI_55125_Vilas_County.zip": {
      "checksum": "5ed48dc7a25de9922f3db9ab978a5639"
    },
    "www/WI_55127_Walworth_County.zip": {
      "checksum": "d910839a1eb82eebad70fe2b588e66dc"
    },
    "www/WI_55129_Washburn_County.zip": {
      "checksum": "a9d776f6a3a64d472af80ff6b6b34d94"
    },
    "www/WI_55131_Washington_County.zip": {
      "checksum": "b9eaa81df52a9a81f6a558a1580e29f3"
    },
    "www/WI_55133_Waukesha_County.zip": {
      "checksum": "4c467d426fe5ef06093de4f3509c1e47"
    },
    "www/WI_55135_Waupaca_County.zip": {
      "checksum": "c57861448f35126eda365bd18069359c"
    },
    "www/WI_55137_Waushara_County.zip": {
      "checksum": "e7be39c0842049bcb7e59168fca42cef"
    },
    "www/WI_55139_Winnebago_County.zip": {
      "checksum": "79d9ed5747d1dc8e2b865fbfb1bb128c"
    },
    "www/WI_55141_Wood_County.zip": {
      "checksum": "e8d0c117c53260a1a69740fdc8c80e30"
    },
    "www/WV_54001_Barbour_County.zip": {
      "checksum": "ec83423015b8462fc291dfa279d3ee93"
    },
    "www/WV_54003_Berkeley_County.zip": {
      "checksum": "1ff01a039174308f4b441d478ad2ba97"
    },
    "www/WV_54005_Boone_County.zip": {
      "checksum": "d48ecc2e652b2e1e1ec53382415d923a"
    },
    "www/WV_54007_Braxton_County.zip": {
      "checksum": "daa87d3a2c0de739319d8d7ca21cbac2"
    },
    "www/WV_54009_Brooke_County.zip": {
      "checksum": "08fd3bac14b2def6e42eaa0883ffd5a1"
    },
    "www/WV_54011_Cabell_County.zip": {
      "checksum": "d2255bcb4e76ba48398f5fe46dd59886"
    },
    "www/WV_54013_Calhoun_County.zip": {
      "checksum": "84bd093eb5a66cdbc0824d782753fc91"
    },
    "www/WV_54015_Clay_County.zip": {
      "checksum": "b41683f8a8c621f899b5deb8f7f77c79"
    },
    "www/WV_54017_Doddridge_County.zip": {
      "checksum": "bbe28cdc7ec001a308fd35da6fd14ed1"
    },
    "www/WV_54019_Fayette_County.zip": {
      "checksum": "1a36fd4dce3c5f310eb14f71e8f7e65a"
    },
    "www/WV_54021_Gilmer_County.zip": {
      "checksum": "490ba4a6667b452c78aa377ae05eef58"
    },
    "www/WV_54023_Grant_County.zip": {
      "checksum": "ecb71469838c94914500b2a7fc33c064"
    },
    "www/WV_54025_Greenbrier_County.zip": {
      "checksum": "d3fc1857daf24e8333d997c93cfb9fd5"
    },
    "www/WV_54027_Hampshire_County.zip": {
      "checksum": "c6457a6a82582ae604aa4508e2ad8716"
    },
    "www/WV_54029_Hancock_County.zip": {
      "checksum": "8aaed8e3da8f36c60ab121ed60858922"
    },
    "www/WV_54031_Hardy_County.zip": {
      "checksum": "bf71f5710e836ecce99179eeaabb7247"
    },
    "www/WV_54033_Harrison_County.zip": {
      "checksum": "6d1a40a22358ed2ae5389b270863590a"
    },
    "www/WV_54037_Jefferson_County.zip": {
      "checksum": "c1aad57eb36c4e65604d8dc213390d8d"
    },
    "www/WV_54039_Kanawha_County.zip": {
      "checksum": "238c78a6f4a014e4ea1249743b58fa5c"
    },
    "www/WV_54041_Lewis_County.zip": {
      "checksum": "87fa45407aa4176f1061022111bf7413"
    },
    "www/WV_54043_Lincoln_County.zip": {
      "checksum": "f2acb59ddf1e7696f2cb72b6a9ad26d1"
    },
    "www/WV_54045_Logan_County.zip": {
      "checksum": "02794ec7353ffa05180bad5d60c10d2c"
    },
    "www/WV_54047_McDowell_County.zip": {
      "checksum": "3259ac31075a0d4cbb2b8f9c5fb942fd"
    },
    "www/WV_54049_Marion_County.zip": {
      "checksum": "f4141f6aa9888451e53de65bc9c149b5"
    },
    "www/WV_54051_Marshall_County.zip": {
      "checksum": "f3f4bb35e010a72b244805227cbbfe62"
    },
    "www/WV_54053_Mason_County.zip": {
      "checksum": "d22b958554249f5bcc6b2a05d58fbdfa"
    },
    "www/WV_54055_Mercer_County.zip": {
      "checksum": "4e9608a2180426f3799916723565042b"
    },
    "www/WV_54057_Mineral_County.zip": {
      "checksum": "6df6ed2f4c11b5eec4d8bf8653e8cdc7"
    },
    "www/WV_54059_Mingo_County.zip": {
      "checksum": "c973c76f87369f312144a95f06fee443"
    },
    "www/WV_54061_Monongalia_County.zip": {
      "checksum": "81b734436ced4bdf7f7aecbbf9fdb54a"
    },
    "www/WV_54063_Monroe_County.zip": {
      "checksum": "4aab722c06dd49892b84de467bbb744f"
    },
    "www/WV_54065_Morgan_County.zip": {
      "checksum": "c4653d52526bf5b659bbf39b643d9a45"
    },
    "www/WV_54067_Nicholas_County.zip": {
      "checksum": "a0354fbf8af2a4f3fb84a7700b896b43"
    },
    "www/WV_54069_Ohio_County.zip": {
      "checksum": "a0d1095c63841387a47109957d8c2379"
    },
    "www/WV_54071_Pendleton_County.zip": {
      "checksum": "f4a795c44fac810ef7a77a8123861675"
    },
    "www/WV_54075_Pocahontas_County.zip": {
      "checksum": "f22157b86773c26513c4a52abf9975fb"
    },
    "www/WV_54077_Preston_County.zip": {
      "checksum": "cad3a0e8b797a759687a05ab5c4a0ff0"
    },
    "www/WV_54079_Putnam_County.zip": {
      "checksum": "af5425db7182e341b01cfdbd3080bd43"
    },
    "www/WV_54081_Raleigh_County.zip": {
      "checksum": "8832c54be23258704e95c129b3c8eca8"
    },
    "www/WV_54083_Randolph_County.zip": {
      "checksum": "e22b561748139b0e11bf0a2908121539"
    },
    "www/WV_54085_Ritchie_County.zip": {
      "checksum": "357429a2714e8c4394467372f3f7f491"
    },
    "www/WV_54087_Roane_County.zip": {
      "checksum": "f361f220ff24cfc37329bbb6dd6e9b59"
    },
    "www/WV_54089_Summers_County.zip": {
      "checksum": "bc2b0635a334f0e42e7a5bae090993b9"
    },
    "www/WV_54091_Taylor_County.zip": {
      "checksum": "84b6b934d4b85b83742e3b9b1ffe21af"
    },
    "www/WV_54093_Tucker_County.zip": {
      "checksum": "5310393161dd8c2572196441253b57d9"
    },
    "www/WV_54095_Tyler_County.zip": {
      "checksum": "18b1f1fc9cf0acf94fe00597a54763fa"
    },
    "www/WV_54099_Wayne_County.zip": {
      "checksum": "369e0b324cca7a4d49a6b1a9feea8438"
    },
    "www/WV_54103_Wetzel_County.zip": {
      "checksum": "c62f16bc856eb2ad58267a146e850ac6"
    },
    "www/WV_54105_Wirt_County.zip": {
      "checksum": "3487ffe087fdb8cb5d55903e5dbeb20f"
    },
    "www/WV_54107_Wood_County.zip": {
      "checksum": "92189e8f8423f0609778cf52d2ed4a08"
    },
    "www/WV_54109_Wyoming_County.zip": {
      "checksum": "deed25d6e30f0caa86f0f14a5c31e277"
    },
    "www/WY_56001_Albany_County.zip": {
      "checksum": "0416f84bd7526a0bf8868de2f940ca95"
    },
    "www/WY_56003_Big_Horn_County.zip": {
      "checksum": "12c54d3c21ba77e1fcad44d5b03d792f"
    },
    "www/WY_56007_Carbon_County.zip": {
      "checksum": "f6243a45e107073689e092c6919aafa0"
    },
    "www/WY_56009_Converse_County.zip": {
      "checksum": "7386b1f3b17ab76496a5b20955afaed6"
    },
    "www/WY_56011_Crook_County.zip": {
      "checksum": "7ffb340e0893dadb187ff8aa8c78e3af"
    },
    "www/WY_56013_Fremont_County.zip": {
      "checksum": "d263218757213cde2ef3f63f27790231"
    },
    "www/WY_56015_Goshen_County.zip": {
      "checksum": "339380a364de3a0907a4d73ef67800a5"
    },
    "www/WY_56019_Johnson_County.zip": {
      "checksum": "3f2dd18048f8854c9c0a2e27137b0a68"
    },
    "www/WY_56021_Laramie_County.zip": {
      "checksum": "cb8f3b445599c5b2a330e355e8bb572c"
    },
    "www/WY_56023_Lincoln_County.zip": {
      "checksum": "04b4307b40334d8b62fd6665adc9db58"
    },
    "www/WY_56025_Natrona_County.zip": {
      "checksum": "21ec01a223d0b72f71dc9e63af85180d"
    },
    "www/WY_56029_Park_County.zip": {
      "checksum": "06a104b8a19c6ea85d0cd2ede94e5822"
    },
    "www/WY_56031_Platte_County.zip": {
      "checksum": "11c5e98b3583f057cf01c703490e7e60"
    },
    "www/WY_56035_Sublette_County.zip": {
      "checksum": "91ae5d68fa30bade015cc9b83c587a06"
    },
    "www/WY_56037_Sweetwater_County.zip": {
      "checksum": "e2361850e9b0e887cd67a309ed0d8da7"
    },
    "www/WY_56039_Teton_County.zip": {
      "checksum": "b7a53e1b5b27a89c3e78541f03d9de05"
    },
    "www/WY_56041_Uinta_County.zip": {
      "checksum": "8eb1062fc80ee8b671299ba0e8661b06"
    },
    "www/WY_56043_Washakie_County.zip": {
      "checksum": "00528c7a7cac3ef869950facc1ade720"
    }
  },
  "users": null
}
